{
  "version": 3,
  "sources": ["../../@mui/icons-material/Lock.js", "../../@mui/icons-material/Queue.js", "../../@mui/icons-material/Add.js", "../../@mui/icons-material/RemoveRedEye.js", "../../@mui/icons-material/Sort.js", "../../@mui/icons-material/ArrowDropDown.js", "../../@mui/icons-material/Delete.js", "../../@mui/icons-material/Menu.js", "../../@mui/icons-material/AccountCircle.js", "../../@mui/icons-material/PowerSettingsNew.js", "../../@mui/icons-material/Brightness4.js", "../../@mui/icons-material/Brightness7.js", "../../@mui/icons-material/CheckCircle.js", "../../@mui/icons-material/ErrorOutline.js", "../../@mui/icons-material/Dashboard.js", "../../css-mediaquery/index.js", "../../@mui/icons-material/Report.js", "../../@mui/icons-material/ExpandMore.js", "../../@mui/icons-material/History.js", "../../@mui/icons-material/Settings.js", "../../@mui/icons-material/DragIndicator.js", "../../@mui/icons-material/CancelOutlined.js", "../../@mui/icons-material/DeleteOutline.js", "../../@mui/icons-material/ViewList.js", "../../@mui/icons-material/HotTub.js", "../../@mui/icons-material/GetApp.js", "../../@mui/icons-material/Update.js", "../../@mui/icons-material/Create.js", "../../@mui/icons-material/Translate.js", "../../@mui/icons-material/List.js", "../../@mui/icons-material/Refresh.js", "../../@mui/icons-material/Save.js", "../../@mui/icons-material/AddCircleOutline.js", "../../@mui/icons-material/RemoveCircleOutline.js", "../../@mui/icons-material/ArrowCircleUp.js", "../../@mui/icons-material/ArrowCircleDown.js", "../../@mui/icons-material/HighlightOff.js", "../../lodash/_baseDifference.js", "../../lodash/difference.js", "../../@mui/icons-material/Close.js", "../../@mui/icons-material/ViewWeek.js", "../../lodash/_arrayEach.js", "../../lodash/_baseAssign.js", "../../lodash/_baseAssignIn.js", "../../lodash/_copySymbols.js", "../../lodash/_copySymbolsIn.js", "../../lodash/_initCloneArray.js", "../../lodash/_cloneDataView.js", "../../lodash/_cloneRegExp.js", "../../lodash/_cloneSymbol.js", "../../lodash/_initCloneByTag.js", "../../lodash/_baseIsMap.js", "../../lodash/isMap.js", "../../lodash/_baseIsSet.js", "../../lodash/isSet.js", "../../lodash/_baseClone.js", "../../lodash/cloneDeep.js", "../../@mui/icons-material/FilterList.js", "../../lodash/matches.js", "../../@mui/icons-material/Search.js", "../../@mui/icons-material/BookmarkBorder.js", "../../@mui/icons-material/HelpOutline.js", "../../attr-accept/dist/es/index.js", "../../@mui/icons-material/RemoveCircle.js", "../../@mui/icons-material/Clear.js", "../../@mui/icons-material/Visibility.js", "../../@mui/icons-material/VisibilityOff.js", "../../@mui/icons-material/Done.js", "../../@mui/icons-material/Error.js", "../../@mui/icons-material/Inbox.js", "../../react-admin/src/Admin.tsx", "../../ra-ui-materialui/src/auth/AuthCallback.tsx", "../../ra-ui-materialui/src/auth/AuthError.tsx", "../../ra-ui-materialui/src/button/CloneButton.tsx", "../../ra-ui-materialui/src/button/Button.tsx", "../../ra-ui-materialui/src/button/CreateButton.tsx", "../../clsx/dist/clsx.m.js", "../../ra-ui-materialui/src/button/ShowButton.tsx", "../../ra-ui-materialui/src/button/SortButton.tsx", "../../ra-ui-materialui/src/button/BulkDeleteButton.tsx", "../../ra-ui-materialui/src/button/BulkDeleteWithConfirmButton.tsx", "../../ra-ui-materialui/src/layout/AppBar.tsx", "../../ra-ui-materialui/src/layout/SidebarToggleButton.tsx", "../../ra-ui-materialui/src/layout/useSidebarState.ts", "../../ra-ui-materialui/src/layout/LoadingIndicator.tsx", "../../ra-ui-materialui/src/layout/UserMenu.tsx", "../../ra-ui-materialui/src/layout/UserMenuContextProvider.tsx", "../../ra-ui-materialui/src/layout/UserMenuContext.ts", "../../ra-ui-materialui/src/auth/Logout.tsx", "../../ra-ui-materialui/src/layout/HideOnScroll.tsx", "../../ra-ui-materialui/src/layout/TitlePortal.tsx", "../../ra-ui-materialui/src/layout/Theme/useThemesContext.ts", "../../ra-ui-materialui/src/layout/Theme/ThemesContext.ts", "../../ra-ui-materialui/src/button/ToggleThemeButton.tsx", "../../ra-ui-materialui/src/button/ToggleThemeLegacyButton.tsx", "../../ra-ui-materialui/src/layout/ApplicationUpdatedNotification.tsx", "../../ra-ui-materialui/src/layout/CardContentInner.tsx", "../../ra-ui-materialui/src/layout/CheckForApplicationUpdate.tsx", "../../ra-ui-materialui/src/layout/Confirm.tsx", "../../ra-ui-materialui/src/layout/DashboardMenuItem.tsx", "../../ra-ui-materialui/src/layout/MenuItemLink.tsx", "../../ra-ui-materialui/src/layout/DeviceTestWrapper.tsx", "../../ra-ui-materialui/src/layout/Error.tsx", "../../ra-ui-materialui/src/layout/Title.tsx", "../../ra-ui-materialui/src/layout/PageTitleConfigurable.tsx", "../../ra-ui-materialui/src/preferences/Configurable.tsx", "../../ra-ui-materialui/src/preferences/FieldsSelector.tsx", "../../ra-ui-materialui/src/preferences/FieldToggle.tsx", "../../ra-ui-materialui/src/preferences/Inspector.tsx", "../../ra-ui-materialui/src/preferences/InspectorRoot.tsx", "../../ra-ui-materialui/src/preferences/InspectorButton.tsx", "../../ra-ui-materialui/src/layout/PageTitle.tsx", "../../ra-ui-materialui/src/layout/useResetErrorBoundaryOnLocationChange.ts", "../../ra-ui-materialui/src/layout/Layout.tsx", "../../react-error-boundary/dist/react-error-boundary.esm.js", "../../ra-ui-materialui/src/layout/Sidebar.tsx", "../../ra-ui-materialui/src/layout/Menu.tsx", "../../ra-ui-materialui/src/layout/ResourceMenuItem.tsx", "../../ra-ui-materialui/src/layout/LinearProgress.tsx", "../../ra-ui-materialui/src/layout/Loading.tsx", "../../ra-ui-materialui/src/layout/LoadingPage.tsx", "../../ra-ui-materialui/src/layout/NotFound.tsx", "../../ra-ui-materialui/src/layout/Notification.tsx", "../../ra-ui-materialui/src/layout/Theme/useTheme.ts", "../../ra-ui-materialui/src/layout/Theme/ThemeProvider.tsx", "../../ra-ui-materialui/src/layout/TopToolbar.tsx", "../../ra-ui-materialui/src/layout/useUserMenu.ts", "../../ra-ui-materialui/src/button/BulkDeleteWithUndoButton.tsx", "../../ra-ui-materialui/src/button/BulkExportButton.tsx", "../../ra-ui-materialui/src/button/BulkUpdateButton.tsx", "../../ra-ui-materialui/src/button/BulkUpdateWithConfirmButton.tsx", "../../ra-ui-materialui/src/button/BulkUpdateWithUndoButton.tsx", "../../ra-ui-materialui/src/button/DeleteButton.tsx", "../../ra-ui-materialui/src/button/DeleteWithUndoButton.tsx", "../../ra-ui-materialui/src/button/DeleteWithConfirmButton.tsx", "../../ra-ui-materialui/src/button/EditButton.tsx", "../../ra-ui-materialui/src/button/ExportButton.tsx", "../../ra-ui-materialui/src/button/IconButtonWithTooltip.tsx", "../../ra-ui-materialui/src/button/LocalesMenuButton.tsx", "../../ra-ui-materialui/src/button/ListButton.tsx", "../../ra-ui-materialui/src/button/RefreshButton.tsx", "../../ra-ui-materialui/src/button/RefreshIconButton.tsx", "../../ra-ui-materialui/src/button/SaveButton.tsx", "../../ra-ui-materialui/src/button/SkipNavigationButton.tsx", "../../ra-ui-materialui/src/button/UpdateButton.tsx", "../../ra-ui-materialui/src/button/UpdateWithConfirmButton.tsx", "../../ra-ui-materialui/src/button/UpdateWithUndoButton.tsx", "../../ra-ui-materialui/src/auth/Login.tsx", "../../ra-ui-materialui/src/auth/LoginForm.tsx", "../../ra-ui-materialui/src/input/ArrayInput/ArrayInput.tsx", "../../ra-ui-materialui/src/input/InputHelperText.tsx", "../../ra-ui-materialui/src/input/sanitizeInputRestProps.ts", "../../ra-ui-materialui/src/Labeled.tsx", "../../ra-ui-materialui/src/input/ArrayInput/ArrayInputContext.ts", "../../ra-ui-materialui/src/input/ArrayInput/SimpleFormIterator.tsx", "../../ra-ui-materialui/src/input/ArrayInput/useArrayInput.ts", "../../ra-ui-materialui/src/input/ArrayInput/useSimpleFormIteratorStyles.ts", "../../ra-ui-materialui/src/input/ArrayInput/SimpleFormIteratorContext.ts", "../../ra-ui-materialui/src/input/ArrayInput/SimpleFormIteratorItem.tsx", "../../ra-ui-materialui/src/input/ArrayInput/useSimpleFormIterator.ts", "../../ra-ui-materialui/src/input/ArrayInput/SimpleFormIteratorItemContext.ts", "../../ra-ui-materialui/src/input/ArrayInput/AddItemButton.tsx", "../../ra-ui-materialui/src/input/ArrayInput/RemoveItemButton.tsx", "../../ra-ui-materialui/src/input/ArrayInput/useSimpleFormIteratorItem.ts", "../../ra-ui-materialui/src/input/ArrayInput/ReOrderButtons.tsx", "../../ra-ui-materialui/src/input/ArrayInput/ClearArrayButton.tsx", "../../ra-ui-materialui/src/input/AutocompleteInput.tsx", "../../ra-ui-materialui/src/input/useSupportCreateSuggestion.tsx", "../../ra-ui-materialui/src/input/AutocompleteArrayInput.tsx", "../../ra-ui-materialui/src/input/BooleanInput.tsx", "../../ra-ui-materialui/src/input/InputPropTypes.ts", "../../ra-ui-materialui/src/input/CheckboxGroupInput.tsx", "../../ra-ui-materialui/src/input/CheckboxGroupInputItem.tsx", "../../ra-ui-materialui/src/input/DatagridInput.tsx", "../../ra-ui-materialui/src/list/datagrid/DatagridBody.tsx", "../../ra-ui-materialui/src/list/datagrid/useDatagridStyles.tsx", "../../ra-ui-materialui/src/list/datagrid/DatagridRow.tsx", "../../ra-ui-materialui/src/list/datagrid/DatagridCell.tsx", "../../ra-ui-materialui/src/list/datagrid/ExpandRowButton.tsx", "../../ra-ui-materialui/src/list/datagrid/useDatagridContext.ts", "../../ra-ui-materialui/src/list/datagrid/DatagridContext.ts", "../../ra-ui-materialui/src/list/datagrid/DatagridHeaderCell.tsx", "../../ra-ui-materialui/src/list/datagrid/DatagridLoading.tsx", "../../ra-ui-materialui/src/list/Placeholder.tsx", "../../ra-ui-materialui/src/list/datagrid/Datagrid.tsx", "../../ra-ui-materialui/src/list/datagrid/DatagridHeader.tsx", "../../ra-ui-materialui/src/list/datagrid/ExpandAllButton.tsx", "../../ra-ui-materialui/src/list/datagrid/DatagridContextProvider.tsx", "../../ra-ui-materialui/src/list/BulkActionsToolbar.tsx", "../../ra-ui-materialui/src/list/ListNoResults.tsx", "../../ra-ui-materialui/src/list/datagrid/DatagridConfigurable.tsx", "../../ra-ui-materialui/src/list/datagrid/DatagridEditor.tsx", "../../ra-ui-materialui/src/list/datagrid/SelectColumnsButton.tsx", "../../ra-ui-materialui/src/list/filter/Filter.tsx", "../../ra-ui-materialui/src/list/filter/FilterForm.tsx", "../../ra-ui-materialui/src/list/filter/FilterFormInput.tsx", "../../ra-ui-materialui/src/list/FilterContext.tsx", "../../ra-ui-materialui/src/list/filter/FilterButton.tsx", "../../ra-ui-materialui/src/list/filter/FilterButtonMenuItem.tsx", "../../ra-ui-materialui/src/list/filter/useSavedQueries.ts", "../../ra-ui-materialui/src/list/filter/AddSavedQueryDialog.tsx", "../../ra-ui-materialui/src/list/filter/RemoveSavedQueryDialog.tsx", "../../ra-ui-materialui/src/list/filter/FilterList.tsx", "../../ra-ui-materialui/src/list/filter/FilterListItem.tsx", "../../ra-ui-materialui/src/list/filter/FilterLiveSearch.tsx", "../../ra-ui-materialui/src/list/filter/AddSavedQueryIconButton.tsx", "../../ra-ui-materialui/src/list/filter/RemoveSavedQueryIconButton.tsx", "../../ra-ui-materialui/src/list/filter/SavedQueriesList.tsx", "../../ra-ui-materialui/src/list/filter/SavedQueryFilterListItem.tsx", "../../ra-ui-materialui/src/list/pagination/InfinitePagination.tsx", "../../ra-ui-materialui/src/list/pagination/Pagination.tsx", "../../ra-ui-materialui/src/list/pagination/PaginationActions.tsx", "../../ra-ui-materialui/src/list/pagination/PaginationLimit.tsx", "../../ra-ui-materialui/src/input/DateInput.tsx", "../../ra-ui-materialui/src/input/DateTimeInput.tsx", "../../ra-ui-materialui/src/input/TimeInput.tsx", "../../ra-ui-materialui/src/input/FileInput.tsx", "../../react-dropzone/dist/es/index.js", "../../tslib/tslib.es6.mjs", "../../file-selector/src/file.ts", "../../file-selector/src/file-selector.ts", "../../react-dropzone/dist/es/utils/index.js", "../../ra-ui-materialui/src/input/FileInputPreview.tsx", "../../ra-ui-materialui/src/input/ImageInput.tsx", "../../ra-ui-materialui/src/input/LoadingInput.tsx", "../../ra-ui-materialui/src/input/ResettableTextField.tsx", "../../ra-ui-materialui/src/input/NullableBooleanInput.tsx", "../../ra-ui-materialui/src/input/NumberInput.tsx", "../../ra-ui-materialui/src/input/PasswordInput.tsx", "../../ra-ui-materialui/src/input/TextInput.tsx", "../../ra-ui-materialui/src/input/RadioButtonGroupInput.tsx", "../../ra-ui-materialui/src/input/RadioButtonGroupInputItem.tsx", "../../ra-ui-materialui/src/input/ReferenceArrayInput.tsx", "../../ra-ui-materialui/src/input/ReferenceError.tsx", "../../ra-ui-materialui/src/input/ReferenceInput.tsx", "../../ra-ui-materialui/src/input/SearchInput.tsx", "../../ra-ui-materialui/src/input/SelectArrayInput.tsx", "../../ra-ui-materialui/src/input/SelectInput.tsx", "../../ra-ui-materialui/src/input/TranslatableInputs.tsx", "../../ra-ui-materialui/src/input/TranslatableInputsTabs.tsx", "../../ra-ui-materialui/src/input/TranslatableInputsTab.tsx", "../../ra-ui-materialui/src/input/TranslatableInputsTabContent.tsx", "../../ra-ui-materialui/src/defaultTheme.ts", "../../ra-ui-materialui/src/detail/Create.tsx", "../../ra-ui-materialui/src/detail/CreateView.tsx", "../../ra-ui-materialui/src/detail/CreateActions.tsx", "../../ra-ui-materialui/src/detail/Edit.tsx", "../../ra-ui-materialui/src/detail/EditView.tsx", "../../ra-ui-materialui/src/detail/EditActions.tsx", "../../ra-ui-materialui/src/detail/editFieldTypes.tsx", "../../ra-ui-materialui/src/form/TabbedForm.tsx", "../../ra-ui-materialui/src/form/TabbedFormView.tsx", "../../ra-ui-materialui/src/form/Toolbar.tsx", "../../ra-ui-materialui/src/form/TabbedFormTabs.tsx", "../../ra-ui-materialui/src/form/useFormRootPath.ts", "../../ra-ui-materialui/src/form/FormTab.tsx", "../../ra-ui-materialui/src/form/FormTabHeader.tsx", "../../ra-ui-materialui/src/form/SimpleForm.tsx", "../../ra-ui-materialui/src/form/SimpleFormConfigurable.tsx", "../../ra-ui-materialui/src/form/SimpleFormEditor.tsx", "../../ra-ui-materialui/src/detail/EditGuesser.tsx", "../../ra-ui-materialui/src/detail/Show.tsx", "../../ra-ui-materialui/src/detail/ShowView.tsx", "../../ra-ui-materialui/src/detail/ShowActions.tsx", "../../ra-ui-materialui/src/detail/showFieldTypes.tsx", "../../ra-ui-materialui/src/field/ArrayField.tsx", "../../ra-ui-materialui/src/field/types.ts", "../../ra-ui-materialui/src/field/genericMemo.ts", "../../ra-ui-materialui/src/field/BooleanField.tsx", "../../ra-ui-materialui/src/field/sanitizeFieldRestProps.ts", "../../ra-ui-materialui/src/field/ChipField.tsx", "../../ra-ui-materialui/src/field/DateField.tsx", "../../ra-ui-materialui/src/field/EmailField.tsx", "../../ra-ui-materialui/src/field/FileField.tsx", "../../ra-ui-materialui/src/field/FunctionField.tsx", "../../ra-ui-materialui/src/field/ImageField.tsx", "../../ra-ui-materialui/src/field/NumberField.tsx", "../../ra-ui-materialui/src/field/ReferenceArrayField.tsx", "../../ra-ui-materialui/src/list/SingleFieldList.tsx", "../../ra-ui-materialui/src/Link.tsx", "../../ra-ui-materialui/src/field/ReferenceField.tsx", "../../ra-ui-materialui/src/field/ReferenceManyCount.tsx", "../../ra-ui-materialui/src/field/ReferenceManyField.tsx", "../../ra-ui-materialui/src/field/ReferenceOneField.tsx", "../../ra-ui-materialui/src/field/RichTextField.tsx", "../../dompurify/src/utils.js", "../../dompurify/src/tags.js", "../../dompurify/src/attrs.js", "../../dompurify/src/regexp.js", "../../dompurify/src/purify.js", "../../ra-ui-materialui/src/field/SelectField.tsx", "../../ra-ui-materialui/src/field/TextField.tsx", "../../ra-ui-materialui/src/field/TranslatableFields.tsx", "../../ra-ui-materialui/src/field/TranslatableFieldsTabs.tsx", "../../ra-ui-materialui/src/field/TranslatableFieldsTab.tsx", "../../ra-ui-materialui/src/field/TranslatableFieldsTabContent.tsx", "../../ra-ui-materialui/src/field/UrlField.tsx", "../../ra-ui-materialui/src/field/WrapperField.tsx", "../../ra-ui-materialui/src/detail/SimpleShowLayout.tsx", "../../ra-ui-materialui/src/detail/ShowGuesser.tsx", "../../ra-ui-materialui/src/detail/TabbedShowLayout.tsx", "../../ra-ui-materialui/src/detail/TabbedShowLayoutTabs.tsx", "../../ra-ui-materialui/src/detail/Tab.tsx", "../../ra-ui-materialui/src/list/Count.tsx", "../../ra-ui-materialui/src/list/Empty.tsx", "../../ra-ui-materialui/src/list/InfiniteList.tsx", "../../ra-ui-materialui/src/list/ListView.tsx", "../../ra-ui-materialui/src/list/ListToolbar.tsx", "../../ra-ui-materialui/src/list/ListActions.tsx", "../../ra-ui-materialui/src/list/List.tsx", "../../ra-ui-materialui/src/list/listFieldTypes.tsx", "../../ra-ui-materialui/src/list/ListGuesser.tsx", "../../ra-ui-materialui/src/list/SimpleList/SimpleList.tsx", "../../ra-ui-materialui/src/list/SimpleList/SimpleListLoading.tsx", "../../ra-ui-materialui/src/list/SimpleList/SimpleListConfigurable.tsx", "../../ra-ui-materialui/src/list/SimpleList/SimpleListEditor.tsx", "../../ra-ui-materialui/src/AdminUI.tsx", "../../ra-ui-materialui/src/AdminContext.tsx", "../../ra-language-english/src/index.ts", "../../react-admin/src/defaultI18nProvider.ts"],
  "sourcesContent": ["\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"\r\n}), 'Lock');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9h-4v4h-2v-4H9V9h4V5h2v4h4v2z\"\r\n}), 'Queue');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\r\n}), 'Add');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\r\n}), 'RemoveRedEye');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z\"\r\n}), 'Sort');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"m7 10 5 5 5-5z\"\r\n}), 'ArrowDropDown');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\r\n}), 'Delete');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\r\n}), 'Menu');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 4c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6zm0 14c-2.03 0-4.43-.82-6.14-2.88C7.55 15.8 9.68 15 12 15s4.45.8 6.14 2.12C16.43 19.18 14.03 20 12 20z\"\r\n}), 'AccountCircle');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M13 3h-2v10h2V3zm4.83 2.17-1.42 1.42C17.99 7.86 19 9.81 19 12c0 3.87-3.13 7-7 7s-7-3.13-7-7c0-2.19 1.01-4.14 2.58-5.42L6.17 5.17C4.23 6.82 3 9.26 3 12c0 4.97 4.03 9 9 9s9-4.03 9-9c0-2.74-1.23-5.18-3.17-6.83z\"\r\n}), 'PowerSettingsNew');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-.89 0-1.74-.2-2.5-.55C11.56 16.5 13 14.42 13 12s-1.44-4.5-3.5-5.45C10.26 6.2 11.11 6 12 6c3.31 0 6 2.69 6 6s-2.69 6-6 6z\"\r\n}), 'Brightness4');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm0-10c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z\"\r\n}), 'Brightness7');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\r\n}), 'CheckCircle');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\r\n}), 'ErrorOutline');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z\"\r\n}), 'Dashboard');\r\nexports.default = _default;", "/*\r\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\r\nCopyrights licensed under the New BSD License.\r\nSee the accompanying LICENSE file for terms.\r\n*/\r\n\r\n'use strict';\r\n\r\nexports.match = matchQuery;\r\nexports.parse = parseQuery;\r\n\r\n// -----------------------------------------------------------------------------\r\n\r\nvar RE_MEDIA_QUERY     = /(?:(only|not)?\\s*([^\\s\\(\\)]+)(?:\\s*and)?\\s*)?(.+)?/i,\r\n    RE_MQ_EXPRESSION   = /\\(\\s*([^\\s\\:\\)]+)\\s*(?:\\:\\s*([^\\s\\)]+))?\\s*\\)/,\r\n    RE_MQ_FEATURE      = /^(?:(min|max)-)?(.+)/,\r\n    RE_LENGTH_UNIT     = /(em|rem|px|cm|mm|in|pt|pc)?$/,\r\n    RE_RESOLUTION_UNIT = /(dpi|dpcm|dppx)?$/;\r\n\r\nfunction matchQuery(mediaQuery, values) {\r\n    return parseQuery(mediaQuery).some(function (query) {\r\n        var inverse = query.inverse;\r\n\r\n        // Either the parsed or specified `type` is \"all\", or the types must be\r\n        // equal for a match.\r\n        var typeMatch = query.type === 'all' || values.type === query.type;\r\n\r\n        // Quit early when `type` doesn't match, but take \"not\" into account.\r\n        if ((typeMatch && inverse) || !(typeMatch || inverse)) {\r\n            return false;\r\n        }\r\n\r\n        var expressionsMatch = query.expressions.every(function (expression) {\r\n            var feature  = expression.feature,\r\n                modifier = expression.modifier,\r\n                expValue = expression.value,\r\n                value    = values[feature];\r\n\r\n            // Missing or falsy values don't match.\r\n            if (!value) { return false; }\r\n\r\n            switch (feature) {\r\n                case 'orientation':\r\n                case 'scan':\r\n                    return value.toLowerCase() === expValue.toLowerCase();\r\n\r\n                case 'width':\r\n                case 'height':\r\n                case 'device-width':\r\n                case 'device-height':\r\n                    expValue = toPx(expValue);\r\n                    value    = toPx(value);\r\n                    break;\r\n\r\n                case 'resolution':\r\n                    expValue = toDpi(expValue);\r\n                    value    = toDpi(value);\r\n                    break;\r\n\r\n                case 'aspect-ratio':\r\n                case 'device-aspect-ratio':\r\n                case /* Deprecated */ 'device-pixel-ratio':\r\n                    expValue = toDecimal(expValue);\r\n                    value    = toDecimal(value);\r\n                    break;\r\n\r\n                case 'grid':\r\n                case 'color':\r\n                case 'color-index':\r\n                case 'monochrome':\r\n                    expValue = parseInt(expValue, 10) || 1;\r\n                    value    = parseInt(value, 10) || 0;\r\n                    break;\r\n            }\r\n\r\n            switch (modifier) {\r\n                case 'min': return value >= expValue;\r\n                case 'max': return value <= expValue;\r\n                default   : return value === expValue;\r\n            }\r\n        });\r\n\r\n        return (expressionsMatch && !inverse) || (!expressionsMatch && inverse);\r\n    });\r\n}\r\n\r\nfunction parseQuery(mediaQuery) {\r\n    return mediaQuery.split(',').map(function (query) {\r\n        query = query.trim();\r\n\r\n        var captures    = query.match(RE_MEDIA_QUERY),\r\n            modifier    = captures[1],\r\n            type        = captures[2],\r\n            expressions = captures[3] || '',\r\n            parsed      = {};\r\n\r\n        parsed.inverse = !!modifier && modifier.toLowerCase() === 'not';\r\n        parsed.type    = type ? type.toLowerCase() : 'all';\r\n\r\n        // Split expressions into a list.\r\n        expressions = expressions.match(/\\([^\\)]+\\)/g) || [];\r\n\r\n        parsed.expressions = expressions.map(function (expression) {\r\n            var captures = expression.match(RE_MQ_EXPRESSION),\r\n                feature  = captures[1].toLowerCase().match(RE_MQ_FEATURE);\r\n\r\n            return {\r\n                modifier: feature[1],\r\n                feature : feature[2],\r\n                value   : captures[2]\r\n            };\r\n        });\r\n\r\n        return parsed;\r\n    });\r\n}\r\n\r\n// -- Utilities ----------------------------------------------------------------\r\n\r\nfunction toDecimal(ratio) {\r\n    var decimal = Number(ratio),\r\n        numbers;\r\n\r\n    if (!decimal) {\r\n        numbers = ratio.match(/^(\\d+)\\s*\\/\\s*(\\d+)$/);\r\n        decimal = numbers[1] / numbers[2];\r\n    }\r\n\r\n    return decimal;\r\n}\r\n\r\nfunction toDpi(resolution) {\r\n    var value = parseFloat(resolution),\r\n        units = String(resolution).match(RE_RESOLUTION_UNIT)[1];\r\n\r\n    switch (units) {\r\n        case 'dpcm': return value / 2.54;\r\n        case 'dppx': return value * 96;\r\n        default    : return value;\r\n    }\r\n}\r\n\r\nfunction toPx(length) {\r\n    var value = parseFloat(length),\r\n        units = String(length).match(RE_LENGTH_UNIT)[1];\r\n\r\n    switch (units) {\r\n        case 'em' : return value * 16;\r\n        case 'rem': return value * 16;\r\n        case 'cm' : return value * 96 / 2.54;\r\n        case 'mm' : return value * 96 / 2.54 / 10;\r\n        case 'in' : return value * 96;\r\n        case 'pt' : return value * 72;\r\n        case 'pc' : return value * 72 / 12;\r\n        default   : return value;\r\n    }\r\n}\r\n", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M15.73 3H8.27L3 8.27v7.46L8.27 21h7.46L21 15.73V8.27L15.73 3zM12 17.3c-.72 0-1.3-.58-1.3-1.3 0-.72.58-1.3 1.3-1.3.72 0 1.3.58 1.3 1.3 0 .72-.58 1.3-1.3 1.3zm1-4.3h-2V7h2v6z\"\r\n}), 'Report');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\r\n}), 'ExpandMore');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z\"\r\n}), 'History');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z\"\r\n}), 'Settings');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\r\n}), 'DragIndicator');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm3.59-13L12 10.59 8.41 7 7 8.41 10.59 12 7 15.59 8.41 17 12 13.41 15.59 17 17 15.59 13.41 12 17 8.41z\"\r\n}), 'CancelOutlined');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5-1-1h-5l-1 1H5v2h14V4z\"\r\n}), 'DeleteOutline');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M3 14h4v-4H3v4zm0 5h4v-4H3v4zM3 9h4V5H3v4zm5 5h13v-4H8v4zm0 5h13v-4H8v4zM8 5v4h13V5H8z\"\r\n}), 'ViewList');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\r\n  cx: \"7\",\r\n  cy: \"6\",\r\n  r: \"2\"\r\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M11.15 12c-.31-.22-.59-.46-.82-.72l-1.4-1.55c-.19-.21-.43-.38-.69-.5-.29-.14-.62-.23-.96-.23h-.03C6.01 9 5 10.01 5 11.25V12H2v8c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2v-8H11.15zM7 20H5v-6h2v6zm4 0H9v-6h2v6zm4 0h-2v-6h2v6zm4 0h-2v-6h2v6zm-.35-14.14-.07-.07c-.57-.62-.82-1.41-.67-2.2L18 3h-1.89l-.06.43c-.2 1.36.27 2.71 1.3 3.72l.07.06c.57.62.82 1.41.67 2.2l-.11.59h1.91l.06-.43c.21-1.36-.27-2.71-1.3-3.71zm-4 0-.07-.07c-.57-.62-.82-1.41-.67-2.2L14 3h-1.89l-.06.43c-.2 1.36.27 2.71 1.3 3.72l.07.06c.57.62.82 1.41.67 2.2l-.11.59h1.91l.06-.43c.21-1.36-.27-2.71-1.3-3.71z\"\r\n}, \"1\")], 'HotTub');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\r\n}), 'GetApp');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M21 10.12h-6.78l2.74-2.82c-2.73-2.7-7.15-2.8-9.88-.1-2.73 2.71-2.73 7.08 0 9.79s7.15 2.71 9.88 0C18.32 15.65 19 14.08 19 12.1h2c0 1.98-.88 4.55-2.64 6.29-3.51 3.48-9.21 3.48-12.72 0-3.5-3.47-3.53-9.11-.02-12.58s9.14-3.47 12.65 0L21 3v7.12zM12.5 8v4.25l3.5 2.08-.72 1.21L11 13V8h1.5z\"\r\n}), 'Update');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\r\n}), 'Create');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"m12.87 15.07-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7 1.62-4.33L19.12 17h-3.24z\"\r\n}), 'Translate');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z\"\r\n}), 'List');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\r\n}), 'Refresh');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\r\n}), 'Save');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\r\n}), 'AddCircleOutline');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\r\n}), 'RemoveCircleOutline');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M12 20c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8m0 2c5.52 0 10-4.48 10-10S17.52 2 12 2 2 6.48 2 12s4.48 10 10 10zm-1-10v4h2v-4h3l-4-4-4 4h3z\"\r\n}), 'ArrowCircleUp');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M12 4c4.41 0 8 3.59 8 8s-3.59 8-8 8-8-3.59-8-8 3.59-8 8-8m0-2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 10V8h-2v4H8l4 4 4-4h-3z\"\r\n}), 'ArrowCircleDown');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M14.59 8 12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\r\n}), 'HighlightOff');\r\nexports.default = _default;", "var SetCache = require('./_SetCache'),\r\n    arrayIncludes = require('./_arrayIncludes'),\r\n    arrayIncludesWith = require('./_arrayIncludesWith'),\r\n    arrayMap = require('./_arrayMap'),\r\n    baseUnary = require('./_baseUnary'),\r\n    cacheHas = require('./_cacheHas');\r\n\r\n/** Used as the size to enable large array optimizations. */\r\nvar LARGE_ARRAY_SIZE = 200;\r\n\r\n/**\r\n * The base implementation of methods like `_.difference` without support\r\n * for excluding multiple arrays or iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {Array} values The values to exclude.\r\n * @param {Function} [iteratee] The iteratee invoked per element.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns the new array of filtered values.\r\n */\r\nfunction baseDifference(array, values, iteratee, comparator) {\r\n  var index = -1,\r\n      includes = arrayIncludes,\r\n      isCommon = true,\r\n      length = array.length,\r\n      result = [],\r\n      valuesLength = values.length;\r\n\r\n  if (!length) {\r\n    return result;\r\n  }\r\n  if (iteratee) {\r\n    values = arrayMap(values, baseUnary(iteratee));\r\n  }\r\n  if (comparator) {\r\n    includes = arrayIncludesWith;\r\n    isCommon = false;\r\n  }\r\n  else if (values.length >= LARGE_ARRAY_SIZE) {\r\n    includes = cacheHas;\r\n    isCommon = false;\r\n    values = new SetCache(values);\r\n  }\r\n  outer:\r\n  while (++index < length) {\r\n    var value = array[index],\r\n        computed = iteratee == null ? value : iteratee(value);\r\n\r\n    value = (comparator || value !== 0) ? value : 0;\r\n    if (isCommon && computed === computed) {\r\n      var valuesIndex = valuesLength;\r\n      while (valuesIndex--) {\r\n        if (values[valuesIndex] === computed) {\r\n          continue outer;\r\n        }\r\n      }\r\n      result.push(value);\r\n    }\r\n    else if (!includes(values, computed, comparator)) {\r\n      result.push(value);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = baseDifference;\r\n", "var baseDifference = require('./_baseDifference'),\r\n    baseFlatten = require('./_baseFlatten'),\r\n    baseRest = require('./_baseRest'),\r\n    isArrayLikeObject = require('./isArrayLikeObject');\r\n\r\n/**\r\n * Creates an array of `array` values not included in the other given arrays\r\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * for equality comparisons. The order and references of result values are\r\n * determined by the first array.\r\n *\r\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @param {...Array} [values] The values to exclude.\r\n * @returns {Array} Returns the new array of filtered values.\r\n * @see _.without, _.xor\r\n * @example\r\n *\r\n * _.difference([2, 1], [2, 3]);\r\n * // => [1]\r\n */\r\nvar difference = baseRest(function(array, values) {\r\n  return isArrayLikeObject(array)\r\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\r\n    : [];\r\n});\r\n\r\nmodule.exports = difference;\r\n", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\r\n}), 'Close');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M5.33 20H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2h1.33c1.1 0 2 .9 2 2v12c0 1.1-.89 2-2 2zM22 18V6c0-1.1-.9-2-2-2h-1.33c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2H20c1.11 0 2-.9 2-2zm-7.33 0V6c0-1.1-.9-2-2-2h-1.33c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h1.33c1.1 0 2-.9 2-2z\"\r\n}), 'ViewWeek');\r\nexports.default = _default;", "/**\r\n * A specialized version of `_.forEach` for arrays without support for\r\n * iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction arrayEach(array, iteratee) {\r\n  var index = -1,\r\n      length = array == null ? 0 : array.length;\r\n\r\n  while (++index < length) {\r\n    if (iteratee(array[index], index, array) === false) {\r\n      break;\r\n    }\r\n  }\r\n  return array;\r\n}\r\n\r\nmodule.exports = arrayEach;\r\n", "var copyObject = require('./_copyObject'),\r\n    keys = require('./keys');\r\n\r\n/**\r\n * The base implementation of `_.assign` without support for multiple sources\r\n * or `customizer` functions.\r\n *\r\n * @private\r\n * @param {Object} object The destination object.\r\n * @param {Object} source The source object.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction baseAssign(object, source) {\r\n  return object && copyObject(source, keys(source), object);\r\n}\r\n\r\nmodule.exports = baseAssign;\r\n", "var copyObject = require('./_copyObject'),\r\n    keysIn = require('./keysIn');\r\n\r\n/**\r\n * The base implementation of `_.assignIn` without support for multiple sources\r\n * or `customizer` functions.\r\n *\r\n * @private\r\n * @param {Object} object The destination object.\r\n * @param {Object} source The source object.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction baseAssignIn(object, source) {\r\n  return object && copyObject(source, keysIn(source), object);\r\n}\r\n\r\nmodule.exports = baseAssignIn;\r\n", "var copyObject = require('./_copyObject'),\r\n    getSymbols = require('./_getSymbols');\r\n\r\n/**\r\n * Copies own symbols of `source` to `object`.\r\n *\r\n * @private\r\n * @param {Object} source The object to copy symbols from.\r\n * @param {Object} [object={}] The object to copy symbols to.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction copySymbols(source, object) {\r\n  return copyObject(source, getSymbols(source), object);\r\n}\r\n\r\nmodule.exports = copySymbols;\r\n", "var copyObject = require('./_copyObject'),\r\n    getSymbolsIn = require('./_getSymbolsIn');\r\n\r\n/**\r\n * Copies own and inherited symbols of `source` to `object`.\r\n *\r\n * @private\r\n * @param {Object} source The object to copy symbols from.\r\n * @param {Object} [object={}] The object to copy symbols to.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction copySymbolsIn(source, object) {\r\n  return copyObject(source, getSymbolsIn(source), object);\r\n}\r\n\r\nmodule.exports = copySymbolsIn;\r\n", "/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Initializes an array clone.\r\n *\r\n * @private\r\n * @param {Array} array The array to clone.\r\n * @returns {Array} Returns the initialized clone.\r\n */\r\nfunction initCloneArray(array) {\r\n  var length = array.length,\r\n      result = new array.constructor(length);\r\n\r\n  // Add properties assigned by `RegExp#exec`.\r\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\r\n    result.index = array.index;\r\n    result.input = array.input;\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = initCloneArray;\r\n", "var cloneArrayBuffer = require('./_cloneArrayBuffer');\r\n\r\n/**\r\n * Creates a clone of `dataView`.\r\n *\r\n * @private\r\n * @param {Object} dataView The data view to clone.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the cloned data view.\r\n */\r\nfunction cloneDataView(dataView, isDeep) {\r\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\r\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\r\n}\r\n\r\nmodule.exports = cloneDataView;\r\n", "/** Used to match `RegExp` flags from their coerced string values. */\r\nvar reFlags = /\\w*$/;\r\n\r\n/**\r\n * Creates a clone of `regexp`.\r\n *\r\n * @private\r\n * @param {Object} regexp The regexp to clone.\r\n * @returns {Object} Returns the cloned regexp.\r\n */\r\nfunction cloneRegExp(regexp) {\r\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\r\n  result.lastIndex = regexp.lastIndex;\r\n  return result;\r\n}\r\n\r\nmodule.exports = cloneRegExp;\r\n", "var Symbol = require('./_Symbol');\r\n\r\n/** Used to convert symbols to primitives and strings. */\r\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\r\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\r\n\r\n/**\r\n * Creates a clone of the `symbol` object.\r\n *\r\n * @private\r\n * @param {Object} symbol The symbol object to clone.\r\n * @returns {Object} Returns the cloned symbol object.\r\n */\r\nfunction cloneSymbol(symbol) {\r\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\r\n}\r\n\r\nmodule.exports = cloneSymbol;\r\n", "var cloneArrayBuffer = require('./_cloneArrayBuffer'),\r\n    cloneDataView = require('./_cloneDataView'),\r\n    cloneRegExp = require('./_cloneRegExp'),\r\n    cloneSymbol = require('./_cloneSymbol'),\r\n    cloneTypedArray = require('./_cloneTypedArray');\r\n\r\n/** `Object#toString` result references. */\r\nvar boolTag = '[object Boolean]',\r\n    dateTag = '[object Date]',\r\n    mapTag = '[object Map]',\r\n    numberTag = '[object Number]',\r\n    regexpTag = '[object RegExp]',\r\n    setTag = '[object Set]',\r\n    stringTag = '[object String]',\r\n    symbolTag = '[object Symbol]';\r\n\r\nvar arrayBufferTag = '[object ArrayBuffer]',\r\n    dataViewTag = '[object DataView]',\r\n    float32Tag = '[object Float32Array]',\r\n    float64Tag = '[object Float64Array]',\r\n    int8Tag = '[object Int8Array]',\r\n    int16Tag = '[object Int16Array]',\r\n    int32Tag = '[object Int32Array]',\r\n    uint8Tag = '[object Uint8Array]',\r\n    uint8ClampedTag = '[object Uint8ClampedArray]',\r\n    uint16Tag = '[object Uint16Array]',\r\n    uint32Tag = '[object Uint32Array]';\r\n\r\n/**\r\n * Initializes an object clone based on its `toStringTag`.\r\n *\r\n * **Note:** This function only supports cloning values with tags of\r\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\r\n *\r\n * @private\r\n * @param {Object} object The object to clone.\r\n * @param {string} tag The `toStringTag` of the object to clone.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the initialized clone.\r\n */\r\nfunction initCloneByTag(object, tag, isDeep) {\r\n  var Ctor = object.constructor;\r\n  switch (tag) {\r\n    case arrayBufferTag:\r\n      return cloneArrayBuffer(object);\r\n\r\n    case boolTag:\r\n    case dateTag:\r\n      return new Ctor(+object);\r\n\r\n    case dataViewTag:\r\n      return cloneDataView(object, isDeep);\r\n\r\n    case float32Tag: case float64Tag:\r\n    case int8Tag: case int16Tag: case int32Tag:\r\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\r\n      return cloneTypedArray(object, isDeep);\r\n\r\n    case mapTag:\r\n      return new Ctor;\r\n\r\n    case numberTag:\r\n    case stringTag:\r\n      return new Ctor(object);\r\n\r\n    case regexpTag:\r\n      return cloneRegExp(object);\r\n\r\n    case setTag:\r\n      return new Ctor;\r\n\r\n    case symbolTag:\r\n      return cloneSymbol(object);\r\n  }\r\n}\r\n\r\nmodule.exports = initCloneByTag;\r\n", "var getTag = require('./_getTag'),\r\n    isObjectLike = require('./isObjectLike');\r\n\r\n/** `Object#toString` result references. */\r\nvar mapTag = '[object Map]';\r\n\r\n/**\r\n * The base implementation of `_.isMap` without Node.js optimizations.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\r\n */\r\nfunction baseIsMap(value) {\r\n  return isObjectLike(value) && getTag(value) == mapTag;\r\n}\r\n\r\nmodule.exports = baseIsMap;\r\n", "var baseIsMap = require('./_baseIsMap'),\r\n    baseUnary = require('./_baseUnary'),\r\n    nodeUtil = require('./_nodeUtil');\r\n\r\n/* Node.js helper references. */\r\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\r\n\r\n/**\r\n * Checks if `value` is classified as a `Map` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.3.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\r\n * @example\r\n *\r\n * _.isMap(new Map);\r\n * // => true\r\n *\r\n * _.isMap(new WeakMap);\r\n * // => false\r\n */\r\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\r\n\r\nmodule.exports = isMap;\r\n", "var getTag = require('./_getTag'),\r\n    isObjectLike = require('./isObjectLike');\r\n\r\n/** `Object#toString` result references. */\r\nvar setTag = '[object Set]';\r\n\r\n/**\r\n * The base implementation of `_.isSet` without Node.js optimizations.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\r\n */\r\nfunction baseIsSet(value) {\r\n  return isObjectLike(value) && getTag(value) == setTag;\r\n}\r\n\r\nmodule.exports = baseIsSet;\r\n", "var baseIsSet = require('./_baseIsSet'),\r\n    baseUnary = require('./_baseUnary'),\r\n    nodeUtil = require('./_nodeUtil');\r\n\r\n/* Node.js helper references. */\r\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\r\n\r\n/**\r\n * Checks if `value` is classified as a `Set` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.3.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\r\n * @example\r\n *\r\n * _.isSet(new Set);\r\n * // => true\r\n *\r\n * _.isSet(new WeakSet);\r\n * // => false\r\n */\r\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\r\n\r\nmodule.exports = isSet;\r\n", "var Stack = require('./_Stack'),\r\n    arrayEach = require('./_arrayEach'),\r\n    assignValue = require('./_assignValue'),\r\n    baseAssign = require('./_baseAssign'),\r\n    baseAssignIn = require('./_baseAssignIn'),\r\n    cloneBuffer = require('./_cloneBuffer'),\r\n    copyArray = require('./_copyArray'),\r\n    copySymbols = require('./_copySymbols'),\r\n    copySymbolsIn = require('./_copySymbolsIn'),\r\n    getAllKeys = require('./_getAllKeys'),\r\n    getAllKeysIn = require('./_getAllKeysIn'),\r\n    getTag = require('./_getTag'),\r\n    initCloneArray = require('./_initCloneArray'),\r\n    initCloneByTag = require('./_initCloneByTag'),\r\n    initCloneObject = require('./_initCloneObject'),\r\n    isArray = require('./isArray'),\r\n    isBuffer = require('./isBuffer'),\r\n    isMap = require('./isMap'),\r\n    isObject = require('./isObject'),\r\n    isSet = require('./isSet'),\r\n    keys = require('./keys'),\r\n    keysIn = require('./keysIn');\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_DEEP_FLAG = 1,\r\n    CLONE_FLAT_FLAG = 2,\r\n    CLONE_SYMBOLS_FLAG = 4;\r\n\r\n/** `Object#toString` result references. */\r\nvar argsTag = '[object Arguments]',\r\n    arrayTag = '[object Array]',\r\n    boolTag = '[object Boolean]',\r\n    dateTag = '[object Date]',\r\n    errorTag = '[object Error]',\r\n    funcTag = '[object Function]',\r\n    genTag = '[object GeneratorFunction]',\r\n    mapTag = '[object Map]',\r\n    numberTag = '[object Number]',\r\n    objectTag = '[object Object]',\r\n    regexpTag = '[object RegExp]',\r\n    setTag = '[object Set]',\r\n    stringTag = '[object String]',\r\n    symbolTag = '[object Symbol]',\r\n    weakMapTag = '[object WeakMap]';\r\n\r\nvar arrayBufferTag = '[object ArrayBuffer]',\r\n    dataViewTag = '[object DataView]',\r\n    float32Tag = '[object Float32Array]',\r\n    float64Tag = '[object Float64Array]',\r\n    int8Tag = '[object Int8Array]',\r\n    int16Tag = '[object Int16Array]',\r\n    int32Tag = '[object Int32Array]',\r\n    uint8Tag = '[object Uint8Array]',\r\n    uint8ClampedTag = '[object Uint8ClampedArray]',\r\n    uint16Tag = '[object Uint16Array]',\r\n    uint32Tag = '[object Uint32Array]';\r\n\r\n/** Used to identify `toStringTag` values supported by `_.clone`. */\r\nvar cloneableTags = {};\r\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\r\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\r\ncloneableTags[boolTag] = cloneableTags[dateTag] =\r\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\r\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\r\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\r\ncloneableTags[numberTag] = cloneableTags[objectTag] =\r\ncloneableTags[regexpTag] = cloneableTags[setTag] =\r\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\r\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\r\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\r\ncloneableTags[errorTag] = cloneableTags[funcTag] =\r\ncloneableTags[weakMapTag] = false;\r\n\r\n/**\r\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\r\n * traversed objects.\r\n *\r\n * @private\r\n * @param {*} value The value to clone.\r\n * @param {boolean} bitmask The bitmask flags.\r\n *  1 - Deep clone\r\n *  2 - Flatten inherited properties\r\n *  4 - Clone symbols\r\n * @param {Function} [customizer] The function to customize cloning.\r\n * @param {string} [key] The key of `value`.\r\n * @param {Object} [object] The parent object of `value`.\r\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\r\n * @returns {*} Returns the cloned value.\r\n */\r\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\r\n  var result,\r\n      isDeep = bitmask & CLONE_DEEP_FLAG,\r\n      isFlat = bitmask & CLONE_FLAT_FLAG,\r\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\r\n\r\n  if (customizer) {\r\n    result = object ? customizer(value, key, object, stack) : customizer(value);\r\n  }\r\n  if (result !== undefined) {\r\n    return result;\r\n  }\r\n  if (!isObject(value)) {\r\n    return value;\r\n  }\r\n  var isArr = isArray(value);\r\n  if (isArr) {\r\n    result = initCloneArray(value);\r\n    if (!isDeep) {\r\n      return copyArray(value, result);\r\n    }\r\n  } else {\r\n    var tag = getTag(value),\r\n        isFunc = tag == funcTag || tag == genTag;\r\n\r\n    if (isBuffer(value)) {\r\n      return cloneBuffer(value, isDeep);\r\n    }\r\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\r\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\r\n      if (!isDeep) {\r\n        return isFlat\r\n          ? copySymbolsIn(value, baseAssignIn(result, value))\r\n          : copySymbols(value, baseAssign(result, value));\r\n      }\r\n    } else {\r\n      if (!cloneableTags[tag]) {\r\n        return object ? value : {};\r\n      }\r\n      result = initCloneByTag(value, tag, isDeep);\r\n    }\r\n  }\r\n  // Check for circular references and return its corresponding clone.\r\n  stack || (stack = new Stack);\r\n  var stacked = stack.get(value);\r\n  if (stacked) {\r\n    return stacked;\r\n  }\r\n  stack.set(value, result);\r\n\r\n  if (isSet(value)) {\r\n    value.forEach(function(subValue) {\r\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\r\n    });\r\n  } else if (isMap(value)) {\r\n    value.forEach(function(subValue, key) {\r\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\r\n    });\r\n  }\r\n\r\n  var keysFunc = isFull\r\n    ? (isFlat ? getAllKeysIn : getAllKeys)\r\n    : (isFlat ? keysIn : keys);\r\n\r\n  var props = isArr ? undefined : keysFunc(value);\r\n  arrayEach(props || value, function(subValue, key) {\r\n    if (props) {\r\n      key = subValue;\r\n      subValue = value[key];\r\n    }\r\n    // Recursively populate clone (susceptible to call stack limits).\r\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\r\n  });\r\n  return result;\r\n}\r\n\r\nmodule.exports = baseClone;\r\n", "var baseClone = require('./_baseClone');\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_DEEP_FLAG = 1,\r\n    CLONE_SYMBOLS_FLAG = 4;\r\n\r\n/**\r\n * This method is like `_.clone` except that it recursively clones `value`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 1.0.0\r\n * @category Lang\r\n * @param {*} value The value to recursively clone.\r\n * @returns {*} Returns the deep cloned value.\r\n * @see _.clone\r\n * @example\r\n *\r\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\r\n *\r\n * var deep = _.cloneDeep(objects);\r\n * console.log(deep[0] === objects[0]);\r\n * // => false\r\n */\r\nfunction cloneDeep(value) {\r\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\r\n}\r\n\r\nmodule.exports = cloneDeep;\r\n", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\r\n}), 'FilterList');\r\nexports.default = _default;", "var baseClone = require('./_baseClone'),\r\n    baseMatches = require('./_baseMatches');\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_DEEP_FLAG = 1;\r\n\r\n/**\r\n * Creates a function that performs a partial deep comparison between a given\r\n * object and `source`, returning `true` if the given object has equivalent\r\n * property values, else `false`.\r\n *\r\n * **Note:** The created function is equivalent to `_.isMatch` with `source`\r\n * partially applied.\r\n *\r\n * Partial comparisons will match empty array and empty object `source`\r\n * values against any array or object value, respectively. See `_.isEqual`\r\n * for a list of supported value comparisons.\r\n *\r\n * **Note:** Multiple values can be checked by combining several matchers\r\n * using `_.overSome`\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Util\r\n * @param {Object} source The object of property values to match.\r\n * @returns {Function} Returns the new spec function.\r\n * @example\r\n *\r\n * var objects = [\r\n *   { 'a': 1, 'b': 2, 'c': 3 },\r\n *   { 'a': 4, 'b': 5, 'c': 6 }\r\n * ];\r\n *\r\n * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\r\n * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\r\n *\r\n * // Checking for several possible values\r\n * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\r\n * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\r\n */\r\nfunction matches(source) {\r\n  return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\r\n}\r\n\r\nmodule.exports = matches;\r\n", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\r\n}), 'Search');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15-5-2.18L7 18V5h10v13z\"\r\n}), 'BookmarkBorder');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"\r\n}), 'HelpOutline');\r\nexports.default = _default;", "\"use strict\";\r\n\r\nexports.__esModule = true;\r\n\r\nexports.default = function (file, acceptedFiles) {\r\n  if (file && acceptedFiles) {\r\n    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\r\n    var fileName = file.name || '';\r\n    var mimeType = (file.type || '').toLowerCase();\r\n    var baseMimeType = mimeType.replace(/\\/.*$/, '');\r\n    return acceptedFilesArray.some(function (type) {\r\n      var validType = type.trim().toLowerCase();\r\n\r\n      if (validType.charAt(0) === '.') {\r\n        return fileName.toLowerCase().endsWith(validType);\r\n      } else if (validType.endsWith('/*')) {\r\n        // This is something like a image/* mime type\r\n        return baseMimeType === validType.replace(/\\/.*$/, '');\r\n      }\r\n\r\n      return mimeType === validType;\r\n    });\r\n  }\r\n\r\n  return true;\r\n};", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"\r\n}), 'RemoveCircle');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\r\n}), 'Clear');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\r\n}), 'Visibility');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\r\n}), 'VisibilityOff');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\r\n}), 'Done');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\r\n}), 'Error');\r\nexports.default = _default;", "\"use strict\";\r\n\"use client\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\r\nvar _jsxRuntime = require(\"react/jsx-runtime\");\r\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\r\n  d: \"M19 3H4.99c-1.11 0-1.98.89-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.11-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10z\"\r\n}), 'Inbox');\r\nexports.default = _default;", "import * as React from 'react';\r\nimport { ComponentType } from 'react';\r\nimport { CoreAdminProps, localStorageStore } from 'ra-core';\r\nimport { AdminUI, AdminContext, RaThemeOptions } from 'ra-ui-materialui';\r\n\r\nimport { defaultI18nProvider } from './defaultI18nProvider';\r\nconst defaultStore = localStorageStore();\r\n\r\n/**\r\n * Main admin component, entry point to the application.\r\n *\r\n * Initializes the various contexts (auth, data, i18n, router)\r\n * and defines the main routes.\r\n *\r\n * Expects a list of resources as children, or a function returning a list of\r\n * resources based on the permissions.\r\n *\r\n * @example\r\n *\r\n * // static list of resources\r\n *\r\n * import {\r\n *     Admin,\r\n *     Resource,\r\n *     ListGuesser,\r\n *     useDataProvider,\r\n * } from 'react-admin';\r\n *\r\n * const App = () => (\r\n *     <Admin dataProvider={myDataProvider}>\r\n *         <Resource name=\"posts\" list={ListGuesser} />\r\n *     </Admin>\r\n * );\r\n *\r\n * // dynamic list of resources based on permissions\r\n *\r\n * import {\r\n *     Admin,\r\n *     Resource,\r\n *     ListGuesser,\r\n *     useDataProvider,\r\n * } from 'react-admin';\r\n *\r\n * const App = () => (\r\n *     <Admin dataProvider={myDataProvider}>\r\n *         {permissions => [\r\n *             <Resource name=\"posts\" key=\"posts\" list={ListGuesser} />,\r\n *         ]}\r\n *     </Admin>\r\n * );\r\n *\r\n * // If you have to build a dynamic list of resources using a side effect,\r\n * // you can't use <Admin>. But as it delegates to sub components,\r\n * // it's relatively straightforward to replace it:\r\n *\r\n * import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\n * import {\r\n *     AdminContext,\r\n *     AdminUI,\r\n *     defaultI18nProvider,\r\n *     localStorageStore,\r\n *     Resource,\r\n *     ListGuesser,\r\n *     useDataProvider,\r\n * } from 'react-admin';\r\n *\r\n * const store = localStorageStore();\r\n *\r\n * const App = () => (\r\n *     <AdminContext dataProvider={myDataProvider} i18nProvider={defaultI18nProvider} store={store}>\r\n *         <Resources />\r\n *     </AdminContext>\r\n * );\r\n *\r\n * const Resources = () => {\r\n *     const [resources, setResources] = useState([]);\r\n *     const dataProvider = useDataProvider();\r\n *     useEffect(() => {\r\n *         dataProvider.introspect().then(r => setResources(r));\r\n *     }, []);\r\n *\r\n *     return (\r\n *         <AdminUI>\r\n *             {resources.map(resource => (\r\n *                 <Resource name={resource.name} key={resource.key} list={ListGuesser} />\r\n *             ))}\r\n *         </AdminUI>\r\n *     );\r\n * };\r\n */\r\nexport const Admin = (props: AdminProps) => {\r\n    const {\r\n        authProvider,\r\n        basename,\r\n        catchAll,\r\n        children,\r\n        dashboard,\r\n        dataProvider,\r\n        disableTelemetry,\r\n        history,\r\n        i18nProvider = defaultI18nProvider,\r\n        layout,\r\n        loading,\r\n        loginPage,\r\n        authCallbackPage,\r\n        menu, // deprecated, use a custom layout instead\r\n        notification,\r\n        queryClient,\r\n        requireAuth,\r\n        store = defaultStore,\r\n        ready,\r\n        theme,\r\n        lightTheme,\r\n        darkTheme,\r\n        defaultTheme,\r\n        title = 'React Admin',\r\n    } = props;\r\n\r\n    if (loginPage === true && process.env.NODE_ENV !== 'production') {\r\n        console.warn(\r\n            'You passed true to the loginPage prop. You must either pass false to disable it or a component class to customize it'\r\n        );\r\n    }\r\n\r\n    return (\r\n        <AdminContext\r\n            authProvider={authProvider}\r\n            basename={basename}\r\n            dataProvider={dataProvider}\r\n            i18nProvider={i18nProvider}\r\n            store={store}\r\n            history={history}\r\n            queryClient={queryClient}\r\n            theme={theme}\r\n            lightTheme={lightTheme}\r\n            darkTheme={darkTheme}\r\n            defaultTheme={defaultTheme}\r\n        >\r\n            <AdminUI\r\n                layout={layout}\r\n                dashboard={dashboard}\r\n                disableTelemetry={disableTelemetry}\r\n                menu={menu}\r\n                catchAll={catchAll}\r\n                title={title}\r\n                loading={loading}\r\n                loginPage={loginPage}\r\n                authCallbackPage={authCallbackPage}\r\n                notification={notification}\r\n                requireAuth={requireAuth}\r\n                ready={ready}\r\n            >\r\n                {children}\r\n            </AdminUI>\r\n        </AdminContext>\r\n    );\r\n};\r\n\r\nexport default Admin;\r\n\r\nexport interface AdminProps extends CoreAdminProps {\r\n    theme?: RaThemeOptions;\r\n    lightTheme?: RaThemeOptions;\r\n    darkTheme?: RaThemeOptions;\r\n    defaultTheme?: 'light' | 'dark';\r\n    notification?: ComponentType;\r\n}\r\n", "import * as React from 'react';\r\nimport { useHandleAuthCallback, useTimeout } from 'ra-core';\r\nimport { Loading } from '..';\r\nimport { AuthError } from './AuthError';\r\n\r\n/**\r\n * A standalone page to be used in a route called by external authentication services (e.g. OAuth)\r\n * after the user has been authenticated.\r\n *\r\n * Copy and adapt this component to implement your own login logic\r\n * (e.g. to show a different waiting screen, start onboarding procedures, etc.).\r\n *\r\n * @example\r\n *     import MyAuthCallbackPage from './MyAuthCallbackPage';\r\n *     const App = () => (\r\n *         <Admin authCallbackPage={MyAuthCallbackPage} authProvider={authProvider}>\r\n *             ...\r\n *        </Admin>\r\n *     );\r\n */\r\nexport const AuthCallback = () => {\r\n    const { error } = useHandleAuthCallback();\r\n    const hasOneSecondPassed = useTimeout(1000);\r\n\r\n    if (error) {\r\n        return (\r\n            <AuthError\r\n                message={\r\n                    (error as Error) ? (error as Error).message : undefined\r\n                }\r\n            />\r\n        );\r\n    }\r\n\r\n    return hasOneSecondPassed ? <Loading /> : null;\r\n};\r\n", "import * as React from 'react';\r\nimport { styled, SxProps } from '@mui/material';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslate } from 'ra-core';\r\nimport { Button } from '../button';\r\n\r\nexport const AuthError = (props: AuthErrorProps) => {\r\n    const {\r\n        className,\r\n        title = 'ra.page.error',\r\n        message = 'ra.message.auth_error',\r\n        ...rest\r\n    } = props;\r\n\r\n    const translate = useTranslate();\r\n    return (\r\n        <Root className={className} {...rest}>\r\n            <div className={AuthErrorClasses.message}>\r\n                <h1>{translate(title, { _: title })}</h1>\r\n                <div>{translate(message, { _: message })}</div>\r\n                <Button to=\"/login\" label=\"ra.auth.sign_in\">\r\n                    <LockIcon />\r\n                </Button>\r\n            </div>\r\n        </Root>\r\n    );\r\n};\r\n\r\nAuthError.propTypes = {\r\n    className: PropTypes.string,\r\n    title: PropTypes.string,\r\n    message: PropTypes.string,\r\n};\r\n\r\nexport interface AuthErrorProps {\r\n    className?: string;\r\n    title?: string;\r\n    message?: string;\r\n    sx?: SxProps;\r\n}\r\n\r\nconst PREFIX = 'RaAuthError';\r\n\r\nexport const AuthErrorClasses = {\r\n    root: `${PREFIX}-root`,\r\n    message: `${PREFIX}-message`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.up('md')]: {\r\n        height: '100%',\r\n    },\r\n    [theme.breakpoints.down('xl')]: {\r\n        height: '100vh',\r\n        marginTop: '-3em',\r\n    },\r\n\r\n    [`& .${AuthErrorClasses.message}`]: {\r\n        textAlign: 'center',\r\n        fontFamily: 'Roboto, sans-serif',\r\n        opacity: 0.5,\r\n        margin: '0 1em',\r\n    },\r\n}));\r\n", "import * as React from 'react';\r\nimport { memo, ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Queue from '@mui/icons-material/Queue';\r\nimport { Link } from 'react-router-dom';\r\nimport { stringify } from 'query-string';\r\nimport { useResourceContext, useRecordContext, useCreatePath } from 'ra-core';\r\n\r\nimport { Button, ButtonProps } from './Button';\r\n\r\nexport const CloneButton = (props: CloneButtonProps) => {\r\n    const {\r\n        label = 'ra.action.clone',\r\n        scrollToTop = true,\r\n        icon = defaultIcon,\r\n        ...rest\r\n    } = props;\r\n    const resource = useResourceContext(props);\r\n    const record = useRecordContext(props);\r\n    const createPath = useCreatePath();\r\n    const pathname = createPath({ resource, type: 'create' });\r\n    return (\r\n        <Button\r\n            component={Link}\r\n            to={\r\n                record\r\n                    ? {\r\n                          pathname,\r\n                          search: stringify({\r\n                              source: JSON.stringify(omitId(record)),\r\n                          }),\r\n                          state: { _scrollToTop: scrollToTop },\r\n                      }\r\n                    : pathname\r\n            }\r\n            label={label}\r\n            onClick={stopPropagation}\r\n            {...sanitizeRestProps(rest)}\r\n        >\r\n            {icon}\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst defaultIcon = <Queue />;\r\n\r\n// useful to prevent click bubbling in a datagrid with rowClick\r\nconst stopPropagation = e => e.stopPropagation();\r\n\r\nconst omitId = ({ id, ...rest }: any) => rest;\r\n\r\nconst sanitizeRestProps = ({\r\n    resource,\r\n    record,\r\n    ...rest\r\n}: Omit<CloneButtonProps, 'label' | 'scrollToTop' | 'icon'>) => rest;\r\n\r\ninterface Props {\r\n    record?: any;\r\n    icon?: ReactElement;\r\n    scrollToTop?: boolean;\r\n}\r\n\r\nexport type CloneButtonProps = Props & ButtonProps;\r\n\r\nCloneButton.propTypes = {\r\n    icon: PropTypes.element,\r\n    label: PropTypes.string,\r\n    record: PropTypes.any,\r\n};\r\n\r\nexport default memo(CloneButton);\r\n", "import * as React from 'react';\r\nimport { ReactElement, ElementType } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Button as MuiButton,\r\n    ButtonProps as MuiButtonProps,\r\n    Tooltip,\r\n    IconButton,\r\n    useMediaQuery,\r\n    Theme,\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useTranslate } from 'ra-core';\r\nimport { Path } from 'react-router';\r\n\r\n/**\r\n * A generic Button with side icon. Only the icon is displayed on small screens.\r\n *\r\n * The component translates the label. Pass the icon as child.\r\n * The icon displays on the left side of the button by default. Set alignIcon prop to 'right' to inverse.\r\n *\r\n * @example\r\n *\r\n * <Button label=\"Edit\" color=\"secondary\" onClick={doEdit}>\r\n *   <ContentCreate />\r\n * </Button>\r\n *\r\n */\r\nexport const Button = (props: ButtonProps) => {\r\n    const {\r\n        alignIcon = 'left',\r\n        children,\r\n        className,\r\n        disabled,\r\n        label,\r\n        color = 'primary',\r\n        size = 'small',\r\n        to: locationDescriptor,\r\n        ...rest\r\n    } = props;\r\n    const translate = useTranslate();\r\n    const translatedLabel = label ? translate(label, { _: label }) : undefined;\r\n    const linkParams = getLinkParams(locationDescriptor);\r\n\r\n    const isXSmall = useMediaQuery((theme: Theme) =>\r\n        theme.breakpoints.down('sm')\r\n    );\r\n\r\n    return isXSmall ? (\r\n        label && !disabled ? (\r\n            <Tooltip title={translatedLabel}>\r\n                <IconButton\r\n                    aria-label={translatedLabel}\r\n                    className={className}\r\n                    color={color}\r\n                    size=\"large\"\r\n                    {...rest}\r\n                    {...linkParams}\r\n                >\r\n                    {children}\r\n                </IconButton>\r\n            </Tooltip>\r\n        ) : (\r\n            <IconButton\r\n                className={className}\r\n                color={color}\r\n                disabled={disabled}\r\n                size=\"large\"\r\n                {...rest}\r\n                {...linkParams}\r\n            >\r\n                {children}\r\n            </IconButton>\r\n        )\r\n    ) : (\r\n        <StyledButton\r\n            className={className}\r\n            color={color}\r\n            size={size}\r\n            aria-label={translatedLabel}\r\n            disabled={disabled}\r\n            startIcon={alignIcon === 'left' && children ? children : undefined}\r\n            endIcon={alignIcon === 'right' && children ? children : undefined}\r\n            {...rest}\r\n            {...linkParams}\r\n        >\r\n            {translatedLabel}\r\n        </StyledButton>\r\n    );\r\n};\r\n\r\ninterface Props {\r\n    alignIcon?: 'left' | 'right';\r\n    children?: ReactElement;\r\n    className?: string;\r\n    component?: ElementType;\r\n    to?: string | LocationDescriptor;\r\n    disabled?: boolean;\r\n    label?: string;\r\n    size?: 'small' | 'medium' | 'large';\r\n    variant?: string;\r\n}\r\n\r\nexport type ButtonProps = Props & MuiButtonProps;\r\n\r\nButton.propTypes = {\r\n    alignIcon: PropTypes.oneOf(['left', 'right']),\r\n    children: PropTypes.element,\r\n    className: PropTypes.string,\r\n    color: PropTypes.oneOfType([\r\n        PropTypes.oneOf([\r\n            'inherit',\r\n            'default',\r\n            'primary',\r\n            'secondary',\r\n            'error',\r\n            'info',\r\n            'success',\r\n            'warning',\r\n        ]),\r\n        PropTypes.string,\r\n    ]),\r\n    disabled: PropTypes.bool,\r\n    label: PropTypes.string,\r\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\r\n};\r\n\r\nconst PREFIX = 'RaButton';\r\n\r\nconst StyledButton = styled(MuiButton, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})({\r\n    '&.MuiButton-sizeSmall': {\r\n        // fix for icon misalignment on small buttons, see https://github.com/mui/material-ui/pull/30240\r\n        lineHeight: 1.5,\r\n    },\r\n});\r\n\r\nconst getLinkParams = (locationDescriptor?: LocationDescriptor | string) => {\r\n    // eslint-disable-next-line eqeqeq\r\n    if (locationDescriptor == undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    if (typeof locationDescriptor === 'string') {\r\n        return { to: locationDescriptor };\r\n    }\r\n\r\n    const { redirect, replace, state, ...to } = locationDescriptor;\r\n    return {\r\n        to,\r\n        redirect,\r\n        replace,\r\n        state,\r\n    };\r\n};\r\n\r\nexport type LocationDescriptor = Partial<Path> & {\r\n    redirect?: boolean;\r\n    state?: any;\r\n    replace?: boolean;\r\n};\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { ReactElement, memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Fab, useMediaQuery, Theme } from '@mui/material';\r\nimport ContentAdd from '@mui/icons-material/Add';\r\nimport clsx from 'clsx';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslate, useResourceContext, useCreatePath } from 'ra-core';\r\nimport isEqual from 'lodash/isEqual';\r\n\r\nimport { Button, ButtonProps } from './Button';\r\n\r\n/**\r\n * Opens the Create view of a given resource\r\n *\r\n * Renders as a regular button on desktop, and a Floating Action Button\r\n * on mobile.\r\n *\r\n * @example // basic usage\r\n * import { CreateButton } from 'react-admin';\r\n *\r\n * const CommentCreateButton = () => (\r\n *     <CreateButton label=\"Create comment\" />\r\n * );\r\n */\r\nconst CreateButton = (props: CreateButtonProps) => {\r\n    const {\r\n        className,\r\n        icon = defaultIcon,\r\n        label = 'ra.action.create',\r\n        resource: resourceProp,\r\n        scrollToTop = true,\r\n        variant,\r\n        ...rest\r\n    } = props;\r\n\r\n    const resource = useResourceContext(props);\r\n    const createPath = useCreatePath();\r\n    const translate = useTranslate();\r\n    const isSmall = useMediaQuery((theme: Theme) =>\r\n        theme.breakpoints.down('md')\r\n    );\r\n\r\n    return isSmall ? (\r\n        <StyledFab\r\n            component={Link}\r\n            to={createPath({ resource, type: 'create' })}\r\n            state={scrollStates[String(scrollToTop)]}\r\n            // @ts-ignore FabProps ships its own runtime palette `FabPropsColorOverrides` provoking an overlap error with `ButtonProps`\r\n            color=\"primary\"\r\n            className={clsx(CreateButtonClasses.floating, className)}\r\n            aria-label={label && translate(label)}\r\n            {...rest}\r\n        >\r\n            {icon}\r\n        </StyledFab>\r\n    ) : (\r\n        <StyledButton\r\n            component={Link}\r\n            to={createPath({ resource, type: 'create' })}\r\n            state={scrollStates[String(scrollToTop)]}\r\n            className={clsx(CreateButtonClasses.root, className)}\r\n            label={label}\r\n            variant={variant}\r\n            {...(rest as any)}\r\n        >\r\n            {icon}\r\n        </StyledButton>\r\n    );\r\n};\r\n\r\n// avoids using useMemo to get a constant value for the link state\r\nconst scrollStates = {\r\n    true: { _scrollToTop: true },\r\n    false: {},\r\n};\r\n\r\nconst defaultIcon = <ContentAdd />;\r\n\r\ninterface Props {\r\n    resource?: string;\r\n    icon?: ReactElement;\r\n    scrollToTop?: boolean;\r\n}\r\n\r\nexport type CreateButtonProps = Props & ButtonProps;\r\n\r\nCreateButton.propTypes = {\r\n    resource: PropTypes.string,\r\n    className: PropTypes.string,\r\n    icon: PropTypes.element,\r\n    label: PropTypes.string,\r\n};\r\n\r\nconst PREFIX = 'RaCreateButton';\r\n\r\nexport const CreateButtonClasses = {\r\n    root: `${PREFIX}-root`,\r\n    floating: `${PREFIX}-floating`,\r\n};\r\n\r\nconst StyledFab = (styled(Fab, {\r\n    name: PREFIX,\r\n    overridesResolver: (_props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    [`&.${CreateButtonClasses.floating}`]: {\r\n        color: theme.palette.getContrastText(theme.palette.primary.main),\r\n        margin: 0,\r\n        top: 'auto',\r\n        right: 20,\r\n        bottom: 60,\r\n        left: 'auto',\r\n        position: 'fixed',\r\n        zIndex: 1000,\r\n    },\r\n})) as unknown) as typeof Fab;\r\n\r\nconst StyledButton = styled(Button, {\r\n    name: PREFIX,\r\n    overridesResolver: (_props, styles) => styles.root,\r\n})({});\r\n\r\nexport default memo(CreateButton, (prevProps, nextProps) => {\r\n    return (\r\n        prevProps.resource === nextProps.resource &&\r\n        prevProps.label === nextProps.label &&\r\n        prevProps.translate === nextProps.translate &&\r\n        prevProps.disabled === nextProps.disabled &&\r\n        isEqual(prevProps.to, nextProps.to)\r\n    );\r\n});\r\n", "function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;", "import * as React from 'react';\r\nimport { memo, ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageEye from '@mui/icons-material/RemoveRedEye';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    RaRecord,\r\n    useResourceContext,\r\n    useRecordContext,\r\n    useCreatePath,\r\n} from 'ra-core';\r\nimport isEqual from 'lodash/isEqual';\r\n\r\nimport { Button, ButtonProps } from './Button';\r\n\r\n/**\r\n * Opens the Show view of a given record\r\n *\r\n * @example // basic usage\r\n * import { ShowButton, useRecordContext } from 'react-admin';\r\n *\r\n * const CommentShowButton = () => {\r\n *     const record = useRecordContext();\r\n *     return (\r\n *         <ShowButton label=\"Show comment\" record={record} />\r\n *     );\r\n * };\r\n */\r\nconst ShowButton = <RecordType extends RaRecord = any>(\r\n    props: ShowButtonProps<RecordType>\r\n) => {\r\n    const {\r\n        icon = defaultIcon,\r\n        label = 'ra.action.show',\r\n        record: recordProp,\r\n        resource: resourceProp,\r\n        scrollToTop = true,\r\n        ...rest\r\n    } = props;\r\n    const resource = useResourceContext(props);\r\n    const record = useRecordContext(props);\r\n    const createPath = useCreatePath();\r\n    if (!record) return null;\r\n    return (\r\n        <Button\r\n            component={Link}\r\n            to={createPath({ type: 'show', resource, id: record.id })}\r\n            state={scrollStates[String(scrollToTop)]}\r\n            label={label}\r\n            onClick={stopPropagation}\r\n            {...(rest as any)}\r\n        >\r\n            {icon}\r\n        </Button>\r\n    );\r\n};\r\n\r\n// avoids using useMemo to get a constant value for the link state\r\nconst scrollStates = {\r\n    true: { _scrollToTop: true },\r\n    false: {},\r\n};\r\n\r\nconst defaultIcon = <ImageEye />;\r\n\r\n// useful to prevent click bubbling in a datagrid with rowClick\r\nconst stopPropagation = e => e.stopPropagation();\r\n\r\ninterface Props<RecordType extends RaRecord = any> {\r\n    icon?: ReactElement;\r\n    label?: string;\r\n    record?: RecordType;\r\n    resource?: string;\r\n    scrollToTop?: boolean;\r\n}\r\n\r\nexport type ShowButtonProps<RecordType extends RaRecord = any> = Props<\r\n    RecordType\r\n> &\r\n    ButtonProps;\r\n\r\nShowButton.propTypes = {\r\n    icon: PropTypes.element,\r\n    label: PropTypes.string,\r\n    record: PropTypes.any,\r\n    scrollToTop: PropTypes.bool,\r\n};\r\n\r\nconst PureShowButton = memo(\r\n    ShowButton,\r\n    (prevProps, nextProps) =>\r\n        prevProps.resource === nextProps.resource &&\r\n        (prevProps.record && nextProps.record\r\n            ? prevProps.record.id === nextProps.record.id\r\n            : prevProps.record == nextProps.record) && // eslint-disable-line eqeqeq\r\n        prevProps.label === nextProps.label &&\r\n        prevProps.disabled === nextProps.disabled &&\r\n        isEqual(prevProps.to, nextProps.to)\r\n);\r\n\r\nexport default PureShowButton;\r\n", "import * as React from 'react';\r\nimport { ReactElement, memo } from 'react';\r\nimport {\r\n    Button,\r\n    Menu,\r\n    MenuItem,\r\n    Tooltip,\r\n    IconButton,\r\n    useMediaQuery,\r\n    Theme,\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport SortIcon from '@mui/icons-material/Sort';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport {\r\n    useListSortContext,\r\n    useTranslate,\r\n    useTranslateLabel,\r\n    shallowEqual,\r\n} from 'ra-core';\r\n\r\n/**\r\n * A button allowing to change the sort field and order.\r\n *\r\n * To be used inside a ListContext (e.g. inside a <List> or <ReferenceManyField>)\r\n *\r\n * Expects one 'fields' prop, containing an array of field strings that shall\r\n * be used and displayed for sorting.\r\n *\r\n * When users clicks on the <SortButton>, they see a dropdown list with the\r\n * proposed sorting fields. Once they click on one of these fields, the related\r\n * list refreshes, re-sorted.\r\n *\r\n * @example\r\n *\r\n * import * as React from 'react';\r\n * import { TopToolbar, SortButton, CreateButton, ExportButton } from 'react-admin';\r\n *\r\n * const ListActions = () => (\r\n *     <TopToolbar>\r\n *         <SortButton fields={['reference', 'sales', 'stock']} />\r\n *         <CreateButton />\r\n *         <ExportButton />\r\n *     </TopToolbar>\r\n * );\r\n */\r\nconst SortButton = (props: SortButtonProps) => {\r\n    const { fields, label = 'ra.sort.sort_by', icon = defaultIcon } = props;\r\n    const { resource, sort, setSort } = useListSortContext();\r\n    const translate = useTranslate();\r\n    const translateLabel = useTranslateLabel();\r\n    const isXSmall = useMediaQuery((theme: Theme) =>\r\n        theme.breakpoints.down('sm')\r\n    );\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleChangeSort = (\r\n        event: React.MouseEvent<HTMLLIElement, MouseEvent>\r\n    ) => {\r\n        const field = event.currentTarget.dataset.sort;\r\n        setSort({\r\n            field,\r\n            order: field === sort.field ? inverseOrder(sort.order) : 'ASC',\r\n        });\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const buttonLabel = translate(label, {\r\n        field: translateLabel({\r\n            resource,\r\n            source: sort.field,\r\n        }),\r\n        order: translate(`ra.sort.${sort.order}`),\r\n        _: label,\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {isXSmall ? (\r\n                <Tooltip title={buttonLabel}>\r\n                    <IconButton\r\n                        aria-label={buttonLabel}\r\n                        color=\"primary\"\r\n                        onClick={handleClick}\r\n                        size=\"large\"\r\n                    >\r\n                        {icon}\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : (\r\n                <StyledButton\r\n                    aria-controls=\"simple-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"primary\"\r\n                    onClick={handleClick}\r\n                    startIcon={icon}\r\n                    endIcon={<ArrowDropDownIcon />}\r\n                    size=\"small\"\r\n                >\r\n                    {buttonLabel}\r\n                </StyledButton>\r\n            )}\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {fields.map(field => (\r\n                    <MenuItem\r\n                        onClick={handleChangeSort}\r\n                        data-sort={field}\r\n                        key={field}\r\n                    >\r\n                        {translateLabel({\r\n                            resource,\r\n                            source: field,\r\n                        })}{' '}\r\n                        {translate(\r\n                            `ra.sort.${\r\n                                sort.field === field\r\n                                    ? inverseOrder(sort.order)\r\n                                    : 'ASC'\r\n                            }`\r\n                        )}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </>\r\n    );\r\n};\r\n\r\nconst defaultIcon = <SortIcon />;\r\n\r\nconst inverseOrder = (sort: string) => (sort === 'ASC' ? 'DESC' : 'ASC');\r\n\r\nconst arePropsEqual = (prevProps, nextProps) =>\r\n    shallowEqual(prevProps.fields, nextProps.fields);\r\n\r\nexport interface SortButtonProps {\r\n    fields: string[];\r\n    icon?: ReactElement;\r\n    label?: string;\r\n    resource?: string;\r\n}\r\n\r\nconst StyledButton = styled(Button, {\r\n    name: 'RaSortButton',\r\n    overridesResolver: (props, styles) => styles.root,\r\n})({\r\n    '&.MuiButton-sizeSmall': {\r\n        // fix for icon misalignment on small buttons, see https://github.com/mui/material-ui/pull/30240\r\n        lineHeight: 1.5,\r\n    },\r\n    '& .MuiButton-endIcon': { ml: 0 },\r\n});\r\n\r\nexport default memo(SortButton, arePropsEqual);\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    BulkDeleteWithConfirmButton,\r\n    BulkDeleteWithConfirmButtonProps,\r\n} from './BulkDeleteWithConfirmButton';\r\nimport {\r\n    BulkDeleteWithUndoButton,\r\n    BulkDeleteWithUndoButtonProps,\r\n} from './BulkDeleteWithUndoButton';\r\nimport { MutationMode } from 'ra-core';\r\n\r\n/**\r\n * Deletes the selected rows.\r\n *\r\n * To be used inside the <List bulkActionButtons> prop (where it's enabled by default).\r\n *\r\n * @example // basic usage\r\n * import * as React from 'react';\r\n * import { Fragment } from 'react';\r\n * import { BulkDeleteButton, BulkExportButton } from 'react-admin';\r\n *\r\n * const PostBulkActionButtons = () => (\r\n *     <Fragment>\r\n *         <BulkExportButton />\r\n *         <BulkDeleteButton />\r\n *     </Fragment>\r\n * );\r\n *\r\n * export const PostList = () => (\r\n *     <List bulkActionButtons={<PostBulkActionButtons />}>\r\n *         ...\r\n *     </List>\r\n * );\r\n */\r\nexport const BulkDeleteButton = ({\r\n    mutationMode = 'undoable',\r\n    ...props\r\n}: BulkDeleteButtonProps) =>\r\n    mutationMode === 'undoable' ? (\r\n        <BulkDeleteWithUndoButton {...props} />\r\n    ) : (\r\n        <BulkDeleteWithConfirmButton mutationMode={mutationMode} {...props} />\r\n    );\r\n\r\ninterface Props {\r\n    mutationMode?: MutationMode;\r\n}\r\n\r\nexport type BulkDeleteButtonProps = Props &\r\n    (BulkDeleteWithUndoButtonProps | BulkDeleteWithConfirmButtonProps);\r\n\r\nBulkDeleteButton.propTypes = {\r\n    label: PropTypes.string,\r\n    resource: PropTypes.string,\r\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\r\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\r\n    icon: PropTypes.element,\r\n};\r\n", "import * as React from 'react';\r\nimport { Fragment, ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ActionDelete from '@mui/icons-material/Delete';\r\nimport inflection from 'inflection';\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport {\r\n    MutationMode,\r\n    useDeleteMany,\r\n    useListContext,\r\n    useNotify,\r\n    useRefresh,\r\n    useResourceContext,\r\n    useTranslate,\r\n    useSafeSetState,\r\n    RaRecord,\r\n    DeleteManyParams,\r\n} from 'ra-core';\r\n\r\nimport { Confirm } from '../layout';\r\nimport { Button, ButtonProps } from './Button';\r\nimport { BulkActionProps } from '../types';\r\nimport { UseMutationOptions } from 'react-query';\r\n\r\nexport const BulkDeleteWithConfirmButton = (\r\n    props: BulkDeleteWithConfirmButtonProps\r\n) => {\r\n    const {\r\n        confirmTitle = 'ra.message.bulk_delete_title',\r\n        confirmContent = 'ra.message.bulk_delete_content',\r\n        icon = defaultIcon,\r\n        label = 'ra.action.delete',\r\n        mutationMode = 'pessimistic',\r\n        mutationOptions = {},\r\n        onClick,\r\n        ...rest\r\n    } = props;\r\n    const { meta: mutationMeta, ...otherMutationOptions } = mutationOptions;\r\n    const { selectedIds, onUnselectItems } = useListContext(props);\r\n    const [isOpen, setOpen] = useSafeSetState(false);\r\n    const notify = useNotify();\r\n    const resource = useResourceContext(props);\r\n    const refresh = useRefresh();\r\n    const translate = useTranslate();\r\n    const [deleteMany, { isLoading }] = useDeleteMany(\r\n        resource,\r\n        { ids: selectedIds, meta: mutationMeta },\r\n        {\r\n            onSuccess: () => {\r\n                refresh();\r\n                notify('ra.notification.deleted', {\r\n                    type: 'info',\r\n                    messageArgs: { smart_count: selectedIds.length },\r\n                    undoable: mutationMode === 'undoable',\r\n                });\r\n                onUnselectItems();\r\n                setOpen(false);\r\n            },\r\n            onError: (error: Error) => {\r\n                notify(\r\n                    typeof error === 'string'\r\n                        ? error\r\n                        : error.message || 'ra.notification.http_error',\r\n                    {\r\n                        type: 'error',\r\n                        messageArgs: {\r\n                            _:\r\n                                typeof error === 'string'\r\n                                    ? error\r\n                                    : error && error.message\r\n                                    ? error.message\r\n                                    : undefined,\r\n                        },\r\n                    }\r\n                );\r\n                setOpen(false);\r\n            },\r\n            mutationMode,\r\n            ...otherMutationOptions,\r\n        }\r\n    );\r\n\r\n    const handleClick = e => {\r\n        setOpen(true);\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDelete = e => {\r\n        deleteMany();\r\n\r\n        if (typeof onClick === 'function') {\r\n            onClick(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <StyledButton\r\n                onClick={handleClick}\r\n                label={label}\r\n                {...sanitizeRestProps(rest)}\r\n            >\r\n                {icon}\r\n            </StyledButton>\r\n            <Confirm\r\n                isOpen={isOpen}\r\n                loading={isLoading}\r\n                title={confirmTitle}\r\n                content={confirmContent}\r\n                translateOptions={{\r\n                    smart_count: selectedIds.length,\r\n                    name: translate(`resources.${resource}.forcedCaseName`, {\r\n                        smart_count: selectedIds.length,\r\n                        _: inflection.humanize(\r\n                            translate(`resources.${resource}.name`, {\r\n                                smart_count: selectedIds.length,\r\n                                _: inflection.inflect(\r\n                                    resource,\r\n                                    selectedIds.length\r\n                                ),\r\n                            }),\r\n                            true\r\n                        ),\r\n                    }),\r\n                }}\r\n                onConfirm={handleDelete}\r\n                onClose={handleDialogClose}\r\n            />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst sanitizeRestProps = ({\r\n    classes,\r\n    filterValues,\r\n    label,\r\n    selectedIds,\r\n    ...rest\r\n}: Omit<\r\n    BulkDeleteWithConfirmButtonProps,\r\n    'resource' | 'icon' | 'mutationMode'\r\n>) => rest;\r\n\r\nexport interface BulkDeleteWithConfirmButtonProps<\r\n    RecordType extends RaRecord = any,\r\n    MutationOptionsError = unknown\r\n> extends BulkActionProps,\r\n        ButtonProps {\r\n    confirmContent?: React.ReactNode;\r\n    confirmTitle?: React.ReactNode;\r\n    icon?: ReactElement;\r\n    mutationMode: MutationMode;\r\n    mutationOptions?: UseMutationOptions<\r\n        RecordType,\r\n        MutationOptionsError,\r\n        DeleteManyParams<RecordType>\r\n    > & { meta?: any };\r\n}\r\n\r\nconst PREFIX = 'RaBulkDeleteWithConfirmButton';\r\n\r\nconst StyledButton = styled(Button, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    color: theme.palette.error.main,\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.error.main, 0.12),\r\n        // Reset on mouse devices\r\n        '@media (hover: none)': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n}));\r\n\r\nconst defaultIcon = <ActionDelete />;\r\n\r\nBulkDeleteWithConfirmButton.propTypes = {\r\n    confirmTitle: PropTypes.node,\r\n    confirmContent: PropTypes.node,\r\n    icon: PropTypes.element,\r\n    label: PropTypes.string,\r\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\r\n    resource: PropTypes.string,\r\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\r\n};\r\n", "import * as React from 'react';\r\nimport { FC } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Children, memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    AppBar as MuiAppBar,\r\n    AppBarProps as MuiAppBarProps,\r\n    Toolbar,\r\n    useMediaQuery,\r\n    Theme,\r\n} from '@mui/material';\r\nimport { ComponentPropType, useLocales } from 'ra-core';\r\n\r\nimport { SidebarToggleButton } from './SidebarToggleButton';\r\nimport { LoadingIndicator } from './LoadingIndicator';\r\nimport { UserMenu } from './UserMenu';\r\nimport { HideOnScroll } from './HideOnScroll';\r\nimport { TitlePortal } from './TitlePortal';\r\nimport { LocalesMenuButton } from '../button';\r\nimport { useThemesContext } from './Theme/useThemesContext';\r\nimport { ToggleThemeButton } from '../button/ToggleThemeButton';\r\n\r\n/**\r\n * The AppBar component renders a custom MuiAppBar.\r\n *\r\n * @param {Object} props\r\n * @param {ReactNode} props.children React node/s to be rendered as children of the AppBar\r\n * @param {string} props.className CSS class applied to the MuiAppBar component\r\n * @param {string} props.color The color of the AppBar\r\n * @param {Element | boolean} props.userMenu A custom user menu component for the AppBar. <UserMenu/> component by default. Pass false to disable.\r\n *\r\n * @example // add a custom button to the AppBar\r\n *\r\n * const MyAppBar = () => (\r\n *   <AppBar>\r\n *     <TitlePortal />\r\n *     <MyCustomButton />\r\n *   </AppBar>\r\n * );\r\n *\r\n * @example // without a user menu\r\n *\r\n * const MyAppBar = () => <AppBar userMenu={false} />;\r\n */\r\nexport const AppBar: FC<AppBarProps> = memo(props => {\r\n    const {\r\n        alwaysOn,\r\n        children,\r\n        className,\r\n        color = 'secondary',\r\n        open,\r\n        title,\r\n        toolbar = defaultToolbarElement,\r\n        userMenu = DefaultUserMenu,\r\n        container: Container = alwaysOn ? 'div' : HideOnScroll,\r\n        ...rest\r\n    } = props;\r\n\r\n    const isXSmall = useMediaQuery<Theme>(theme =>\r\n        theme.breakpoints.down('sm')\r\n    );\r\n\r\n    return (\r\n        <Container className={className}>\r\n            <StyledAppBar\r\n                className={AppBarClasses.appBar}\r\n                color={color}\r\n                {...rest}\r\n            >\r\n                <Toolbar\r\n                    disableGutters\r\n                    variant={isXSmall ? 'regular' : 'dense'}\r\n                    className={AppBarClasses.toolbar}\r\n                >\r\n                    <SidebarToggleButton className={AppBarClasses.menuButton} />\r\n                    {Children.count(children) === 0 ? (\r\n                        <TitlePortal className={AppBarClasses.title} />\r\n                    ) : (\r\n                        children\r\n                    )}\r\n                    {toolbar}\r\n                    {typeof userMenu === 'boolean' ? (\r\n                        userMenu === true ? (\r\n                            <UserMenu />\r\n                        ) : null\r\n                    ) : (\r\n                        userMenu\r\n                    )}\r\n                </Toolbar>\r\n            </StyledAppBar>\r\n        </Container>\r\n    );\r\n});\r\n\r\nconst DefaultToolbar = () => {\r\n    const locales = useLocales();\r\n    const { darkTheme } = useThemesContext();\r\n    return (\r\n        <>\r\n            {locales && locales.length > 1 ? <LocalesMenuButton /> : null}\r\n            {darkTheme && <ToggleThemeButton />}\r\n            <LoadingIndicator />\r\n        </>\r\n    );\r\n};\r\n\r\nconst defaultToolbarElement = <DefaultToolbar />;\r\n\r\nAppBar.propTypes = {\r\n    alwaysOn: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    color: PropTypes.oneOf([\r\n        'default',\r\n        'inherit',\r\n        'primary',\r\n        'secondary',\r\n        'transparent',\r\n    ]),\r\n    container: ComponentPropType,\r\n    /**\r\n     * @deprecated\r\n     */\r\n    open: PropTypes.bool,\r\n    toolbar: PropTypes.element,\r\n    userMenu: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\r\n};\r\n\r\nconst DefaultUserMenu = <UserMenu />;\r\n\r\nexport interface AppBarProps extends Omit<MuiAppBarProps, 'title'> {\r\n    /**\r\n     * This prop is injected by Layout. You should not use it directly unless\r\n     * you are using a custom layout.\r\n     * If you are using the default layout, use `<Layout appBarAlwaysOn>` instead.\r\n     */\r\n    alwaysOn?: boolean;\r\n    container?: React.ElementType<any>;\r\n    /**\r\n     * @deprecated injected by Layout but not used by this AppBar\r\n     */\r\n    open?: boolean;\r\n    /**\r\n     * @deprecated injected by Layout but not used by this AppBar\r\n     */\r\n    title?: string | JSX.Element;\r\n    toolbar?: JSX.Element;\r\n    userMenu?: JSX.Element | boolean;\r\n}\r\n\r\nconst PREFIX = 'RaAppBar';\r\n\r\nexport const AppBarClasses = {\r\n    appBar: `${PREFIX}-appBar`,\r\n    toolbar: `${PREFIX}-toolbar`,\r\n    menuButton: `${PREFIX}-menuButton`,\r\n    menuButtonIconClosed: `${PREFIX}-menuButtonIconClosed`,\r\n    menuButtonIconOpen: `${PREFIX}-menuButtonIconOpen`,\r\n    title: `${PREFIX}-title`,\r\n};\r\n\r\nconst StyledAppBar = styled(MuiAppBar, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    [`& .${AppBarClasses.toolbar}`]: {\r\n        padding: `0 ${theme.spacing(1)}`,\r\n        [theme.breakpoints.down('md')]: {\r\n            minHeight: theme.spacing(6),\r\n        },\r\n    },\r\n    [`& .${AppBarClasses.menuButton}`]: {\r\n        marginRight: '0.2em',\r\n    },\r\n    [`& .${AppBarClasses.title}`]: {},\r\n}));\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { IconButton, Tooltip } from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { useTranslate } from 'ra-core';\r\n\r\nimport { useSidebarState } from './useSidebarState';\r\n\r\n/**\r\n * A button that toggles the sidebar. Used by default in the <AppBar>.\r\n * @param props The component props\r\n * @param {String} props.className An optional class name to apply to the button\r\n */\r\nexport const SidebarToggleButton = (props: SidebarToggleButtonProps) => {\r\n    const translate = useTranslate();\r\n\r\n    const { className } = props;\r\n    const [open, setOpen] = useSidebarState();\r\n\r\n    return (\r\n        <Tooltip\r\n            className={className}\r\n            title={translate(\r\n                open ? 'ra.action.close_menu' : 'ra.action.open_menu',\r\n                { _: 'Open/Close menu' }\r\n            )}\r\n            enterDelay={500}\r\n        >\r\n            <StyledIconButton color=\"inherit\" onClick={() => setOpen(!open)}>\r\n                <MenuIcon\r\n                    classes={{\r\n                        root: open\r\n                            ? SidebarToggleButtonClasses.menuButtonIconOpen\r\n                            : SidebarToggleButtonClasses.menuButtonIconClosed,\r\n                    }}\r\n                />\r\n            </StyledIconButton>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nexport type SidebarToggleButtonProps = {\r\n    className?: string;\r\n};\r\n\r\nconst PREFIX = 'RaSidebarToggleButton';\r\n\r\nexport const SidebarToggleButtonClasses = {\r\n    menuButtonIconClosed: `${PREFIX}-menuButtonIconClosed`,\r\n    menuButtonIconOpen: `${PREFIX}-menuButtonIconOpen`,\r\n};\r\n\r\nconst StyledIconButton = styled(IconButton, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    [`& .${SidebarToggleButtonClasses.menuButtonIconClosed}`]: {\r\n        transition: theme.transitions.create(['transform'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        transform: 'rotate(0deg)',\r\n    },\r\n\r\n    [`& .${SidebarToggleButtonClasses.menuButtonIconOpen}`]: {\r\n        transition: theme.transitions.create(['transform'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        transform: 'rotate(180deg)',\r\n    },\r\n}));\r\n", "import { useStore } from 'ra-core';\r\nimport { useMediaQuery, Theme } from '@mui/material';\r\n\r\n/**\r\n * A hook that returns the sidebar open state and a function to toggle it.\r\n *\r\n * The sidebar is open by default on desktop, and closed by default on mobile.\r\n *\r\n * @example\r\n * const ToggleSidebar = () => {\r\n *     const [open, setOpen] = useSidebarState();\r\n *     return (\r\n *         <Button onClick={() => setOpen(!open)}>\r\n *             {open ? 'Open' : 'Close'}\r\n *         </Button>\r\n *     );\r\n * };\r\n */\r\nexport const useSidebarState = (): useSidebarStateResult => {\r\n    const isXSmall = useMediaQuery<Theme>(\r\n        theme => theme?.breakpoints.down('sm'),\r\n        { noSsr: true }\r\n    );\r\n    return useStore<boolean>('sidebar.open', isXSmall ? false : true);\r\n};\r\n\r\nexport type useSidebarStateResult = [boolean, (open: boolean) => void];\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { useLoading } from 'ra-core';\r\n\r\nimport { RefreshIconButton } from '../button';\r\nimport { SxProps } from '@mui/system';\r\n\r\nexport const LoadingIndicator = (props: LoadingIndicatorProps) => {\r\n    const { className, sx, ...rest } = props;\r\n    const loading = useLoading();\r\n\r\n    const theme = useTheme();\r\n    return (\r\n        <Root className={className} sx={sx}>\r\n            {loading ? (\r\n                <CircularProgress\r\n                    className={clsx(\r\n                        'app-loader',\r\n                        LoadingIndicatorClasses.loader\r\n                    )}\r\n                    color=\"inherit\"\r\n                    size={theme.spacing(2)}\r\n                    thickness={6}\r\n                    {...rest}\r\n                />\r\n            ) : (\r\n                <RefreshIconButton\r\n                    className={LoadingIndicatorClasses.loadedIcon}\r\n                />\r\n            )}\r\n        </Root>\r\n    );\r\n};\r\n\r\nLoadingIndicator.propTypes = {\r\n    classes: PropTypes.object,\r\n    className: PropTypes.string,\r\n    width: PropTypes.string,\r\n};\r\n\r\ninterface LoadingIndicatorProps {\r\n    className?: string;\r\n    sx?: SxProps;\r\n}\r\n\r\nconst PREFIX = 'RaLoadingIndicator';\r\n\r\nexport const LoadingIndicatorClasses = {\r\n    loader: `${PREFIX}-loader`,\r\n    loadedIcon: `${PREFIX}-loadedIcon`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    [`& .${LoadingIndicatorClasses.loader}`]: {\r\n        marginLeft: theme.spacing(1.5),\r\n        marginRight: theme.spacing(1.5),\r\n    },\r\n\r\n    [`& .${LoadingIndicatorClasses.loadedIcon}`]: {},\r\n}));\r\n", "import * as React from 'react';\r\nimport { ReactNode, useCallback, useMemo, useState } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { useAuthProvider, useGetIdentity, useTranslate } from 'ra-core';\r\nimport {\r\n    Tooltip,\r\n    IconButton,\r\n    Menu,\r\n    Button,\r\n    Avatar,\r\n    PopoverOrigin,\r\n    useMediaQuery,\r\n    Theme,\r\n} from '@mui/material';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport { UserMenuContextProvider } from './UserMenuContextProvider';\r\nimport { Logout } from '../auth/Logout';\r\n\r\n/**\r\n * The UserMenu component renders a Mui Button that shows a Menu.\r\n * It accepts children that must be Mui MenuItem components.\r\n *\r\n * @example\r\n * import { Logout, UserMenu, useUserMenu } from 'react-admin';\r\n * import MenuItem from '@mui/material/MenuItem';\r\n * import ListItemIcon from '@mui/material/ListItemIcon';\r\n * import ListItemText from '@mui/material/ListItemText';\r\n * import SettingsIcon from '@mui/icons-material/Settings';\r\n\r\n * const ConfigurationMenu = React.forwardRef((props, ref) => {\r\n *     const { onClose } = useUserMenu();\r\n *     return (\r\n *         <MenuItem\r\n *             ref={ref}\r\n *             {...props}\r\n *             to=\"/configuration\"\r\n *             onClick={onClose}\r\n *         >\r\n *             <ListItemIcon>\r\n *                 <SettingsIcon />\r\n *             </ListItemIcon>\r\n *             <ListItemText>Configuration</ListItemText>\r\n *         </MenuItem>\r\n *     );\r\n * });\r\n *\r\n * export const MyUserMenu = () => (\r\n *     <UserMenu>\r\n *         <ConfigurationMenu />\r\n *         <Logout />\r\n *     </UserMenu>\r\n * );\r\n * @param props\r\n * @param {ReactNode} props.children React node/s to be rendered as children of the UserMenu. Must be Mui MenuItem components\r\n * @param {string} props.className CSS class applied to the MuiAppBar component\r\n * @param {string} props.label The label of the UserMenu button. Accepts translation keys\r\n * @param {Element} props.icon The icon of the UserMenu button.\r\n *\r\n */\r\nexport const UserMenu = (props: UserMenuProps) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const translate = useTranslate();\r\n    const { isLoading, identity } = useGetIdentity();\r\n    const authProvider = useAuthProvider();\r\n    const isLargeEnough = useMediaQuery<Theme>(theme =>\r\n        theme.breakpoints.up('sm')\r\n    );\r\n\r\n    const {\r\n        children = !!authProvider ? <Logout /> : null,\r\n        className,\r\n        label = 'ra.auth.user_menu',\r\n        icon = defaultIcon,\r\n    } = props;\r\n\r\n    const handleMenu = event => setAnchorEl(event.currentTarget);\r\n    const handleClose = useCallback(() => setAnchorEl(null), []);\r\n    const context = useMemo(() => ({ onClose: handleClose }), [handleClose]);\r\n    if (!children) return null;\r\n    const open = Boolean(anchorEl);\r\n\r\n    return (\r\n        <Root className={className}>\r\n            {isLargeEnough && !isLoading && identity?.fullName ? (\r\n                <Button\r\n                    aria-label={label && translate(label, { _: label })}\r\n                    className={UserMenuClasses.userButton}\r\n                    color=\"inherit\"\r\n                    startIcon={\r\n                        identity.avatar ? (\r\n                            <Avatar\r\n                                className={UserMenuClasses.avatar}\r\n                                src={identity.avatar}\r\n                                alt={identity.fullName}\r\n                            />\r\n                        ) : (\r\n                            icon\r\n                        )\r\n                    }\r\n                    onClick={handleMenu}\r\n                >\r\n                    {identity.fullName}\r\n                </Button>\r\n            ) : (\r\n                <Tooltip title={label && translate(label, { _: 'Profile' })}>\r\n                    <IconButton\r\n                        aria-label={label && translate(label, { _: 'Profile' })}\r\n                        aria-owns={open ? 'menu-appbar' : null}\r\n                        aria-haspopup={true}\r\n                        color=\"inherit\"\r\n                        onClick={handleMenu}\r\n                    >\r\n                        {!isLoading && identity?.avatar ? (\r\n                            <Avatar\r\n                                className={UserMenuClasses.avatar}\r\n                                src={identity.avatar}\r\n                                alt={identity.fullName}\r\n                            />\r\n                        ) : (\r\n                            icon\r\n                        )}\r\n                    </IconButton>\r\n                </Tooltip>\r\n            )}\r\n            <UserMenuContextProvider value={context}>\r\n                <Menu\r\n                    id=\"menu-appbar\"\r\n                    disableScrollLock\r\n                    anchorEl={anchorEl}\r\n                    anchorOrigin={AnchorOrigin}\r\n                    transformOrigin={TransformOrigin}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    {children}\r\n                </Menu>\r\n            </UserMenuContextProvider>\r\n        </Root>\r\n    );\r\n};\r\n\r\nUserMenu.propTypes = {\r\n    children: PropTypes.node,\r\n    classes: PropTypes.object,\r\n    label: PropTypes.string,\r\n    icon: PropTypes.node,\r\n};\r\n\r\nexport interface UserMenuProps {\r\n    children?: ReactNode;\r\n    className?: string;\r\n    label?: string;\r\n    icon?: ReactNode;\r\n}\r\n\r\nconst PREFIX = 'RaUserMenu';\r\n\r\nexport const UserMenuClasses = {\r\n    userButton: `${PREFIX}-userButton`,\r\n    avatar: `${PREFIX}-avatar`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    [`& .${UserMenuClasses.userButton}`]: {\r\n        textTransform: 'none',\r\n        marginInlineStart: theme.spacing(0.5),\r\n    },\r\n\r\n    [`& .${UserMenuClasses.avatar}`]: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n    },\r\n}));\r\n\r\nconst defaultIcon = <AccountCircle />;\r\n\r\nconst AnchorOrigin: PopoverOrigin = {\r\n    vertical: 'bottom',\r\n    horizontal: 'right',\r\n};\r\n\r\nconst TransformOrigin: PopoverOrigin = {\r\n    vertical: 'top',\r\n    horizontal: 'right',\r\n};\r\n", "import * as React from 'react';\r\nimport { ReactNode } from 'react';\r\nimport { UserMenuContext, UserMenuContextValue } from './UserMenuContext';\r\n\r\n/**\r\n * A React context provider that provides access to the user menu context.\r\n * @param props\r\n * @param {ReactNode} props.children\r\n * @param {UserMenuContextValue} props.value The user menu context\r\n */\r\nexport const UserMenuContextProvider = ({ children, value }) => (\r\n    <UserMenuContext.Provider value={value}>\r\n        {children}\r\n    </UserMenuContext.Provider>\r\n);\r\n\r\nexport type UserMenuContextProviderProps = {\r\n    children: ReactNode;\r\n    value: UserMenuContextValue;\r\n};\r\n", "import { createContext } from 'react';\r\n\r\n/**\r\n * This context provides access to a function for closing the user menu.\r\n *\r\n * @example\r\n * import { Logout, MenuItemLink, UserMenu, useUserMenu } from 'react-admin';\r\n *\r\n * const ConfigurationMenu = () => {\r\n *     const { onClose } = useUserMenu();\r\n *     return (\r\n *         <MenuItemLink\r\n *             to=\"/configuration\"\r\n *             primaryText=\"pos.configuration\"\r\n *             leftIcon={<SettingsIcon />}\r\n *             sidebarIsOpen\r\n *             onClick={onClose}\r\n *         />\r\n *     );\r\n * };\r\n *\r\n * export const MyUserMenu = () => (\r\n *     <UserMenu>\r\n *         <ConfigurationMenu />\r\n *         <Logout />\r\n *     </UserMenu>\r\n * );\r\n */\r\nexport const UserMenuContext = createContext<UserMenuContextValue>(undefined);\r\n\r\nexport type UserMenuContextValue = {\r\n    /**\r\n     * Closes the user menu\r\n     * @see UserMenu\r\n     */\r\n    onClose: () => void;\r\n};\r\n", "import * as React from 'react';\r\nimport { styled, Theme } from '@mui/material/styles';\r\nimport { useCallback, FunctionComponent, ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    ListItemIcon,\r\n    ListItemText,\r\n    MenuItem,\r\n    useMediaQuery,\r\n} from '@mui/material';\r\nimport { MenuItemProps } from '@mui/material/MenuItem';\r\n\r\nimport ExitIcon from '@mui/icons-material/PowerSettingsNew';\r\nimport clsx from 'clsx';\r\nimport { useTranslate, useLogout, useAuthState } from 'ra-core';\r\n\r\n/**\r\n * Logout button component, to be passed to the Admin component\r\n *\r\n * Used for the Logout Menu item in the sidebar\r\n */\r\nexport const Logout: FunctionComponent<\r\n    LogoutProps & MenuItemProps<'li'>\r\n> = React.forwardRef(function Logout(props, ref) {\r\n    const { className, redirectTo, icon, ...rest } = props;\r\n\r\n    const { authenticated } = useAuthState();\r\n    const isXSmall = useMediaQuery((theme: Theme) =>\r\n        theme.breakpoints.down('sm')\r\n    );\r\n    const translate = useTranslate();\r\n    const logout = useLogout();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const handleClick = useCallback(() => logout(null, redirectTo, false), [\r\n        redirectTo,\r\n        logout,\r\n    ]);\r\n\r\n    if (!authenticated) return null;\r\n\r\n    return (\r\n        <StyledMenuItem\r\n            className={clsx('logout', className)}\r\n            onClick={handleClick}\r\n            ref={ref}\r\n            // @ts-ignore\r\n            component={isXSmall ? 'span' : 'li'}\r\n            {...rest}\r\n        >\r\n            <ListItemIcon className={LogoutClasses.icon}>\r\n                {icon ? icon : <ExitIcon fontSize=\"small\" />}\r\n            </ListItemIcon>\r\n            <ListItemText>\r\n                {translate('ra.auth.logout', { _: 'Logout' })}\r\n            </ListItemText>\r\n        </StyledMenuItem>\r\n    );\r\n});\r\n\r\nLogout.propTypes = {\r\n    className: PropTypes.string,\r\n    redirectTo: PropTypes.string,\r\n    icon: PropTypes.element,\r\n};\r\n\r\nconst PREFIX = 'RaLogout';\r\n\r\nexport const LogoutClasses = {\r\n    icon: `${PREFIX}-icon`,\r\n};\r\n\r\nconst StyledMenuItem = styled(MenuItem, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})({\r\n    [`& .${LogoutClasses.icon}`]: {},\r\n});\r\n\r\nexport interface LogoutProps {\r\n    className?: string;\r\n    redirectTo?: string;\r\n    icon?: ReactElement;\r\n}\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nexport const HideOnScroll = (props: HideOnScrollProps) => {\r\n    const { children, className } = props;\r\n    const trigger = useScrollTrigger();\r\n    return (\r\n        <Slide\r\n            appear={false}\r\n            direction=\"down\"\r\n            in={!trigger}\r\n            className={className}\r\n        >\r\n            {children}\r\n        </Slide>\r\n    );\r\n};\r\n\r\nHideOnScroll.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    className: PropTypes.string,\r\n};\r\n\r\nexport interface HideOnScrollProps {\r\n    children: React.ReactElement;\r\n    className?: string;\r\n}\r\n", "import * as React from 'react';\r\nimport { Typography, TypographyProps } from '@mui/material';\r\n\r\nexport const TitlePortal = (props: TypographyProps) => (\r\n    <Typography\r\n        flex=\"1\"\r\n        textOverflow=\"ellipsis\"\r\n        whiteSpace=\"nowrap\"\r\n        overflow=\"hidden\"\r\n        variant=\"h6\"\r\n        color=\"inherit\"\r\n        id=\"react-admin-title\"\r\n        {...props}\r\n    />\r\n);\r\n", "import { useContext } from 'react';\r\n\r\nimport { ThemesContext } from './ThemesContext';\r\nimport { RaThemeOptions } from './types';\r\n\r\nexport const useThemesContext = (params?: UseThemesContextParams) => {\r\n    const { lightTheme, darkTheme, defaultTheme } = params || {};\r\n    const context = useContext(ThemesContext);\r\n    return {\r\n        lightTheme: lightTheme || context.lightTheme,\r\n        darkTheme: darkTheme || context.darkTheme,\r\n        defaultTheme: defaultTheme ?? context.defaultTheme,\r\n    };\r\n};\r\n\r\nexport interface UseThemesContextParams {\r\n    lightTheme?: RaThemeOptions;\r\n    darkTheme?: RaThemeOptions;\r\n    defaultTheme?: 'dark' | 'light';\r\n    [key: string]: any;\r\n}\r\n", "import { createContext } from 'react';\r\nimport { RaThemeOptions } from './types';\r\n\r\nexport const ThemesContext = createContext<ThemesContextValue>({});\r\n\r\nexport interface ThemesContextValue {\r\n    darkTheme?: RaThemeOptions;\r\n    lightTheme?: RaThemeOptions;\r\n    defaultTheme?: 'dark' | 'light';\r\n}\r\n", "import React from 'react';\r\nimport { Tooltip, IconButton, useMediaQuery } from '@mui/material';\r\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\r\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\r\nimport { useTranslate } from 'ra-core';\r\n\r\nimport { ToggleThemeLegacyButton } from './ToggleThemeLegacyButton';\r\nimport { RaThemeOptions, useThemesContext, useTheme } from '../layout';\r\n\r\n/**\r\n * Button toggling the theme (light or dark).\r\n *\r\n * Enabled by default in the <AppBar> when the <Admin> component has a darkMode.\r\n *\r\n * @example\r\n * import { AppBar, ToggleThemeButton } from 'react-admin';\r\n *\r\n * const MyAppBar = () => (\r\n *     <AppBar toolbar={<ToggleThemeButton />} />\r\n * );\r\n *\r\n * const MyLayout = props => <Layout {...props} appBar={MyAppBar} />;\r\n */\r\nexport const ToggleThemeButton = (props: ToggleThemeButtonProps) => {\r\n    const translate = useTranslate();\r\n    const { darkTheme, defaultTheme } = useThemesContext(props);\r\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)', {\r\n        noSsr: true,\r\n    });\r\n    const [theme, setTheme] = useTheme(\r\n        defaultTheme || (prefersDarkMode && darkTheme ? 'dark' : 'light')\r\n    );\r\n\r\n    // FIXME: remove in v5\r\n    if (props.darkTheme) {\r\n        return (\r\n            <ToggleThemeLegacyButton\r\n                darkTheme={props.darkTheme}\r\n                lightTheme={props.lightTheme}\r\n            />\r\n        );\r\n    }\r\n\r\n    const handleTogglePaletteType = (): void => {\r\n        setTheme(theme === 'dark' ? 'light' : 'dark');\r\n    };\r\n    const toggleThemeTitle = translate('ra.action.toggle_theme', {\r\n        _: 'Toggle Theme',\r\n    });\r\n\r\n    return (\r\n        <Tooltip title={toggleThemeTitle} enterDelay={300}>\r\n            <IconButton\r\n                color=\"inherit\"\r\n                onClick={handleTogglePaletteType}\r\n                aria-label={toggleThemeTitle}\r\n            >\r\n                {theme === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nexport interface ToggleThemeButtonProps {\r\n    /**\r\n     * @deprecated Set the lightTheme in the `<Admin>` component instead.\r\n     */\r\n    lightTheme?: RaThemeOptions;\r\n    /**\r\n     * @deprecated Set the darkTheme in the `<Admin>` component instead.\r\n     */\r\n    darkTheme?: RaThemeOptions;\r\n}\r\n", "import React from 'react';\r\nimport { Tooltip, IconButton } from '@mui/material';\r\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\r\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\r\nimport { useTranslate } from 'ra-core';\r\nimport { useTheme } from '../layout';\r\nimport { RaThemeOptions } from '..';\r\n\r\n/**\r\n * Button toggling the theme (light or dark).\r\n *\r\n * @deprecated Set the lightTheme and darkTheme props in the <Admin> component.\r\n *\r\n * @example\r\n * import { AppBar, TitlePortal, ToggleThemeLegacyButton } from 'react-admin';\r\n *\r\n * const MyAppBar = () => (\r\n *     <AppBar>\r\n *         <TitlePortal />\r\n *         <ToggleThemeButton lightTheme={lightTheme} darkTheme={darkTheme} />\r\n *     </AppBar>\r\n * );\r\n *\r\n * const MyLayout = props => <Layout {...props} appBar={MyAppBar} />;\r\n */\r\nexport const ToggleThemeLegacyButton = (\r\n    props: ToggleThemeLegacyButtonProps\r\n) => {\r\n    const translate = useTranslate();\r\n    const { darkTheme, lightTheme } = props;\r\n    const [theme, setTheme] = useTheme();\r\n    // @ts-ignore\r\n    const isDark = theme === 'dark' || theme?.palette.mode === 'dark';\r\n\r\n    const handleTogglePaletteType = (): void => {\r\n        setTheme(isDark ? lightTheme : darkTheme);\r\n    };\r\n    const toggleThemeTitle = translate('ra.action.toggle_theme', {\r\n        _: 'Toggle Theme',\r\n    });\r\n\r\n    return (\r\n        <Tooltip title={toggleThemeTitle} enterDelay={300}>\r\n            <IconButton\r\n                color=\"inherit\"\r\n                onClick={handleTogglePaletteType}\r\n                aria-label={toggleThemeTitle}\r\n            >\r\n                {isDark ? <Brightness7Icon /> : <Brightness4Icon />}\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nexport interface ToggleThemeLegacyButtonProps {\r\n    darkTheme: RaThemeOptions;\r\n    lightTheme?: RaThemeOptions;\r\n}\r\n", "import * as React from 'react';\r\nimport { Alert, AlertProps, Button, ButtonProps } from '@mui/material';\r\nimport { useTranslate } from 'ra-core';\r\n\r\nexport const ApplicationUpdatedNotification = React.forwardRef<\r\n    HTMLDivElement,\r\n    ApplicationUpdatedNotificationProps\r\n>((props, ref) => {\r\n    const {\r\n        ButtonProps,\r\n        updateText = 'ra.action.update_application',\r\n        notificationText = 'ra.notification.application_update_available',\r\n        ...alertProps\r\n    } = props;\r\n    const translate = useTranslate();\r\n\r\n    const handleButtonClick = () => {\r\n        window.location.reload();\r\n    };\r\n    return (\r\n        <Alert\r\n            ref={ref}\r\n            severity=\"info\"\r\n            action={\r\n                <Button\r\n                    color=\"inherit\"\r\n                    size=\"small\"\r\n                    onClick={handleButtonClick}\r\n                    {...ButtonProps}\r\n                >\r\n                    {translate(updateText, { _: updateText })}\r\n                </Button>\r\n            }\r\n            {...alertProps}\r\n        >\r\n            {translate(notificationText, { _: notificationText })}\r\n        </Alert>\r\n    );\r\n});\r\n\r\nexport interface ApplicationUpdatedNotificationProps extends AlertProps {\r\n    ButtonProps?: ButtonProps;\r\n    notificationText?: string;\r\n    updateText?: string;\r\n}\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CardContent from '@mui/material/CardContent';\r\n\r\n/**\r\n * Overrides Material UI CardContent to allow inner content\r\n *\r\n * When using several CardContent inside the same Card, the top and bottom\r\n * padding double the spacing between each CardContent, leading to too much\r\n * wasted space. Use this component as a CardContent alternative.\r\n */\r\nexport const CardContentInner = (props: CardContentInnerProps): JSX.Element => {\r\n    const { className, children } = props;\r\n\r\n    return <Root className={className}>{children}</Root>;\r\n};\r\n\r\nCardContentInner.propTypes = {\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport interface CardContentInnerProps {\r\n    className?: string;\r\n    children: ReactNode;\r\n}\r\n\r\nconst PREFIX = 'RaCardContentInner';\r\n\r\nexport const CardContentInnerClasses = {\r\n    root: `${PREFIX}-root`,\r\n};\r\n\r\nconst Root = styled(CardContent, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    '&:first-of-type': {\r\n        paddingTop: 16,\r\n    },\r\n    '&:last-child': {\r\n        paddingBottom: 16,\r\n        [theme.breakpoints.only('xs')]: {\r\n            paddingBottom: 70,\r\n        },\r\n    },\r\n}));\r\n", "import * as React from 'react';\r\nimport { ReactElement } from 'react';\r\nimport {\r\n    useNotify,\r\n    UseCheckForApplicationUpdateOptions,\r\n    useCheckForApplicationUpdate,\r\n} from 'ra-core';\r\nimport { ApplicationUpdatedNotification } from './ApplicationUpdatedNotification';\r\n\r\n/**\r\n * Display a notification asking users to reload the page when the application code has changed.\r\n *\r\n * @param {CheckForApplicationUpdateProps} props\r\n * @param {boolean} options.disabled Optional. Whether the check should be disabled. Defaults to false.\r\n * @param {string|ReactElement} props.notification The notification to display to the user. Displayed only if `updateMode` is manual. Defaults to `<ApplicationUpdatedNotification />`.\r\n * @param {string} options.url Optional. The URL to download to check for code update. Defaults to the current URL.\r\n * @param {number} options.interval Optional. The interval in milliseconds between two checks. Defaults to 3600000 (1 hour).\r\n *\r\n * @example <caption>Basic usage</caption>\r\n * import { Admin, Resource, Layout, CheckForApplicationUpdate, ListGuesser } from 'react-admin';\r\n *\r\n * const MyLayout = ({ children, ...props }) => (\r\n *   <Layout {...props}>\r\n *     {children}\r\n *     <CheckForApplicationUpdate />\r\n *   </Layout>\r\n * );\r\n *\r\n * const App = () => (\r\n *   <Admin layout={MyLayout}>\r\n *      <Resource name=\"posts\" list={ListGuesser} />\r\n *   </Admin>\r\n * );\r\n *\r\n * @example <caption>Custom notification</caption>\r\n * import { forwardRef } from 'react';\r\n * import { Admin, Resource, Layout, CheckForApplicationUpdate, ListGuesser } from 'react-admin';\r\n *\r\n * const CustomAppUpdatedNotification = forwardRef((props, ref) => (\r\n *   <Alert\r\n *     ref={ref}\r\n *     severity=\"info\"\r\n *     action={\r\n *       <Button\r\n *         color=\"inherit\"\r\n *         size=\"small\"\r\n *         onClick={() => window.location.reload()}\r\n *       >\r\n *         Update\r\n *       </Button>\r\n *     }\r\n *   >\r\n *     A new version of the application is available. Please update.\r\n *   </Alert>\r\n * ));\r\n *\r\n * const MyLayout = ({ children, ...props }) => (\r\n *   <Layout {...props}>\r\n *     {children}\r\n *     <CheckForApplicationUpdate notification={<CustomAppUpdatedNotification />} />\r\n *   </Layout>\r\n * );\r\n *\r\n * const App = () => (\r\n *   <Admin layout={MyLayout}>\r\n *      <Resource name=\"posts\" list={ListGuesser} />\r\n *   </Admin>\r\n * );\r\n */\r\nexport const CheckForApplicationUpdate = (\r\n    props: CheckForApplicationUpdateProps\r\n) => {\r\n    const { notification = DEFAULT_NOTIFICATION, ...rest } = props;\r\n    const notify = useNotify();\r\n\r\n    const onNewVersionAvailable = () => {\r\n        notify(notification, {\r\n            type: 'info',\r\n            autoHideDuration: null,\r\n        });\r\n    };\r\n\r\n    useCheckForApplicationUpdate({ onNewVersionAvailable, ...rest });\r\n    return null;\r\n};\r\n\r\nexport interface CheckForApplicationUpdateProps\r\n    extends Omit<UseCheckForApplicationUpdateOptions, 'onNewVersionAvailable'> {\r\n    notification?: ReactElement;\r\n}\r\n\r\nconst DEFAULT_NOTIFICATION = <ApplicationUpdatedNotification />;\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useCallback, MouseEventHandler } from 'react';\r\nimport PropTypes, { ReactComponentLike } from 'prop-types';\r\nimport Dialog, { DialogProps } from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Button from '@mui/material/Button';\r\nimport { alpha } from '@mui/material/styles';\r\nimport ActionCheck from '@mui/icons-material/CheckCircle';\r\nimport AlertError from '@mui/icons-material/ErrorOutline';\r\nimport clsx from 'clsx';\r\nimport { useTranslate } from 'ra-core';\r\n\r\n/**\r\n * Confirmation dialog\r\n *\r\n * @example\r\n * <Confirm\r\n *     isOpen={true}\r\n *     title=\"Delete Item\"\r\n *     content=\"Are you sure you want to delete this item?\"\r\n *     confirm=\"Yes\"\r\n *     confirmColor=\"primary\"\r\n *     ConfirmIcon=ActionCheck\r\n *     CancelIcon=AlertError\r\n *     cancel=\"Cancel\"\r\n *     onConfirm={() => { // do something }}\r\n *     onClose={() => { // do something }}\r\n * />\r\n */\r\nexport const Confirm = (props: ConfirmProps) => {\r\n    const {\r\n        className,\r\n        isOpen = false,\r\n        loading,\r\n        title,\r\n        content,\r\n        cancel = 'ra.action.cancel',\r\n        confirm = 'ra.action.confirm',\r\n        confirmColor = 'primary',\r\n        ConfirmIcon = ActionCheck,\r\n        CancelIcon = AlertError,\r\n        onClose,\r\n        onConfirm,\r\n        translateOptions = {},\r\n        ...rest\r\n    } = props;\r\n\r\n    const translate = useTranslate();\r\n\r\n    const handleConfirm = useCallback(\r\n        e => {\r\n            e.stopPropagation();\r\n            onConfirm(e);\r\n        },\r\n        [onConfirm]\r\n    );\r\n\r\n    const handleClick = useCallback(e => {\r\n        e.stopPropagation();\r\n    }, []);\r\n\r\n    return (\r\n        <StyledDialog\r\n            className={className}\r\n            open={isOpen}\r\n            onClose={onClose}\r\n            onClick={handleClick}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            {...rest}\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {typeof title === 'string'\r\n                    ? translate(title, { _: title, ...translateOptions })\r\n                    : title}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                {typeof content === 'string' ? (\r\n                    <DialogContentText>\r\n                        {translate(content, {\r\n                            _: content,\r\n                            ...translateOptions,\r\n                        })}\r\n                    </DialogContentText>\r\n                ) : (\r\n                    content\r\n                )}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={loading}\r\n                    onClick={onClose}\r\n                    startIcon={<CancelIcon />}\r\n                >\r\n                    {translate(cancel, { _: cancel })}\r\n                </Button>\r\n                <Button\r\n                    disabled={loading}\r\n                    onClick={handleConfirm}\r\n                    className={clsx('ra-confirm', {\r\n                        [ConfirmClasses.confirmWarning]:\r\n                            confirmColor === 'warning',\r\n                        [ConfirmClasses.confirmPrimary]:\r\n                            confirmColor === 'primary',\r\n                    })}\r\n                    autoFocus\r\n                    startIcon={<ConfirmIcon />}\r\n                >\r\n                    {translate(confirm, { _: confirm })}\r\n                </Button>\r\n            </DialogActions>\r\n        </StyledDialog>\r\n    );\r\n};\r\n\r\nexport interface ConfirmProps\r\n    extends Omit<DialogProps, 'open' | 'onClose' | 'title'> {\r\n    cancel?: string;\r\n    className?: string;\r\n    confirm?: string;\r\n    confirmColor?: string;\r\n    ConfirmIcon?: ReactComponentLike;\r\n    CancelIcon?: ReactComponentLike;\r\n    content: React.ReactNode;\r\n    isOpen?: boolean;\r\n    loading?: boolean;\r\n    onClose: MouseEventHandler;\r\n    onConfirm: MouseEventHandler;\r\n    title: React.ReactNode;\r\n    translateOptions?: object;\r\n}\r\n\r\nConfirm.propTypes = {\r\n    cancel: PropTypes.string,\r\n    className: PropTypes.string,\r\n    confirm: PropTypes.string,\r\n    confirmColor: PropTypes.string,\r\n    ConfirmIcon: PropTypes.elementType,\r\n    CancelIcon: PropTypes.elementType,\r\n    content: PropTypes.node.isRequired,\r\n    isOpen: PropTypes.bool,\r\n    loading: PropTypes.bool,\r\n    onClose: PropTypes.func.isRequired,\r\n    onConfirm: PropTypes.func.isRequired,\r\n    title: PropTypes.node.isRequired,\r\n    sx: PropTypes.any,\r\n};\r\n\r\nconst PREFIX = 'RaConfirm';\r\n\r\nexport const ConfirmClasses = {\r\n    confirmPrimary: `${PREFIX}-confirmPrimary`,\r\n    confirmWarning: `${PREFIX}-confirmWarning`,\r\n};\r\n\r\nconst StyledDialog = styled(Dialog, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    [`& .${ConfirmClasses.confirmPrimary}`]: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n\r\n    [`& .${ConfirmClasses.confirmWarning}`]: {\r\n        color: theme.palette.error.main,\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.error.main, 0.12),\r\n            // Reset on mouse devices\r\n            '@media (hover: none)': {\r\n                backgroundColor: 'transparent',\r\n            },\r\n        },\r\n    },\r\n}));\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport { useBasename } from 'ra-core';\r\n\r\nimport { MenuItemLink, MenuItemLinkProps } from './MenuItemLink';\r\nimport { To } from 'history';\r\n\r\nexport const DashboardMenuItem = (props: DashboardMenuItemProps) => {\r\n    const basename = useBasename();\r\n    const {\r\n        leftIcon = <DashboardIcon />,\r\n        to = `${basename}/`,\r\n        primaryText = 'ra.page.dashboard',\r\n        ...rest\r\n    } = props;\r\n\r\n    return (\r\n        <MenuItemLink\r\n            leftIcon={leftIcon}\r\n            to={to}\r\n            primaryText={primaryText}\r\n            {...rest}\r\n        />\r\n    );\r\n};\r\n\r\nexport interface DashboardMenuItemProps extends Omit<MenuItemLinkProps, 'to'> {\r\n    to?: To;\r\n    /**\r\n     * @deprecated\r\n     */\r\n    sidebarIsOpen?: boolean;\r\n}\r\n\r\nDashboardMenuItem.propTypes = {\r\n    leftIcon: PropTypes.element,\r\n    locale: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    dense: PropTypes.bool,\r\n    sidebarIsOpen: PropTypes.bool,\r\n};\r\n", "import React, { forwardRef, useCallback, ReactElement, ReactNode } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { Link, LinkProps, useMatch } from 'react-router-dom';\r\nimport {\r\n    MenuItem,\r\n    MenuItemProps,\r\n    ListItemIcon,\r\n    Tooltip,\r\n    TooltipProps,\r\n    useMediaQuery,\r\n    Theme,\r\n} from '@mui/material';\r\n\r\nimport { useSidebarState } from './useSidebarState';\r\nimport { useTranslate, useBasename } from 'ra-core';\r\n\r\n/**\r\n * Displays a menu item with a label and an icon - or only the icon with a tooltip when the sidebar is minimized.\r\n * It also handles the automatic closing of the menu on tap on mobile.\r\n *\r\n * @typedef {Object} Props the props you can use\r\n * @prop {string|Location} to The menu item's target. It is passed to a React Router NavLink component.\r\n * @prop {string|ReactNode} primaryText The menu content, displayed when the menu isn't minimized. |\r\n * @prop {ReactNode} leftIcon The menu icon\r\n *\r\n * Additional props are passed down to the underling Material UI <MenuItem> component\r\n * @see https://material-ui.com/api/menu-item/#menuitem-api\r\n *\r\n * @example // You can create a custom menu component using the <DashboardMenuItem> and <MenuItemLink> components:\r\n *\r\n * // in src/Menu.js\r\n * import * as React from 'react';\r\n * import { DashboardMenuItem, MenuItemLink } from 'react-admin';\r\n * import BookIcon from '@mui/icons-material/Book';\r\n * import ChatBubbleIcon from '@mui/icons-material/ChatBubble';\r\n * import PeopleIcon from '@mui/icons-material/People';\r\n * import LabelIcon from '@mui/icons-material/Label';\r\n *\r\n * export const Menu = () => (\r\n *     <div>\r\n *         <DashboardMenuItem />\r\n *         <MenuItemLink to=\"/posts\" primaryText=\"Posts\" leftIcon={<BookIcon />}/>\r\n *         <MenuItemLink to=\"/comments\" primaryText=\"Comments\" leftIcon={<ChatBubbleIcon />}/>\r\n *         <MenuItemLink to=\"/users\" primaryText=\"Users\" leftIcon={<PeopleIcon />}/>\r\n *         <MenuItemLink to=\"/custom-route\" primaryText=\"Miscellaneous\" leftIcon={<LabelIcon />}/>\r\n *     </div>\r\n * );\r\n *\r\n * // to use this custom menu component, pass it to a custom Layout:\r\n * // in src/Layout.js\r\n * import { Layout } from 'react-admin';\r\n * import { Menu } from './Menu';\r\n *\r\n * export const Layout = (props) => <Layout {...props} menu={Menu} />;\r\n *\r\n * // then, use this layout in the <Admin layout> prop:\r\n * // in src/App.js\r\n * import { Layout }  from './Layout';\r\n *\r\n * const App = () => (\r\n *     <Admin layout={Layout} dataProvider={simpleRestProvider('http://path.to.my.api')}>\r\n *         // ...\r\n *     </Admin>\r\n * );\r\n */\r\nexport const MenuItemLink = forwardRef<any, MenuItemLinkProps>((props, ref) => {\r\n    const {\r\n        className,\r\n        primaryText,\r\n        leftIcon,\r\n        onClick,\r\n        sidebarIsOpen,\r\n        tooltipProps,\r\n        ...rest\r\n    } = props;\r\n\r\n    const isSmall = useMediaQuery<Theme>(theme => theme.breakpoints.down('md'));\r\n    const translate = useTranslate();\r\n    const basename = useBasename();\r\n\r\n    const [open, setOpen] = useSidebarState();\r\n    const handleMenuTap = useCallback(\r\n        e => {\r\n            if (isSmall) {\r\n                setOpen(false);\r\n            }\r\n            onClick && onClick(e);\r\n        },\r\n        [setOpen, isSmall, onClick]\r\n    );\r\n\r\n    const to =\r\n        (typeof props.to === 'string' ? props.to : props.to.pathname) || '';\r\n    const match = useMatch({ path: to, end: to === `${basename}/` });\r\n\r\n    const renderMenuItem = () => {\r\n        return (\r\n            <StyledMenuItem\r\n                className={clsx(className, {\r\n                    [MenuItemLinkClasses.active]: !!match,\r\n                })}\r\n                // @ts-ignore\r\n                component={LinkRef}\r\n                ref={ref}\r\n                tabIndex={0}\r\n                {...rest}\r\n                onClick={handleMenuTap}\r\n            >\r\n                {leftIcon && (\r\n                    <ListItemIcon className={MenuItemLinkClasses.icon}>\r\n                        {leftIcon}\r\n                    </ListItemIcon>\r\n                )}\r\n                {typeof primaryText === 'string'\r\n                    ? translate(primaryText, { _: primaryText })\r\n                    : primaryText}\r\n            </StyledMenuItem>\r\n        );\r\n    };\r\n\r\n    return open ? (\r\n        renderMenuItem()\r\n    ) : (\r\n        <Tooltip\r\n            title={\r\n                typeof primaryText === 'string'\r\n                    ? translate(primaryText, { _: primaryText })\r\n                    : primaryText\r\n            }\r\n            placement=\"right\"\r\n            {...tooltipProps}\r\n        >\r\n            {renderMenuItem()}\r\n        </Tooltip>\r\n    );\r\n});\r\n\r\nexport type MenuItemLinkProps = LinkProps &\r\n    MenuItemProps<'li'> & {\r\n        leftIcon?: ReactElement;\r\n        primaryText?: ReactNode;\r\n        /**\r\n         * @deprecated\r\n         */\r\n        sidebarIsOpen?: boolean;\r\n        tooltipProps?: TooltipProps;\r\n    };\r\n\r\nMenuItemLink.propTypes = {\r\n    className: PropTypes.string,\r\n    leftIcon: PropTypes.element,\r\n    onClick: PropTypes.func,\r\n    primaryText: PropTypes.node,\r\n    to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n    sidebarIsOpen: PropTypes.bool,\r\n};\r\n\r\nconst PREFIX = 'RaMenuItemLink';\r\n\r\nexport const MenuItemLinkClasses = {\r\n    active: `${PREFIX}-active`,\r\n    icon: `${PREFIX}-icon`,\r\n};\r\n\r\nconst StyledMenuItem = styled(MenuItem, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    color: theme.palette.text.secondary,\r\n\r\n    [`&.${MenuItemLinkClasses.active}`]: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n\r\n    [`& .${MenuItemLinkClasses.icon}`]: { minWidth: theme.spacing(5) },\r\n}));\r\n\r\nconst LinkRef = forwardRef<HTMLAnchorElement, LinkProps>((props, ref) => (\r\n    <Link ref={ref} {...props} />\r\n));\r\n", "import * as React from 'react';\r\nimport mediaQuery from 'css-mediaquery';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\n/**\r\n * Test utility to simulate a device form factor for server-side mediaQueries\r\n *\r\n * Do not use inside a browser.\r\n *\r\n * @example\r\n *\r\n * <DeviceTestWrapper width=\"sm\">\r\n *     <MyResponsiveComponent />\r\n * <DeviceTestWrapper>\r\n */\r\nexport const DeviceTestWrapper = ({\r\n    width = 'md',\r\n    children,\r\n}: DeviceTestWrapperProps): JSX.Element => {\r\n    const theme = createTheme();\r\n    // Use https://github.com/ericf/css-mediaquery as polyfill.\r\n    const ssrMatchMedia = query => ({\r\n        matches: mediaQuery.match(query, {\r\n            // The estimated CSS width of the browser.\r\n            // For the sake of this demo, we are using a fixed value.\r\n            // In production, you can look into client-hint https://caniuse.com/#search=client%20hint\r\n            // or user-agent resolution.\r\n            width: theme.breakpoints.values[width],\r\n        }),\r\n    });\r\n\r\n    return (\r\n        <ThemeProvider\r\n            theme={{\r\n                ...theme,\r\n                components: {\r\n                    MuiUseMediaQuery: {\r\n                        defaultProps: {\r\n                            ssrMatchMedia,\r\n                            matchMedia: ssrMatchMedia,\r\n                        },\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            {children}\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport interface DeviceTestWrapperProps {\r\n    width: 'md' | 'xs' | 'sm' | 'lg' | 'xl';\r\n    children: JSX.Element;\r\n}\r\n", "import * as React from 'react';\r\nimport { ComponentType, ErrorInfo, Fragment, HtmlHTMLAttributes } from 'react';\r\nimport { FallbackProps } from 'react-error-boundary';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Button,\r\n    Accordion,\r\n    AccordionDetails,\r\n    AccordionSummary,\r\n    Typography,\r\n} from '@mui/material';\r\nimport ErrorIcon from '@mui/icons-material/Report';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport History from '@mui/icons-material/History';\r\nimport { TitleComponent, useTranslate } from 'ra-core';\r\nimport { Title, TitlePropType } from './Title';\r\nimport { useResetErrorBoundaryOnLocationChange } from './useResetErrorBoundaryOnLocationChange';\r\n\r\nexport const Error = (\r\n    props: InternalErrorProps & {\r\n        errorComponent?: ComponentType<ErrorProps>;\r\n    }\r\n) => {\r\n    const {\r\n        error,\r\n        errorComponent: ErrorComponent,\r\n        errorInfo,\r\n        resetErrorBoundary,\r\n        className,\r\n        title,\r\n        ...rest\r\n    } = props;\r\n\r\n    const translate = useTranslate();\r\n    useResetErrorBoundaryOnLocationChange(resetErrorBoundary);\r\n\r\n    if (ErrorComponent) {\r\n        return (\r\n            <ErrorComponent error={error} errorInfo={errorInfo} title={title} />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {title && <Title title={title} />}\r\n            <Root className={className} {...rest}>\r\n                <h1 className={ErrorClasses.title} role=\"alert\">\r\n                    <ErrorIcon className={ErrorClasses.icon} />\r\n                    {translate('ra.page.error')}\r\n                </h1>\r\n                <div>{translate('ra.message.error')}</div>\r\n                {process.env.NODE_ENV !== 'production' && (\r\n                    <>\r\n                        <Accordion className={ErrorClasses.panel}>\r\n                            <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                className={ErrorClasses.panelSumary}\r\n                            >\r\n                                {translate(error.message, {\r\n                                    _: error.message,\r\n                                })}\r\n                            </AccordionSummary>\r\n                            <AccordionDetails\r\n                                className={ErrorClasses.panelDetails}\r\n                            >\r\n                                {/*\r\n                                    error message is repeated here to allow users to copy it. AccordionSummary doesn't support text selection.\r\n                                */}\r\n                                <p>\r\n                                    {translate(error.message, {\r\n                                        _: error.message,\r\n                                    })}\r\n                                </p>\r\n                                <p>{errorInfo?.componentStack}</p>\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n\r\n                        <div className={ErrorClasses.advice}>\r\n                            <Typography align=\"center\">\r\n                                Need help with this error? Try the following:\r\n                            </Typography>\r\n                            <Typography component=\"div\">\r\n                                <ul>\r\n                                    <li>\r\n                                        Check the{' '}\r\n                                        <a href=\"https://marmelab.com/react-admin/Readme.html\">\r\n                                            react-admin documentation\r\n                                        </a>\r\n                                    </li>\r\n                                    <li>\r\n                                        Search on{' '}\r\n                                        <a href=\"https://stackoverflow.com/questions/tagged/react-admin\">\r\n                                            StackOverflow\r\n                                        </a>{' '}\r\n                                        for community answers\r\n                                    </li>\r\n                                    <li>\r\n                                        Get help from the core team via{' '}\r\n                                        <a href=\"https://marmelab.com/ra-enterprise/#fromsww\">\r\n                                            react-admin Enterprise Edition\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                            </Typography>\r\n                        </div>\r\n                    </>\r\n                )}\r\n                <div className={ErrorClasses.toolbar}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<History />}\r\n                        onClick={goBack}\r\n                    >\r\n                        {translate('ra.action.back')}\r\n                    </Button>\r\n                </div>\r\n            </Root>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nError.propTypes = {\r\n    className: PropTypes.string,\r\n    error: PropTypes.object.isRequired,\r\n    errorInfo: PropTypes.object,\r\n    title: TitlePropType,\r\n};\r\n\r\ninterface InternalErrorProps\r\n    extends Omit<HtmlHTMLAttributes<HTMLDivElement>, 'title'>,\r\n        FallbackProps,\r\n        ErrorProps {\r\n    className?: string;\r\n}\r\n\r\nexport interface ErrorProps extends Pick<FallbackProps, 'error'> {\r\n    errorInfo?: ErrorInfo;\r\n    title?: TitleComponent;\r\n}\r\n\r\nconst PREFIX = 'RaError';\r\n\r\nexport const ErrorClasses = {\r\n    container: `${PREFIX}-container`,\r\n    title: `${PREFIX}-title`,\r\n    icon: `${PREFIX}-icon`,\r\n    panel: `${PREFIX}-panel`,\r\n    panelSumary: `${PREFIX}-panelSumary`,\r\n    panelDetails: `${PREFIX}-panelDetails`,\r\n    toolbar: `${PREFIX}-toolbar`,\r\n    advice: `${PREFIX}-advice`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n        padding: '1em',\r\n    },\r\n    fontFamily: 'Roboto, sans-serif',\r\n    opacity: 0.5,\r\n\r\n    [`& .${ErrorClasses.title}`]: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    [`& .${ErrorClasses.icon}`]: {\r\n        width: '2em',\r\n        height: '2em',\r\n        marginRight: '0.5em',\r\n    },\r\n\r\n    [`& .${ErrorClasses.panel}`]: {\r\n        marginTop: '1em',\r\n        maxWidth: '60em',\r\n    },\r\n\r\n    [`& .${ErrorClasses.panelSumary}`]: {\r\n        userSelect: 'all',\r\n    },\r\n\r\n    [`& .${ErrorClasses.panelDetails}`]: {\r\n        whiteSpace: 'pre-wrap',\r\n    },\r\n\r\n    [`& .${ErrorClasses.toolbar}`]: {\r\n        marginTop: '2em',\r\n    },\r\n\r\n    [`& .${ErrorClasses.advice}`]: {\r\n        marginTop: '2em',\r\n    },\r\n}));\r\n\r\nfunction goBack() {\r\n    window.history.go(-1);\r\n}\r\n", "import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { ReactElement } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { RaRecord, warning } from 'ra-core';\r\n\r\nimport { PageTitleConfigurable } from './PageTitleConfigurable';\r\n\r\nexport const Title = (props: TitleProps) => {\r\n    const { defaultTitle, title, preferenceKey, ...rest } = props;\r\n    const [container, setContainer] = useState(() =>\r\n        typeof document !== 'undefined'\r\n            ? document.getElementById('react-admin-title')\r\n            : null\r\n    );\r\n\r\n    // on first mount, we don't have the container yet, so we wait for it\r\n    useEffect(() => {\r\n        setContainer(container => {\r\n            const isInTheDom =\r\n                typeof document !== 'undefined' &&\r\n                document.body.contains(container);\r\n            if (container && isInTheDom) return container;\r\n            return typeof document !== 'undefined'\r\n                ? document.getElementById('react-admin-title')\r\n                : null;\r\n        });\r\n    }, []);\r\n\r\n    if (!container) return null;\r\n\r\n    warning(!defaultTitle && !title, 'Missing title prop in <Title> element');\r\n\r\n    return createPortal(\r\n        <PageTitleConfigurable\r\n            title={title}\r\n            defaultTitle={defaultTitle}\r\n            preferenceKey={preferenceKey}\r\n            {...rest}\r\n        />,\r\n        container\r\n    );\r\n};\r\n\r\nexport const TitlePropType = PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element,\r\n]);\r\n\r\nTitle.propTypes = {\r\n    defaultTitle: PropTypes.string,\r\n    className: PropTypes.string,\r\n    record: PropTypes.any,\r\n    title: TitlePropType,\r\n};\r\n\r\nexport interface TitleProps {\r\n    className?: string;\r\n    defaultTitle?: string;\r\n    record?: Partial<RaRecord>;\r\n    title?: string | ReactElement;\r\n    preferenceKey?: string;\r\n}\r\n", "import * as React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { usePreferenceInput } from 'ra-core';\r\nimport { TextField } from '@mui/material';\r\n\r\nimport { Configurable } from '../preferences';\r\nimport { PageTitle } from './PageTitle';\r\n\r\nexport const PageTitleEditor = () => {\r\n    const field = usePreferenceInput();\r\n    return (\r\n        <form>\r\n            <TextField\r\n                label=\"title\"\r\n                variant=\"filled\"\r\n                size=\"small\"\r\n                fullWidth\r\n                sx={{ mb: 1 }}\r\n                {...field}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport const PageTitleConfigurable = ({ preferenceKey, ...props }) => {\r\n    const { pathname } = useLocation();\r\n    return (\r\n        <Configurable\r\n            editor={<PageTitleEditor />}\r\n            preferenceKey={preferenceKey || `${pathname}.title`}\r\n            sx={{\r\n                '&.RaConfigurable-editMode': {\r\n                    margin: '2px',\r\n                },\r\n            }}\r\n        >\r\n            <PageTitle {...props} />\r\n        </Configurable>\r\n    );\r\n};\r\n", "import * as React from 'react';\r\nimport { useRef, useEffect, useState, cloneElement, ReactElement } from 'react';\r\nimport {\r\n    usePreferencesEditor,\r\n    PreferenceKeyContextProvider,\r\n    useTranslate,\r\n} from 'ra-core';\r\nimport { alpha, Popover } from '@mui/material';\r\nimport { styled, SxProps } from '@mui/material/styles';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * Wrap any component with this component to make it configurable\r\n *\r\n * When the edit mode is enabled, users will see a button to edit the component;\r\n * when clicked, the inspector will show the editor element.\r\n *\r\n * Creates a context for the preference key, so that both the child component\r\n * and the editor can access it using usePreferenceKey();\r\n *\r\n * @example\r\n * const ConfigurableTextBlock = ({ preferenceKey = \"TextBlock\", ...props }) => (\r\n *     <Configurable editor={<TextBlockInspector />} preferenceKey={preferenceKey}>\r\n *         <TextBlock {...props} />\r\n *     </Configurable>\r\n * );\r\n */\r\nexport const Configurable = (props: ConfigurableProps) => {\r\n    const {\r\n        children,\r\n        editor,\r\n        preferenceKey,\r\n        openButtonLabel = 'ra.configurable.customize',\r\n        sx,\r\n    } = props;\r\n\r\n    const prefixedPreferenceKey = `preferences.${preferenceKey}`;\r\n    const preferencesEditorContext = usePreferencesEditor();\r\n    const hasPreferencesEditorContext = !!preferencesEditorContext;\r\n\r\n    const translate = useTranslate();\r\n\r\n    const {\r\n        isEnabled,\r\n        setEditor,\r\n        preferenceKey: currentPreferenceKey,\r\n        setPreferenceKey,\r\n    } = preferencesEditorContext || {};\r\n\r\n    const isEditorOpen = prefixedPreferenceKey === currentPreferenceKey;\r\n    const editorOpenRef = useRef(isEditorOpen);\r\n    const wrapperRef = useRef(null);\r\n    const [isCustomizeButtonVisible, setIsCustomizeButtonVisible] = useState(\r\n        false\r\n    );\r\n\r\n    useEffect(() => {\r\n        editorOpenRef.current = isEditorOpen;\r\n    }, [isEditorOpen]);\r\n\r\n    // on unmount, if selected, remove the editor\r\n    useEffect(() => {\r\n        return () => {\r\n            if (!editorOpenRef.current) return;\r\n            setPreferenceKey && setPreferenceKey(null);\r\n            setEditor && setEditor(null);\r\n        };\r\n    }, [setEditor, setPreferenceKey]);\r\n\r\n    if (!hasPreferencesEditorContext) {\r\n        return children;\r\n    }\r\n\r\n    const handleOpenEditor = () => {\r\n        // include the editorKey as key to force destroy and mount\r\n        // when switching between two identical editors with different editor keys\r\n        // otherwise the editor will see an update and its useStore will return one tick later\r\n        // which would forbid the usage of uncontrolled inputs in the editor\r\n        setEditor(\r\n            cloneElement(editor, {\r\n                preferenceKey: prefixedPreferenceKey,\r\n                key: prefixedPreferenceKey,\r\n            })\r\n        );\r\n        // as we modify the editor, isEditorOpen cannot compare the editor element\r\n        // we'll compare the editor key instead\r\n        setPreferenceKey(prefixedPreferenceKey);\r\n    };\r\n\r\n    const handleShowButton = () => {\r\n        setIsCustomizeButtonVisible(true);\r\n    };\r\n\r\n    const handleHideButton = () => {\r\n        setIsCustomizeButtonVisible(false);\r\n    };\r\n\r\n    return (\r\n        <PreferenceKeyContextProvider value={prefixedPreferenceKey}>\r\n            <Root\r\n                className={clsx(\r\n                    ConfigurableClasses.root,\r\n                    isEnabled && ConfigurableClasses.editMode,\r\n                    isEditorOpen && ConfigurableClasses.editorActive\r\n                )}\r\n                sx={sx}\r\n                ref={wrapperRef}\r\n                onMouseEnter={isEnabled ? handleShowButton : undefined}\r\n                onMouseLeave={isEnabled ? handleHideButton : undefined}\r\n            >\r\n                {children}\r\n            </Root>\r\n            <Popover\r\n                open={isEnabled && (isCustomizeButtonVisible || isEditorOpen)}\r\n                sx={{\r\n                    pointerEvents: 'none',\r\n                    '& .MuiPaper-root': {\r\n                        pointerEvents: 'auto',\r\n                        borderRadius: 10,\r\n                        padding: '2px',\r\n                        lineHeight: 0,\r\n                        backgroundColor: 'warning.light',\r\n                        color: 'warning.contrastText',\r\n                        '&:hover': {\r\n                            cursor: 'pointer',\r\n                        },\r\n                    },\r\n                }}\r\n                anchorEl={wrapperRef.current}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'center',\r\n                    horizontal: 'center',\r\n                }}\r\n                onClose={handleHideButton}\r\n                PaperProps={{\r\n                    elevation: 1,\r\n                    onMouseEnter: handleShowButton,\r\n                    onMouseLeave: handleHideButton,\r\n                    title: translate(openButtonLabel),\r\n                    onClick: handleOpenEditor,\r\n                }}\r\n                disableAutoFocus\r\n                disableRestoreFocus\r\n                disableEnforceFocus\r\n                disableScrollLock\r\n                marginThreshold={8}\r\n            >\r\n                <SettingsIcon\r\n                    // @ts-ignore\r\n                    fontSize=\"12px\"\r\n                />\r\n            </Popover>\r\n        </PreferenceKeyContextProvider>\r\n    );\r\n};\r\n\r\nexport interface ConfigurableProps {\r\n    children: ReactElement;\r\n    editor: ReactElement;\r\n    preferenceKey: string;\r\n    openButtonLabel?: string;\r\n    sx?: SxProps;\r\n}\r\n\r\nconst PREFIX = 'RaConfigurable';\r\n\r\nexport const ConfigurableClasses = {\r\n    root: `${PREFIX}-root`,\r\n    editMode: `${PREFIX}-editMode`,\r\n    editorActive: `${PREFIX}-editorActive`,\r\n};\r\n\r\nconst Root = styled('span', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    position: 'relative',\r\n    display: 'inline-block',\r\n    [`&.${ConfigurableClasses.editMode}`]: {\r\n        transition: theme.transitions.create('outline'),\r\n        outline: `${alpha(theme.palette.warning.main, 0.3)} solid 2px`,\r\n    },\r\n    [`&.${ConfigurableClasses.editMode}:hover `]: {\r\n        outline: `${alpha(theme.palette.warning.main, 0.5)} solid 2px`,\r\n    },\r\n    [`&.${ConfigurableClasses.editMode}.${ConfigurableClasses.editorActive} , &.${ConfigurableClasses.editMode}.${ConfigurableClasses.editorActive}:hover `]: {\r\n        outline: `${theme.palette.warning.main} solid 2px`,\r\n    },\r\n}));\r\n", "import * as React from 'react';\r\nimport { usePreference, useTranslate } from 'ra-core';\r\nimport { Box, Button } from '@mui/material';\r\n\r\nimport { FieldToggle } from './FieldToggle';\r\n\r\n/**\r\n * UI to select / deselect fields, and store the selection in preferences\r\n */\r\nexport const FieldsSelector = ({\r\n    name = 'columns',\r\n    availableName = 'availableColumns',\r\n}) => {\r\n    const translate = useTranslate();\r\n\r\n    const [availableFields, setAvailableFields] = usePreference<\r\n        SelectableField[]\r\n    >(availableName, []);\r\n    const [omit] = usePreference('omit', []);\r\n\r\n    const [fields, setFields] = usePreference(\r\n        name,\r\n        availableFields\r\n            .filter(field => !omit?.includes(field.source))\r\n            .map(field => field.index)\r\n    );\r\n\r\n    const handleToggle = event => {\r\n        if (event.target.checked) {\r\n            // add the column at the right position\r\n            setFields(\r\n                availableFields\r\n                    .filter(\r\n                        field =>\r\n                            field.index === event.target.name ||\r\n                            fields.includes(field.index)\r\n                    )\r\n                    .map(field => field.index)\r\n            );\r\n        } else {\r\n            setFields(fields.filter(index => index !== event.target.name));\r\n        }\r\n    };\r\n\r\n    const handleMove = (index1, index2) => {\r\n        const index1Pos = availableFields.findIndex(\r\n            // eslint-disable-next-line eqeqeq\r\n            field => field.index == index1\r\n        );\r\n        const index2Pos = availableFields.findIndex(\r\n            // eslint-disable-next-line eqeqeq\r\n            field => field.index == index2\r\n        );\r\n        if (index1Pos === -1 || index2Pos === -1) {\r\n            return;\r\n        }\r\n        let newAvailableFields;\r\n        if (index1Pos > index2Pos) {\r\n            newAvailableFields = [\r\n                ...availableFields.slice(0, index2Pos),\r\n                availableFields[index1Pos],\r\n                ...availableFields.slice(index2Pos, index1Pos),\r\n                ...availableFields.slice(index1Pos + 1),\r\n            ];\r\n        } else {\r\n            newAvailableFields = [\r\n                ...availableFields.slice(0, index1Pos),\r\n                ...availableFields.slice(index1Pos + 1, index2Pos + 1),\r\n                availableFields[index1Pos],\r\n                ...availableFields.slice(index2Pos + 1),\r\n            ];\r\n        }\r\n        setAvailableFields(newAvailableFields);\r\n        setFields(fields =>\r\n            newAvailableFields\r\n                .filter(field => fields.includes(field.index))\r\n                .map(field => field.index)\r\n        );\r\n    };\r\n\r\n    const handleHideAll = () => {\r\n        setFields([]);\r\n    };\r\n    const handleShowAll = () => {\r\n        setFields(availableFields.map(field => field.index));\r\n    };\r\n\r\n    return (\r\n        <Box pt={0.5}>\r\n            {availableFields.map(field => (\r\n                <FieldToggle\r\n                    key={field.index}\r\n                    source={field.source}\r\n                    label={field.label}\r\n                    index={field.index}\r\n                    selected={fields.includes(field.index)}\r\n                    onToggle={handleToggle}\r\n                    onMove={handleMove}\r\n                />\r\n            ))}\r\n            <Box display=\"flex\" justifyContent=\"space-between\" mx={-0.5} mt={1}>\r\n                <Button size=\"small\" onClick={handleHideAll}>\r\n                    {translate('ra.inspector.hideAll', {\r\n                        _: 'Hide All',\r\n                    })}\r\n                </Button>\r\n                <Button size=\"small\" onClick={handleShowAll}>\r\n                    {translate('ra.inspector.showAll', {\r\n                        _: 'Show All',\r\n                    })}\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport interface SelectableField {\r\n    index: string;\r\n    source: string;\r\n    label?: string;\r\n}\r\n", "import * as React from 'react';\r\nimport { FieldTitle, useResourceContext } from 'ra-core';\r\nimport { Switch, Typography } from '@mui/material';\r\nimport DragIcon from '@mui/icons-material/DragIndicator';\r\nimport { styled } from '@mui/material/styles';\r\n\r\n/**\r\n * UI to enable/disable a field\r\n */\r\nexport const FieldToggle = props => {\r\n    const { selected, label, onToggle, onMove, source, index } = props;\r\n    const resource = useResourceContext();\r\n    const dropIndex = React.useRef<number>(null);\r\n    const x = React.useRef<number>(null);\r\n    const y = React.useRef<number>(null);\r\n\r\n    const handleDocumentDragOver = React.useCallback(event => {\r\n        x.current = event.clientX;\r\n        y.current = event.clientY;\r\n    }, []);\r\n\r\n    const handleDragStart = () => {\r\n        document.addEventListener('dragover', handleDocumentDragOver);\r\n    };\r\n\r\n    const handleDrag = event => {\r\n        // imperative DOM manipulations using the native Drag API\r\n        const selectedItem = event.target;\r\n        selectedItem.classList.add('drag-active');\r\n        const list = selectedItem.parentNode;\r\n        let dropItem =\r\n            document.elementFromPoint(x.current, y.current) === null\r\n                ? selectedItem\r\n                : document.elementFromPoint(x.current, y.current);\r\n        if (dropItem.classList.contains('dragIcon')) {\r\n            dropItem = dropItem.parentNode;\r\n        }\r\n        if (dropItem === selectedItem) {\r\n            return;\r\n        }\r\n        if (list === dropItem.parentNode) {\r\n            dropIndex.current = dropItem.dataset.index;\r\n            if (dropItem === selectedItem.nextSibling) {\r\n                dropItem = dropItem.nextSibling;\r\n            }\r\n            list.insertBefore(selectedItem, dropItem);\r\n        }\r\n    };\r\n\r\n    const handleDragEnd = event => {\r\n        const selectedItem = event.target;\r\n        onMove(selectedItem.dataset.index, dropIndex.current);\r\n        selectedItem.classList.remove('drag-active');\r\n        document.removeEventListener('dragover', handleDocumentDragOver);\r\n    };\r\n\r\n    const handleDragOver = event => {\r\n        event.preventDefault();\r\n        event.dataTransfer.dropEffect = 'move';\r\n    };\r\n\r\n    return (\r\n        <Root\r\n            key={source}\r\n            draggable={onMove ? 'true' : undefined}\r\n            onDrag={onMove ? handleDrag : undefined}\r\n            onDragStart={onMove ? handleDragStart : undefined}\r\n            onDragEnd={onMove ? handleDragEnd : undefined}\r\n            onDragOver={onMove ? handleDragOver : undefined}\r\n            data-index={index}\r\n        >\r\n            <label htmlFor={`switch_${index}`}>\r\n                <Switch\r\n                    checked={selected}\r\n                    onChange={onToggle}\r\n                    name={index}\r\n                    id={`switch_${index}`}\r\n                    size=\"small\"\r\n                    sx={{ mr: 0.5, ml: -0.5 }}\r\n                />\r\n                <Typography variant=\"body2\" component=\"span\">\r\n                    <FieldTitle\r\n                        label={label}\r\n                        source={source}\r\n                        resource={resource}\r\n                    />\r\n                </Typography>\r\n            </label>\r\n            {onMove && (\r\n                <DragIcon\r\n                    className=\"dragIcon\"\r\n                    color=\"disabled\"\r\n                    fontSize=\"small\"\r\n                />\r\n            )}\r\n        </Root>\r\n    );\r\n};\r\n\r\nconst Root = styled('div')(({ theme }) => ({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    '& svg': {\r\n        cursor: 'move',\r\n    },\r\n    '&.drag-active': {\r\n        background: 'transparent',\r\n        color: 'transparent',\r\n        outline: `1px solid ${theme.palette.action.selected}`,\r\n        '& .MuiSwitch-root, & svg': {\r\n            visibility: 'hidden',\r\n        },\r\n    },\r\n}));\r\n", "import * as React from 'react';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport {\r\n    useStore,\r\n    usePreferencesEditor,\r\n    useTranslate,\r\n    useRemoveItemsFromStore,\r\n    PreferenceKeyContextProvider,\r\n} from 'ra-core';\r\nimport { Paper, Typography, IconButton } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/CancelOutlined';\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutline';\r\nimport { useTheme, styled } from '@mui/material/styles';\r\n\r\nimport { InspectorRoot } from './InspectorRoot';\r\n\r\nexport const Inspector = () => {\r\n    const {\r\n        isEnabled,\r\n        disable,\r\n        title,\r\n        titleOptions,\r\n        editor,\r\n        preferenceKey,\r\n    } = usePreferencesEditor();\r\n\r\n    const isDragging = useRef(false);\r\n    const removeItems = useRemoveItemsFromStore(preferenceKey);\r\n    const theme = useTheme();\r\n    const translate = useTranslate();\r\n    const [version, setVersion] = useState(0);\r\n\r\n    const [dialogPosition, setDialogPosition] = useStore(\r\n        'ra.inspector.position',\r\n        {\r\n            x:\r\n                // We want it positioned to the far right of the screen\r\n                document?.body.clientWidth -\r\n                // So we remove its size (see the root css class)\r\n                theme.breakpoints.values.sm / 2 -\r\n                // And add a margin\r\n                8,\r\n            y: 8,\r\n        }\r\n    );\r\n\r\n    // poor man's drag and drop\r\n    // store click position relative to the dialog position\r\n    const [clickPosition, setClickPosition] = useState<\r\n        { x: number; y: number } | undefined\r\n    >();\r\n    const handleDragStart = e => {\r\n        // exit if the user drags on anything but the title\r\n        const draggedElement = document?.elementFromPoint(e.clientX, e.clientY);\r\n        if (draggedElement.id !== 'inspector-dialog-title') {\r\n            return;\r\n        }\r\n        isDragging.current = true;\r\n        e.dataTransfer.effectAllowed = 'move';\r\n        e.dataTransfer.setData('inspector', '');\r\n        setTimeout(() => {\r\n            e.target.classList.add('hide');\r\n        }, 0);\r\n        setClickPosition({\r\n            x: e.clientX - dialogPosition.x,\r\n            y: e.clientY - dialogPosition.y,\r\n        });\r\n    };\r\n    const handleDragEnd = e => {\r\n        if (isDragging.current) {\r\n            setDialogPosition({\r\n                x: e.clientX - clickPosition.x,\r\n                y: e.clientY - clickPosition.y,\r\n            });\r\n            e.target.classList.remove('hide');\r\n            isDragging.current = false;\r\n        }\r\n    };\r\n\r\n    // prevent \"back to base\" animation when the inspector is dropped\r\n    useEffect(() => {\r\n        if (!isEnabled) return;\r\n        const handleDragover = e => {\r\n            if (e.dataTransfer.types.includes('inspector')) {\r\n                e.preventDefault();\r\n            }\r\n        };\r\n        document?.addEventListener('dragover', handleDragover);\r\n        return () => {\r\n            document?.removeEventListener('dragover', handleDragover);\r\n        };\r\n    }, [isEnabled]);\r\n\r\n    // make sure that the dialog is always visible, as the stored position may be outside the screen\r\n    useEffect(() => {\r\n        if (!isEnabled) return;\r\n        const moveInspectorIfOutsideScreen = () => {\r\n            window?.requestAnimationFrame(() => {\r\n                setDialogPosition(position => ({\r\n                    x: Math.min(\r\n                        position.x,\r\n                        document?.body.clientWidth -\r\n                            theme.breakpoints.values.sm / 2 -\r\n                            8\r\n                    ),\r\n                    y: Math.min(position.y, window?.innerHeight - 50),\r\n                }));\r\n            });\r\n        };\r\n        moveInspectorIfOutsideScreen();\r\n        window?.addEventListener('resize', moveInspectorIfOutsideScreen);\r\n        return () => {\r\n            window?.removeEventListener('resize', moveInspectorIfOutsideScreen);\r\n        };\r\n    }, [isEnabled, setDialogPosition, theme.breakpoints.values.sm]);\r\n\r\n    const handleReset = () => {\r\n        removeItems();\r\n        // force redraw of the form to use the default values\r\n        setVersion(version => version + 1);\r\n    };\r\n\r\n    if (!isEnabled) return null;\r\n    return (\r\n        <StyledPaper\r\n            className={InspectorClasses.modal}\r\n            elevation={3}\r\n            draggable\r\n            onDragStart={handleDragStart}\r\n            onDragEnd={handleDragEnd}\r\n            sx={{ left: dialogPosition.x, top: dialogPosition.y }}\r\n        >\r\n            <div className={InspectorClasses.title}>\r\n                <Typography\r\n                    id=\"inspector-dialog-title\"\r\n                    variant=\"overline\"\r\n                    component=\"div\"\r\n                    py={1}\r\n                    px={2}\r\n                    flex=\"1\"\r\n                >\r\n                    {title && translate(title, titleOptions)}\r\n                </Typography>\r\n                <span id=\"inspector-toolbar\" />\r\n                {preferenceKey && (\r\n                    <IconButton\r\n                        aria-label={translate('ra.action.remove')}\r\n                        onClick={handleReset}\r\n                        size=\"small\"\r\n                    >\r\n                        <DeleteIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                )}\r\n                <IconButton\r\n                    aria-label={translate('ra.action.close')}\r\n                    onClick={disable}\r\n                    size=\"small\"\r\n                    sx={{ mr: 1 }}\r\n                >\r\n                    <CloseIcon fontSize=\"inherit\" />\r\n                </IconButton>\r\n            </div>\r\n            <div className={InspectorClasses.content} key={version}>\r\n                <PreferenceKeyContextProvider value={preferenceKey}>\r\n                    {editor || <InspectorRoot />}\r\n                </PreferenceKeyContextProvider>\r\n            </div>\r\n        </StyledPaper>\r\n    );\r\n};\r\n\r\nconst PREFIX = 'RaInspector';\r\n\r\nexport const InspectorClasses = {\r\n    modal: `${PREFIX}-modal`,\r\n    title: `${PREFIX}-title`,\r\n    content: `${PREFIX}-content`,\r\n};\r\n\r\nconst StyledPaper = styled(Paper, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    position: 'fixed',\r\n    zIndex: theme.zIndex.modal + 1,\r\n    width: theme.breakpoints.values.sm / 2,\r\n    transition: theme.transitions.create(['height', 'width']),\r\n    '&.hide': {\r\n        display: 'none',\r\n    },\r\n    [`& .${InspectorClasses.title}`]: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        cursor: 'move',\r\n    },\r\n    [`& .${InspectorClasses.content}`]: {\r\n        overflowY: 'auto',\r\n        maxHeight: '75vh',\r\n        padding: theme.spacing(2),\r\n        paddingTop: 0,\r\n    },\r\n}));\r\n\r\nInspector.displayName = 'Inspector';\r\n", "import * as React from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { useTranslate, useSetInspectorTitle } from 'ra-core';\r\n\r\nexport const InspectorRoot = () => {\r\n    const translate = useTranslate();\r\n    useSetInspectorTitle('ra.configurable.inspector.title', {\r\n        _: 'Inspector',\r\n    });\r\n\r\n    return (\r\n        <Typography>\r\n            {translate('ra.configurable.inspector.content', {\r\n                _: 'Hover the application UI elements to configure them',\r\n            })}\r\n        </Typography>\r\n    );\r\n};\r\n", "import * as React from 'react';\r\nimport { MouseEventHandler } from 'react';\r\nimport { IconButton, IconButtonProps, Tooltip } from '@mui/material';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport { useTranslate, usePreferencesEditor } from 'ra-core';\r\n\r\nexport const InspectorButton = React.forwardRef<\r\n    HTMLButtonElement,\r\n    IconButtonProps & { label?: string; SvgIconProps?: any }\r\n>(\r\n    (\r\n        {\r\n            label = 'ra.configurable.configureMode',\r\n            SvgIconProps = {},\r\n            ...props\r\n        },\r\n        ref\r\n    ) => {\r\n        const {\r\n            enable,\r\n            disable,\r\n            setPreferenceKey,\r\n            isEnabled,\r\n        } = usePreferencesEditor();\r\n        const translate = useTranslate();\r\n\r\n        const handleClick: MouseEventHandler<HTMLButtonElement> = () => {\r\n            if (isEnabled) {\r\n                disable();\r\n                setPreferenceKey(null);\r\n            } else {\r\n                enable();\r\n            }\r\n        };\r\n\r\n        const translatedLabel = translate(label, { _: 'Configure mode' });\r\n\r\n        return (\r\n            <Tooltip title={translatedLabel}>\r\n                <IconButton\r\n                    aria-label={translatedLabel}\r\n                    onClick={handleClick}\r\n                    color=\"inherit\"\r\n                    ref={ref}\r\n                    {...props}\r\n                >\r\n                    <SettingsIcon fontSize=\"inherit\" {...SvgIconProps} />\r\n                </IconButton>\r\n            </Tooltip>\r\n        );\r\n    }\r\n);\r\n", "import * as React from 'react';\r\nimport { useRecordContext, useTranslate, usePreference } from 'ra-core';\r\n\r\nexport const PageTitle = ({ title, defaultTitle, className, ...rest }: any) => {\r\n    const [titleFromPreferences] = usePreference();\r\n    const translate = useTranslate();\r\n    const record = useRecordContext();\r\n\r\n    return titleFromPreferences ? (\r\n        <span className={className} {...rest}>\r\n            {translate(titleFromPreferences, {\r\n                ...record,\r\n                _: titleFromPreferences,\r\n            })}\r\n        </span>\r\n    ) : (\r\n        <span className={className}>\r\n            {!title ? (\r\n                <span {...rest}>{defaultTitle}</span>\r\n            ) : typeof title === 'string' ? (\r\n                <span {...rest}>{translate(title, { _: title })}</span>\r\n            ) : (\r\n                title\r\n            )}\r\n        </span>\r\n    );\r\n};\r\n", "import { useEffect, useRef } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\n/**\r\n * A hook to use inside the component passed to FallbackComponent\r\n * of react-error-boundary. It resets the error boundary state whenever\r\n * the location changes\r\n * @param {Function} resetErrorBoundary\r\n */\r\nexport const useResetErrorBoundaryOnLocationChange = (\r\n    resetErrorBoundary: () => void\r\n) => {\r\n    const { pathname } = useLocation();\r\n    const originalPathname = useRef(pathname);\r\n\r\n    useEffect(() => {\r\n        if (pathname !== originalPathname.current) {\r\n            resetErrorBoundary();\r\n        }\r\n    }, [pathname, resetErrorBoundary]);\r\n};\r\n", "import React, {\r\n    useState,\r\n    ErrorInfo,\r\n    ComponentType,\r\n    HtmlHTMLAttributes,\r\n} from 'react';\r\nimport { ErrorBoundary } from 'react-error-boundary';\r\nimport clsx from 'clsx';\r\nimport { styled, SxProps } from '@mui/material/styles';\r\nimport { CoreLayoutProps } from 'ra-core';\r\n\r\nimport { AppBar as DefaultAppBar, AppBarProps } from './AppBar';\r\nimport { Sidebar as DefaultSidebar, SidebarProps } from './Sidebar';\r\nimport { Menu as DefaultMenu, MenuProps } from './Menu';\r\nimport { Error, ErrorProps } from './Error';\r\nimport { SkipNavigationButton } from '../button';\r\nimport { useSidebarState } from './useSidebarState';\r\nimport { Inspector } from '../preferences';\r\n\r\nexport const Layout = (props: LayoutProps) => {\r\n    const {\r\n        appBar: AppBar = DefaultAppBar,\r\n        appBarAlwaysOn,\r\n        children,\r\n        className,\r\n        dashboard,\r\n        error: errorComponent,\r\n        menu: Menu = DefaultMenu,\r\n        sidebar: Sidebar = DefaultSidebar,\r\n        title,\r\n        ...rest\r\n    } = props;\r\n\r\n    const [open] = useSidebarState();\r\n    const [errorInfo, setErrorInfo] = useState<ErrorInfo>(null);\r\n\r\n    const handleError = (error: Error, info: ErrorInfo) => {\r\n        setErrorInfo(info);\r\n    };\r\n\r\n    return (\r\n        <StyledLayout className={clsx('layout', className)} {...rest}>\r\n            <SkipNavigationButton />\r\n            <div className={LayoutClasses.appFrame}>\r\n                <AppBar open={open} title={title} alwaysOn={appBarAlwaysOn} />\r\n                <main className={LayoutClasses.contentWithSidebar}>\r\n                    <Sidebar appBarAlwaysOn={appBarAlwaysOn}>\r\n                        <Menu hasDashboard={!!dashboard} />\r\n                    </Sidebar>\r\n                    <div id=\"main-content\" className={LayoutClasses.content}>\r\n                        <ErrorBoundary\r\n                            onError={handleError}\r\n                            fallbackRender={({ error, resetErrorBoundary }) => (\r\n                                <Error\r\n                                    error={error}\r\n                                    errorComponent={errorComponent}\r\n                                    errorInfo={errorInfo}\r\n                                    resetErrorBoundary={resetErrorBoundary}\r\n                                    title={title}\r\n                                />\r\n                            )}\r\n                        >\r\n                            {children}\r\n                        </ErrorBoundary>\r\n                    </div>\r\n                </main>\r\n                <Inspector />\r\n            </div>\r\n        </StyledLayout>\r\n    );\r\n};\r\n\r\nexport interface LayoutProps\r\n    extends CoreLayoutProps,\r\n        Omit<HtmlHTMLAttributes<HTMLDivElement>, 'title'> {\r\n    appBar?: ComponentType<AppBarProps>;\r\n    appBarAlwaysOn?: boolean;\r\n    className?: string;\r\n    error?: ComponentType<ErrorProps>;\r\n    menu?: ComponentType<MenuProps>;\r\n    sidebar?: ComponentType<SidebarProps>;\r\n    sx?: SxProps;\r\n}\r\n\r\nexport interface LayoutState {\r\n    hasError: boolean;\r\n    error?: Error;\r\n    errorInfo?: ErrorInfo;\r\n}\r\n\r\nconst PREFIX = 'RaLayout';\r\nexport const LayoutClasses = {\r\n    appFrame: `${PREFIX}-appFrame`,\r\n    contentWithSidebar: `${PREFIX}-contentWithSidebar`,\r\n    content: `${PREFIX}-content`,\r\n};\r\n\r\nconst StyledLayout = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    zIndex: 1,\r\n    minHeight: '100vh',\r\n    backgroundColor: theme.palette.background.default,\r\n    position: 'relative',\r\n    minWidth: 'fit-content',\r\n    width: '100%',\r\n    color: theme.palette.getContrastText(theme.palette.background.default),\r\n\r\n    [`& .${LayoutClasses.appFrame}`]: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n        marginTop: theme.spacing(6),\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginTop: theme.spacing(7),\r\n        },\r\n    },\r\n    [`& .${LayoutClasses.contentWithSidebar}`]: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    [`& .${LayoutClasses.content}`]: {\r\n        backgroundColor: theme.palette.background.default,\r\n        zIndex: 2,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n        flexBasis: 0,\r\n        padding: 0,\r\n        [theme.breakpoints.up('xs')]: {\r\n            paddingRight: theme.spacing(1),\r\n            paddingLeft: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n", "import _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\r\nimport * as React from 'react';\r\n\r\nvar changedArray = function changedArray(a, b) {\r\n  if (a === void 0) {\r\n    a = [];\r\n  }\r\n\r\n  if (b === void 0) {\r\n    b = [];\r\n  }\r\n\r\n  return a.length !== b.length || a.some(function (item, index) {\r\n    return !Object.is(item, b[index]);\r\n  });\r\n};\r\n\r\nvar initialState = {\r\n  error: null\r\n};\r\n\r\nvar ErrorBoundary = /*#__PURE__*/function (_React$Component) {\r\n  _inheritsLoose(ErrorBoundary, _React$Component);\r\n\r\n  function ErrorBoundary() {\r\n    var _this;\r\n\r\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      _args[_key] = arguments[_key];\r\n    }\r\n\r\n    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;\r\n    _this.state = initialState;\r\n\r\n    _this.resetErrorBoundary = function () {\r\n      var _this$props;\r\n\r\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n        args[_key2] = arguments[_key2];\r\n      }\r\n\r\n      _this.props.onReset == null ? void 0 : (_this$props = _this.props).onReset.apply(_this$props, args);\r\n\r\n      _this.reset();\r\n    };\r\n\r\n    return _this;\r\n  }\r\n\r\n  ErrorBoundary.getDerivedStateFromError = function getDerivedStateFromError(error) {\r\n    return {\r\n      error: error\r\n    };\r\n  };\r\n\r\n  var _proto = ErrorBoundary.prototype;\r\n\r\n  _proto.reset = function reset() {\r\n    this.setState(initialState);\r\n  };\r\n\r\n  _proto.componentDidCatch = function componentDidCatch(error, info) {\r\n    var _this$props$onError, _this$props2;\r\n\r\n    (_this$props$onError = (_this$props2 = this.props).onError) == null ? void 0 : _this$props$onError.call(_this$props2, error, info);\r\n  };\r\n\r\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\r\n    var error = this.state.error;\r\n    var resetKeys = this.props.resetKeys; // There's an edge case where if the thing that triggered the error\r\n    // happens to *also* be in the resetKeys array, we'd end up resetting\r\n    // the error boundary immediately. This would likely trigger a second\r\n    // error to be thrown.\r\n    // So we make sure that we don't check the resetKeys on the first call\r\n    // of cDU after the error is set\r\n\r\n    if (error !== null && prevState.error !== null && changedArray(prevProps.resetKeys, resetKeys)) {\r\n      var _this$props$onResetKe, _this$props3;\r\n\r\n      (_this$props$onResetKe = (_this$props3 = this.props).onResetKeysChange) == null ? void 0 : _this$props$onResetKe.call(_this$props3, prevProps.resetKeys, resetKeys);\r\n      this.reset();\r\n    }\r\n  };\r\n\r\n  _proto.render = function render() {\r\n    var error = this.state.error;\r\n    var _this$props4 = this.props,\r\n        fallbackRender = _this$props4.fallbackRender,\r\n        FallbackComponent = _this$props4.FallbackComponent,\r\n        fallback = _this$props4.fallback;\r\n\r\n    if (error !== null) {\r\n      var _props = {\r\n        error: error,\r\n        resetErrorBoundary: this.resetErrorBoundary\r\n      };\r\n\r\n      if ( /*#__PURE__*/React.isValidElement(fallback)) {\r\n        return fallback;\r\n      } else if (typeof fallbackRender === 'function') {\r\n        return fallbackRender(_props);\r\n      } else if (FallbackComponent) {\r\n        return /*#__PURE__*/React.createElement(FallbackComponent, _props);\r\n      } else {\r\n        throw new Error('react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop');\r\n      }\r\n    }\r\n\r\n    return this.props.children;\r\n  };\r\n\r\n  return ErrorBoundary;\r\n}(React.Component);\r\n\r\nfunction withErrorBoundary(Component, errorBoundaryProps) {\r\n  var Wrapped = function Wrapped(props) {\r\n    return /*#__PURE__*/React.createElement(ErrorBoundary, errorBoundaryProps, /*#__PURE__*/React.createElement(Component, props));\r\n  }; // Format for display in DevTools\r\n\r\n\r\n  var name = Component.displayName || Component.name || 'Unknown';\r\n  Wrapped.displayName = \"withErrorBoundary(\" + name + \")\";\r\n  return Wrapped;\r\n}\r\n\r\nfunction useErrorHandler(givenError) {\r\n  var _React$useState = React.useState(null),\r\n      error = _React$useState[0],\r\n      setError = _React$useState[1];\r\n\r\n  if (givenError != null) throw givenError;\r\n  if (error != null) throw error;\r\n  return setError;\r\n}\r\n/*\r\neslint\r\n  @typescript-eslint/sort-type-union-intersection-members: \"off\",\r\n  @typescript-eslint/no-throw-literal: \"off\",\r\n  @typescript-eslint/prefer-nullish-coalescing: \"off\"\r\n*/\r\n\r\nexport { ErrorBoundary, useErrorHandler, withErrorBoundary };\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Drawer,\r\n    DrawerProps,\r\n    useMediaQuery,\r\n    Theme,\r\n    useScrollTrigger,\r\n} from '@mui/material';\r\nimport lodashGet from 'lodash/get';\r\nimport { useLocale } from 'ra-core';\r\n\r\nimport { useSidebarState } from './useSidebarState';\r\n\r\nexport const Sidebar = (props: SidebarProps) => {\r\n    const { appBarAlwaysOn, children, closedSize, size, ...rest } = props;\r\n    const isXSmall = useMediaQuery<Theme>(theme =>\r\n        theme.breakpoints.down('sm')\r\n    );\r\n    const [open, setOpen] = useSidebarState();\r\n    useLocale(); // force redraw on locale change\r\n    const trigger = useScrollTrigger();\r\n\r\n    const toggleSidebar = () => setOpen(!open);\r\n\r\n    return isXSmall ? (\r\n        <StyledDrawer\r\n            variant=\"temporary\"\r\n            open={open}\r\n            onClose={toggleSidebar}\r\n            classes={SidebarClasses}\r\n            {...rest}\r\n        >\r\n            {children}\r\n        </StyledDrawer>\r\n    ) : (\r\n        <StyledDrawer\r\n            variant=\"permanent\"\r\n            open={open}\r\n            onClose={toggleSidebar}\r\n            classes={SidebarClasses}\r\n            className={\r\n                trigger && !appBarAlwaysOn ? SidebarClasses.appBarCollapsed : ''\r\n            }\r\n            {...rest}\r\n        >\r\n            <div className={SidebarClasses.fixed}>{children}</div>\r\n        </StyledDrawer>\r\n    );\r\n};\r\n\r\nSidebar.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport interface SidebarProps extends DrawerProps {\r\n    appBarAlwaysOn?: boolean;\r\n    children: ReactElement;\r\n    closedSize?: number;\r\n    size?: number;\r\n}\r\n\r\nconst PREFIX = 'RaSidebar';\r\n\r\nexport const SidebarClasses = {\r\n    docked: `${PREFIX}-docked`,\r\n    paper: `${PREFIX}-paper`,\r\n    paperAnchorLeft: `${PREFIX}-paperAnchorLeft`,\r\n    paperAnchorRight: `${PREFIX}-paperAnchorRight`,\r\n    paperAnchorTop: `${PREFIX}-paperAnchorTop`,\r\n    paperAnchorBottom: `${PREFIX}-paperAnchorBottom`,\r\n    paperAnchorDockedLeft: `${PREFIX}-paperAnchorDockedLeft`,\r\n    paperAnchorDockedTop: `${PREFIX}-paperAnchorDockedTop`,\r\n    paperAnchorDockedRight: `${PREFIX}-paperAnchorDockedRight`,\r\n    paperAnchorDockedBottom: `${PREFIX}-paperAnchorDockedBottom`,\r\n    modal: `${PREFIX}-modal`,\r\n    fixed: `${PREFIX}-fixed`,\r\n    appBarCollapsed: `${PREFIX}-appBarCollapsed`,\r\n};\r\n\r\nconst StyledDrawer = styled(Drawer, {\r\n    name: PREFIX,\r\n    slot: 'Root',\r\n    overridesResolver: (props, styles) => styles.root,\r\n    shouldForwardProp: () => true,\r\n})(({ open, theme }) => ({\r\n    height: 'calc(100vh - 3em)',\r\n    marginTop: 0,\r\n    transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    [`&.${SidebarClasses.appBarCollapsed}`]: {\r\n        // compensate the margin of the Layout appFrame instead of removing it in the Layout\r\n        // because otherwise, the appFrame content without margin may revert the scrollTrigger,\r\n        // leading to a visual jiggle\r\n        marginTop: theme.spacing(-6),\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginTop: theme.spacing(-7),\r\n        },\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    [`& .${SidebarClasses.docked}`]: {},\r\n    [`& .${SidebarClasses.paper}`]: {},\r\n    [`& .${SidebarClasses.paperAnchorLeft}`]: {},\r\n    [`& .${SidebarClasses.paperAnchorRight}`]: {},\r\n    [`& .${SidebarClasses.paperAnchorTop}`]: {},\r\n    [`& .${SidebarClasses.paperAnchorBottom}`]: {},\r\n    [`& .${SidebarClasses.paperAnchorDockedLeft}`]: {},\r\n    [`& .${SidebarClasses.paperAnchorDockedTop}`]: {},\r\n    [`& .${SidebarClasses.paperAnchorDockedRight}`]: {},\r\n    [`& .${SidebarClasses.paperAnchorDockedBottom}`]: {},\r\n    [`& .${SidebarClasses.modal}`]: {},\r\n\r\n    [`& .${SidebarClasses.fixed}`]: {\r\n        position: 'fixed',\r\n        height: 'calc(100vh - 3em)',\r\n        overflowX: 'hidden',\r\n        // hide scrollbar\r\n        scrollbarWidth: 'none',\r\n        msOverflowStyle: 'none',\r\n        '&::-webkit-scrollbar': {\r\n            display: 'none',\r\n        },\r\n    },\r\n\r\n    [`& .MuiPaper-root`]: {\r\n        position: 'relative',\r\n        width: open\r\n            ? lodashGet(theme, 'sidebar.width', DRAWER_WIDTH)\r\n            : lodashGet(theme, 'sidebar.closedWidth', CLOSED_DRAWER_WIDTH),\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        backgroundColor: 'transparent',\r\n        borderRight: 'none',\r\n        [theme.breakpoints.only('xs')]: {\r\n            marginTop: 0,\r\n            height: '100vh',\r\n            position: 'inherit',\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            border: 'none',\r\n        },\r\n        zIndex: 'inherit',\r\n    },\r\n}));\r\n\r\nexport const DRAWER_WIDTH = 240;\r\nexport const CLOSED_DRAWER_WIDTH = 55;\r\n", "import * as React from 'react';\r\nimport { ReactNode } from 'react';\r\nimport { MenuList } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport lodashGet from 'lodash/get';\r\nimport clsx from 'clsx';\r\nimport { useResourceDefinitions } from 'ra-core';\r\n\r\nimport { DRAWER_WIDTH, CLOSED_DRAWER_WIDTH } from './Sidebar';\r\nimport { useSidebarState } from './useSidebarState';\r\nimport { DashboardMenuItem } from './DashboardMenuItem';\r\nimport { MenuItemLink } from './MenuItemLink';\r\nimport { ResourceMenuItem } from './ResourceMenuItem';\r\n\r\n/**\r\n * Renders a menu with one menu item per resource by default. You can also set menu items by hand.\r\n *\r\n * @example\r\n * import * as React from 'react';\r\n * import { Menu } from 'react-admin';\r\n *\r\n * import BookIcon from '@mui/icons-material/Book';\r\n * import ChatBubbleIcon from '@mui/icons-material/ChatBubble';\r\n * import PeopleIcon from '@mui/icons-material/People';\r\n * import LabelIcon from '@mui/icons-material/Label';\r\n *\r\n * export const MyMenu = () => (\r\n *     <Menu>\r\n *         <Menu.DashboardItem />\r\n *         <Menu.Item to=\"/posts\" primaryText=\"Posts\" leftIcon={<BookIcon />}/>\r\n *         <Menu.Item to=\"/comments\" primaryText=\"Comments\" leftIcon={<ChatBubbleIcon />}/>\r\n *         <Menu.Item to=\"/users\" primaryText=\"Users\" leftIcon={<PeopleIcon />}/>\r\n *         <Menu.Item to=\"/custom-route\" primaryText=\"Miscellaneous\" leftIcon={<LabelIcon />}/>\r\n *     </Menu>\r\n * );\r\n */\r\nexport const Menu = (props: MenuProps) => {\r\n    const resources = useResourceDefinitions();\r\n    const {\r\n        hasDashboard,\r\n        children = [\r\n            hasDashboard ? (\r\n                <DashboardMenuItem key=\"default-dashboard-menu-item\" />\r\n            ) : null,\r\n            ...Object.keys(resources)\r\n                .filter(name => resources[name].hasList)\r\n                .map(name => <ResourceMenuItem key={name} name={name} />),\r\n        ],\r\n        className,\r\n        ...rest\r\n    } = props;\r\n\r\n    const [open] = useSidebarState();\r\n\r\n    return (\r\n        <Root\r\n            className={clsx(\r\n                {\r\n                    [MenuClasses.open]: open,\r\n                    [MenuClasses.closed]: !open,\r\n                },\r\n                className\r\n            )}\r\n            {...rest}\r\n        >\r\n            {children}\r\n        </Root>\r\n    );\r\n};\r\n\r\n// NOTE: We don't extends MenuListProps here to avoid breaking changes\r\nexport interface MenuProps {\r\n    children?: ReactNode;\r\n    className?: string;\r\n    dense?: boolean;\r\n    hasDashboard?: boolean;\r\n    [key: string]: any;\r\n}\r\n\r\nMenu.propTypes = {\r\n    className: PropTypes.string,\r\n    dense: PropTypes.bool,\r\n    hasDashboard: PropTypes.bool,\r\n};\r\n\r\n// re-export MenuItem components for convenience\r\nMenu.Item = MenuItemLink;\r\nMenu.DashboardItem = DashboardMenuItem;\r\nMenu.ResourceItem = ResourceMenuItem;\r\n\r\nconst PREFIX = 'RaMenu';\r\n\r\nexport const MenuClasses = {\r\n    open: `${PREFIX}-open`,\r\n    closed: `${PREFIX}-closed`,\r\n};\r\n\r\nconst Root = styled(MenuList, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    marginTop: '0.5em',\r\n    marginBottom: '1em',\r\n    [theme.breakpoints.only('xs')]: {\r\n        marginTop: 0,\r\n    },\r\n    transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n\r\n    [`&.${MenuClasses.open}`]: {\r\n        width: lodashGet(theme, 'sidebar.width', DRAWER_WIDTH),\r\n    },\r\n\r\n    [`&.${MenuClasses.closed}`]: {\r\n        width: lodashGet(theme, 'sidebar.closedWidth', CLOSED_DRAWER_WIDTH),\r\n    },\r\n}));\r\n", "import * as React from 'react';\r\nimport { createElement } from 'react';\r\nimport DefaultIcon from '@mui/icons-material/ViewList';\r\n\r\nimport {\r\n    useResourceDefinitions,\r\n    useGetResourceLabel,\r\n    useCreatePath,\r\n} from 'ra-core';\r\n\r\nimport { MenuItemLink } from './MenuItemLink';\r\n\r\nexport const ResourceMenuItem = ({ name }: { name: string }) => {\r\n    const resources = useResourceDefinitions();\r\n    const getResourceLabel = useGetResourceLabel();\r\n    const createPath = useCreatePath();\r\n    if (!resources || !resources[name]) return null;\r\n    return (\r\n        <MenuItemLink\r\n            to={createPath({\r\n                resource: name,\r\n                type: 'list',\r\n            })}\r\n            state={{ _scrollToTop: true }}\r\n            primaryText={<>{getResourceLabel(name, 2)}</>}\r\n            leftIcon={\r\n                resources[name].icon ? (\r\n                    createElement(resources[name].icon)\r\n                ) : (\r\n                    <DefaultIcon />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    LinearProgress as MuiLinearProgress,\r\n    LinearProgressProps as ProgressProps,\r\n} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport { useTimeout } from 'ra-core';\r\n\r\n/**\r\n * Progress bar formatted to replace an input or a field in a form layout\r\n *\r\n * Avoids visual jumps when replaced by value or form input\r\n *\r\n * @see ReferenceField\r\n * @see ReferenceInput\r\n *\r\n * @typedef {Object} Props the props you can use\r\n * @prop {Object} classes CSS class names\r\n * @prop {string} className CSS class applied to the LinearProgress component\r\n * @prop {integer} timeout Milliseconds to wait before showing the progress bar. One second by default\r\n *\r\n * @param {Props} props\r\n */\r\nexport const LinearProgress = ({\r\n    timeout = 1000,\r\n    ...props\r\n}: LinearProgressProps) => {\r\n    const { className, ...rest } = props;\r\n\r\n    const oneSecondHasPassed = useTimeout(timeout);\r\n\r\n    return oneSecondHasPassed ? (\r\n        <StyledProgress className={className} {...rest} />\r\n    ) : (\r\n        <Box my={1} height={4} />\r\n    );\r\n};\r\n\r\nLinearProgress.propTypes = {\r\n    className: PropTypes.string,\r\n    timeout: PropTypes.number,\r\n};\r\n\r\n// What? TypeScript loses the displayName if we don't set it explicitly\r\nLinearProgress.displayName = 'LinearProgress';\r\n\r\nexport interface LinearProgressProps extends ProgressProps {\r\n    timeout?: number;\r\n}\r\n\r\nconst PREFIX = 'RaLinearProgress';\r\n\r\nconst StyledProgress = styled(MuiLinearProgress, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    margin: `${theme.spacing(1)} 0`,\r\n    width: theme.spacing(20),\r\n}));\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { SxProps } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { useTranslate } from 'ra-core';\r\n\r\nexport const Loading = (props: LoadingProps) => {\r\n    const {\r\n        className,\r\n        loadingPrimary = 'ra.page.loading',\r\n        loadingSecondary = 'ra.message.loading',\r\n        ...rest\r\n    } = props;\r\n\r\n    const translate = useTranslate();\r\n    return (\r\n        <Root className={className} {...rest}>\r\n            <div className={LoadingClasses.message}>\r\n                <CircularProgress\r\n                    className={LoadingClasses.icon}\r\n                    color=\"primary\"\r\n                />\r\n                <h1>{translate(loadingPrimary, { _: loadingPrimary })}</h1>\r\n                <div>\r\n                    {translate(loadingSecondary, { _: loadingSecondary })}\r\n                </div>\r\n            </div>\r\n        </Root>\r\n    );\r\n};\r\n\r\nLoading.propTypes = {\r\n    className: PropTypes.string,\r\n    loadingPrimary: PropTypes.string,\r\n    loadingSecondary: PropTypes.string,\r\n};\r\n\r\nexport interface LoadingProps {\r\n    className?: string;\r\n    loadingPrimary?: string;\r\n    loadingSecondary?: string;\r\n    sx?: SxProps;\r\n}\r\n\r\nconst PREFIX = 'RaLoading';\r\n\r\nexport const LoadingClasses = {\r\n    root: `${PREFIX}-root`,\r\n    icon: `${PREFIX}-icon`,\r\n    message: `${PREFIX}-message`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.up('md')]: {\r\n        height: '100%',\r\n    },\r\n    [theme.breakpoints.down('xl')]: {\r\n        height: '100vh',\r\n        marginTop: '-3em',\r\n    },\r\n\r\n    [`& .${LoadingClasses.icon}`]: {\r\n        width: '9em',\r\n        height: '9em',\r\n    },\r\n\r\n    [`& .${LoadingClasses.message}`]: {\r\n        textAlign: 'center',\r\n        fontFamily: 'Roboto, sans-serif',\r\n        opacity: 0.5,\r\n        margin: '0 1em',\r\n    },\r\n}));\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Loading } from './Loading';\r\n\r\nexport const LoadingPage = ({\r\n    loadingPrimary = 'ra.page.loading',\r\n    loadingSecondary = 'ra.message.loading',\r\n    ...props\r\n}) => (\r\n    <Loading\r\n        loadingPrimary={loadingPrimary}\r\n        loadingSecondary={loadingSecondary}\r\n        {...props}\r\n    />\r\n);\r\n\r\nLoadingPage.propTypes = {\r\n    theme: PropTypes.object,\r\n    className: PropTypes.string,\r\n    loadingPrimary: PropTypes.string,\r\n    loadingSecondary: PropTypes.string,\r\n};\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@mui/material/Button';\r\nimport HotTub from '@mui/icons-material/HotTub';\r\nimport History from '@mui/icons-material/History';\r\n\r\nimport { useAuthenticated, useTranslate } from 'ra-core';\r\nimport { Title } from './Title';\r\n\r\nexport const NotFound = props => {\r\n    const { className, title, ...rest } = props;\r\n\r\n    const translate = useTranslate();\r\n    useAuthenticated();\r\n    return (\r\n        <Root className={className} {...sanitizeRestProps(rest)}>\r\n            <Title defaultTitle={title} />\r\n            <div className={NotFoundClasses.message}>\r\n                <HotTub className={NotFoundClasses.icon} />\r\n                <h1>{translate('ra.page.not_found')}</h1>\r\n                <div>{translate('ra.message.not_found')}.</div>\r\n            </div>\r\n            <div className={NotFoundClasses.toolbar}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    startIcon={<History />}\r\n                    onClick={goBack}\r\n                >\r\n                    {translate('ra.action.back')}\r\n                </Button>\r\n            </div>\r\n        </Root>\r\n    );\r\n};\r\n\r\nconst sanitizeRestProps = ({\r\n    staticContext,\r\n    history,\r\n    location,\r\n    match,\r\n    ...rest\r\n}) => rest;\r\n\r\nNotFound.propTypes = {\r\n    className: PropTypes.string,\r\n    title: PropTypes.string,\r\n    location: PropTypes.object,\r\n};\r\n\r\nconst PREFIX = 'RaNotFound';\r\n\r\nexport const NotFoundClasses = {\r\n    icon: `${PREFIX}-icon`,\r\n    message: `${PREFIX}-message`,\r\n    toolbar: `${PREFIX}-toolbar`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.up('md')]: {\r\n        height: '100%',\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n        height: '100vh',\r\n        marginTop: '-3em',\r\n    },\r\n\r\n    [`& .${NotFoundClasses.icon}`]: {\r\n        width: '9em',\r\n        height: '9em',\r\n    },\r\n\r\n    [`& .${NotFoundClasses.message}`]: {\r\n        textAlign: 'center',\r\n        fontFamily: 'Roboto, sans-serif',\r\n        opacity: 0.5,\r\n        margin: '0 1em',\r\n    },\r\n\r\n    [`& .${NotFoundClasses.toolbar}`]: {\r\n        textAlign: 'center',\r\n        marginTop: '2em',\r\n    },\r\n}));\r\n\r\nfunction goBack() {\r\n    window.history.go(-1);\r\n}\r\n", "import * as React from 'react';\r\nimport { styled, Theme } from '@mui/material/styles';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Snackbar, SnackbarProps, SnackbarOrigin } from '@mui/material';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    useNotificationContext,\r\n    undoableEventEmitter,\r\n    useTranslate,\r\n} from 'ra-core';\r\n\r\nconst defaultAnchorOrigin: SnackbarOrigin = {\r\n    vertical: 'bottom',\r\n    horizontal: 'center',\r\n};\r\n\r\n/**\r\n * Provides a way to show a notification.\r\n * @see useNotify\r\n *\r\n * @example <caption>Basic usage</caption>\r\n * <Notification />\r\n *\r\n * @param props The component props\r\n * @param {string} props.type The notification type. Defaults to 'info'.\r\n * @param {number} props.autoHideDuration Duration in milliseconds to wait until hiding a given notification. Defaults to 4000.\r\n * @param {boolean} props.multiLine Set it to `true` if the notification message should be shown in more than one line.\r\n */\r\nexport const Notification = (props: NotificationProps) => {\r\n    const {\r\n        className,\r\n        type = 'info',\r\n        autoHideDuration = 4000,\r\n        multiLine = false,\r\n        anchorOrigin = defaultAnchorOrigin,\r\n        ...rest\r\n    } = props;\r\n    const { notifications, takeNotification } = useNotificationContext();\r\n    const [open, setOpen] = useState(false);\r\n    const [messageInfo, setMessageInfo] = React.useState(undefined);\r\n    const translate = useTranslate();\r\n\r\n    useEffect(() => {\r\n        const beforeunload = (e: BeforeUnloadEvent) => {\r\n            e.preventDefault();\r\n            const confirmationMessage = '';\r\n            e.returnValue = confirmationMessage;\r\n            return confirmationMessage;\r\n        };\r\n\r\n        if (messageInfo?.notificationOptions?.undoable) {\r\n            window.addEventListener('beforeunload', beforeunload);\r\n        }\r\n\r\n        if (notifications.length && !messageInfo) {\r\n            // Set a new snack when we don't have an active one\r\n            setMessageInfo(takeNotification());\r\n            setOpen(true);\r\n        } else if (notifications.length && messageInfo && open) {\r\n            // Close an active snack when a new one is added\r\n            setOpen(false);\r\n        }\r\n\r\n        return () => {\r\n            if (messageInfo?.notificationOptions?.undoable) {\r\n                window.removeEventListener('beforeunload', beforeunload);\r\n            }\r\n        };\r\n    }, [notifications, messageInfo, open, takeNotification]);\r\n\r\n    const handleRequestClose = useCallback(() => {\r\n        setOpen(false);\r\n    }, [setOpen]);\r\n\r\n    const handleExited = useCallback(() => {\r\n        if (messageInfo && messageInfo.notificationOptions.undoable) {\r\n            undoableEventEmitter.emit('end', { isUndo: false });\r\n        }\r\n        setMessageInfo(undefined);\r\n    }, [messageInfo]);\r\n\r\n    const handleUndo = useCallback(() => {\r\n        undoableEventEmitter.emit('end', { isUndo: true });\r\n        setOpen(false);\r\n    }, []);\r\n\r\n    if (!messageInfo) return null;\r\n    const {\r\n        message,\r\n        type: typeFromMessage,\r\n        notificationOptions: {\r\n            autoHideDuration: autoHideDurationFromMessage,\r\n            messageArgs,\r\n            multiLine: multilineFromMessage,\r\n            undoable,\r\n            ...options\r\n        },\r\n    } = messageInfo;\r\n\r\n    return (\r\n        <StyledSnackbar\r\n            className={className}\r\n            open={open}\r\n            message={\r\n                message &&\r\n                typeof message === 'string' &&\r\n                translate(message, messageArgs)\r\n            }\r\n            autoHideDuration={\r\n                // Only apply the default autoHideDuration when autoHideDurationFromMessage is undefined\r\n                // as 0 and null are valid values\r\n                autoHideDurationFromMessage === undefined\r\n                    ? autoHideDuration\r\n                    : autoHideDurationFromMessage\r\n            }\r\n            disableWindowBlurListener={undoable}\r\n            TransitionProps={{ onExited: handleExited }}\r\n            onClose={handleRequestClose}\r\n            ContentProps={{\r\n                className: clsx(NotificationClasses[typeFromMessage || type], {\r\n                    [NotificationClasses.multiLine]:\r\n                        multilineFromMessage || multiLine,\r\n                }),\r\n            }}\r\n            action={\r\n                undoable ? (\r\n                    <Button\r\n                        color=\"primary\"\r\n                        className={NotificationClasses.undo}\r\n                        size=\"small\"\r\n                        onClick={handleUndo}\r\n                    >\r\n                        <>{translate('ra.action.undo')}</>\r\n                    </Button>\r\n                ) : null\r\n            }\r\n            anchorOrigin={anchorOrigin}\r\n            {...rest}\r\n            {...options}\r\n        >\r\n            {message && typeof message !== 'string' ? message : null}\r\n        </StyledSnackbar>\r\n    );\r\n};\r\n\r\nNotification.propTypes = {\r\n    type: PropTypes.string,\r\n    autoHideDuration: PropTypes.number,\r\n    multiLine: PropTypes.bool,\r\n};\r\n\r\nconst PREFIX = 'RaNotification';\r\n\r\nexport const NotificationClasses = {\r\n    success: `${PREFIX}-success`,\r\n    error: `${PREFIX}-error`,\r\n    warning: `${PREFIX}-warning`,\r\n    undo: `${PREFIX}-undo`,\r\n    multiLine: `${PREFIX}-multiLine`,\r\n};\r\n\r\nconst StyledSnackbar = styled(Snackbar, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme, type }: NotificationProps & { theme?: Theme }) => ({\r\n    [`& .${NotificationClasses.success}`]: {\r\n        backgroundColor: theme.palette.success.main,\r\n        color: theme.palette.success.contrastText,\r\n    },\r\n\r\n    [`& .${NotificationClasses.error}`]: {\r\n        backgroundColor: theme.palette.error.main,\r\n        color: theme.palette.error.contrastText,\r\n    },\r\n\r\n    [`& .${NotificationClasses.warning}`]: {\r\n        backgroundColor: theme.palette.warning.main,\r\n        color: theme.palette.warning.contrastText,\r\n    },\r\n\r\n    [`& .${NotificationClasses.undo}`]: {\r\n        color:\r\n            type === 'success'\r\n                ? theme.palette.success.contrastText\r\n                : theme.palette.primary.light,\r\n    },\r\n    [`& .${NotificationClasses.multiLine}`]: {\r\n        whiteSpace: 'pre-wrap',\r\n    },\r\n}));\r\n\r\nexport interface NotificationProps extends Omit<SnackbarProps, 'open'> {\r\n    type?: string;\r\n    autoHideDuration?: number;\r\n    multiLine?: boolean;\r\n}\r\n", "import { useStore } from 'ra-core';\r\nimport { RaThemeOptions, ThemeType } from './types';\r\n\r\nexport type ThemeSetter = (theme: ThemeType | RaThemeOptions) => void;\r\n\r\n/**\r\n * Read and update the theme mode (light or dark)\r\n *\r\n * @example\r\n * const [theme, setTheme] = useTheme('light');\r\n * const toggleTheme = () => {\r\n *    setTheme(theme === 'light' ? 'dark' : 'light');\r\n * };\r\n *\r\n * @example // legacy mode, stores the full theme object\r\n * // to be removed in v5\r\n * const [theme, setTheme] = useTheme({\r\n *    palette: {\r\n *       type: 'light',\r\n *   },\r\n * });\r\n */\r\nexport const useTheme = (\r\n    type?: ThemeType | RaThemeOptions\r\n): [ThemeType | RaThemeOptions, ThemeSetter] => {\r\n    // FIXME: remove legacy mode in v5, and remove the RaThemeOptions type\r\n    const [theme, setter] = useStore<ThemeType | RaThemeOptions>('theme', type);\r\n    return [theme, setter];\r\n};\r\n", "import * as React from 'react';\r\nimport { ReactNode, useMemo } from 'react';\r\nimport {\r\n    ThemeProvider as MuiThemeProvider,\r\n    createTheme,\r\n} from '@mui/material/styles';\r\nimport { useMediaQuery } from '@mui/material';\r\n\r\nimport { RaThemeOptions } from './types';\r\nimport { useTheme } from './useTheme';\r\nimport { useThemesContext } from './useThemesContext';\r\n\r\n/**\r\n * This sets the Material UI theme based on the preferred theme type.\r\n *\r\n * @param props\r\n * @param props.children The children of the component.\r\n * @param {ThemeOptions} props.theme The initial theme. Optional, use the one from the context if not provided.\r\n *\r\n * @example\r\n *\r\n * import { ThemesContext, ThemeProvider } from 'react-admin';\r\n *\r\n * const App = () => (\r\n *    <ThemesContext.Provider value={{ lightTheme, darkTheme }}>\r\n *      <ThemeProvider>\r\n *        <Button>Test</Button>\r\n *      </ThemeProvider>\r\n *   </ThemesContext.Provider>\r\n * );\r\n */\r\nexport const ThemeProvider = ({\r\n    children,\r\n    theme: themeOverride,\r\n}: ThemeProviderProps) => {\r\n    const { lightTheme, darkTheme, defaultTheme } = useThemesContext();\r\n\r\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)', {\r\n        noSsr: true,\r\n    });\r\n    const [mode] = useTheme(\r\n        defaultTheme || (prefersDarkMode && darkTheme ? 'dark' : 'light')\r\n    );\r\n\r\n    const themeValue = useMemo(() => {\r\n        try {\r\n            return createTheme(\r\n                typeof mode === 'object'\r\n                    ? mode // FIXME: legacy useTheme, to be removed in v5\r\n                    : mode === 'dark'\r\n                    ? darkTheme\r\n                    : lightTheme || themeOverride\r\n            );\r\n        } catch (e) {\r\n            console.warn('Failed to reuse custom theme from store', e);\r\n            return createTheme();\r\n        }\r\n    }, [mode, themeOverride, lightTheme, darkTheme]);\r\n\r\n    return <MuiThemeProvider theme={themeValue}>{children}</MuiThemeProvider>;\r\n};\r\n\r\nexport interface ThemeProviderProps {\r\n    children: ReactNode;\r\n    /**\r\n     * @deprecated Use the `ThemesProvider` component instead.\r\n     */\r\n    theme?: RaThemeOptions;\r\n}\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Toolbar, { ToolbarProps } from '@mui/material/Toolbar';\r\n\r\nexport const TopToolbar = (props: ToolbarProps) => <StyledToolbar {...props} />;\r\n\r\nTopToolbar.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n};\r\n\r\nexport default TopToolbar;\r\nconst PREFIX = 'RaTopToolbar';\r\n\r\nconst StyledToolbar = styled(Toolbar, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-end',\r\n    gap: theme.spacing(1),\r\n    whiteSpace: 'nowrap',\r\n    flex: '0 1 auto',\r\n    minHeight: theme.spacing(8),\r\n    [theme.breakpoints.up('md')]: {\r\n        padding: theme.spacing(0.5),\r\n        paddingTop: theme.spacing(1),\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n        flex: '0 1 100%',\r\n        padding: theme.spacing(0.5),\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n", "import { useContext } from 'react';\r\nimport { UserMenuContext } from './UserMenuContext';\r\n\r\n/**\r\n * A hook to retrieve the user menu context, which provides access to a function for closing the user menu.\r\n * @returns {UserMenuContextValue}\r\n *\r\n * @example\r\n * import { Logout, MenuItemLink, UserMenu, useUserMenu } from 'react-admin';\r\n *\r\n * const ConfigurationMenu = () => {\r\n *     const { onClose } = useUserMenu();\r\n *     return (\r\n *         <MenuItemLink\r\n *             to=\"/configuration\"\r\n *             primaryText=\"pos.configuration\"\r\n *             leftIcon={<SettingsIcon />}\r\n *             sidebarIsOpen\r\n *             onClick={onClose}\r\n *         />\r\n *     );\r\n * };\r\n *\r\n * export const MyUserMenu = () => (\r\n *     <UserMenu>\r\n *         <ConfigurationMenu />\r\n *         <Logout />\r\n *     </UserMenu>\r\n * );\r\n */\r\nexport const useUserMenu = () => useContext(UserMenuContext);\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ActionDelete from '@mui/icons-material/Delete';\r\nimport { alpha } from '@mui/material/styles';\r\nimport {\r\n    useDeleteMany,\r\n    useRefresh,\r\n    useNotify,\r\n    useResourceContext,\r\n    useListContext,\r\n    RaRecord,\r\n    DeleteManyParams,\r\n} from 'ra-core';\r\n\r\nimport { Button, ButtonProps } from './Button';\r\nimport { BulkActionProps } from '../types';\r\nimport { UseMutationOptions } from 'react-query';\r\n\r\nexport const BulkDeleteWithUndoButton = (\r\n    props: BulkDeleteWithUndoButtonProps\r\n) => {\r\n    const {\r\n        label = 'ra.action.delete',\r\n        icon = defaultIcon,\r\n        onClick,\r\n        mutationOptions = {},\r\n        ...rest\r\n    } = props;\r\n    const { meta: mutationMeta, ...otherMutationOptions } = mutationOptions;\r\n    const { selectedIds, onUnselectItems } = useListContext(props);\r\n\r\n    const notify = useNotify();\r\n    const resource = useResourceContext(props);\r\n    const refresh = useRefresh();\r\n    const [deleteMany, { isLoading }] = useDeleteMany();\r\n\r\n    const handleClick = e => {\r\n        deleteMany(\r\n            resource,\r\n            { ids: selectedIds, meta: mutationMeta },\r\n            {\r\n                onSuccess: () => {\r\n                    notify('ra.notification.deleted', {\r\n                        type: 'info',\r\n                        messageArgs: { smart_count: selectedIds.length },\r\n                        undoable: true,\r\n                    });\r\n                    onUnselectItems();\r\n                },\r\n                onError: (error: Error) => {\r\n                    notify(\r\n                        typeof error === 'string'\r\n                            ? error\r\n                            : error.message || 'ra.notification.http_error',\r\n                        {\r\n                            type: 'error',\r\n                            messageArgs: {\r\n                                _:\r\n                                    typeof error === 'string'\r\n                                        ? error\r\n                                        : error && error.message\r\n                                        ? error.message\r\n                                        : undefined,\r\n                            },\r\n                        }\r\n                    );\r\n                    refresh();\r\n                },\r\n                mutationMode: 'undoable',\r\n                ...otherMutationOptions,\r\n            }\r\n        );\r\n        if (typeof onClick === 'function') {\r\n            onClick(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <StyledButton\r\n            onClick={handleClick}\r\n            label={label}\r\n            disabled={isLoading}\r\n            {...sanitizeRestProps(rest)}\r\n        >\r\n            {icon}\r\n        </StyledButton>\r\n    );\r\n};\r\n\r\nconst defaultIcon = <ActionDelete />;\r\n\r\nconst sanitizeRestProps = ({\r\n    classes,\r\n    filterValues,\r\n    label,\r\n    selectedIds,\r\n    ...rest\r\n}: Omit<BulkDeleteWithUndoButtonProps, 'resource' | 'icon'>) => rest;\r\n\r\nexport interface BulkDeleteWithUndoButtonProps<\r\n    RecordType extends RaRecord = any,\r\n    MutationOptionsError = unknown\r\n> extends BulkActionProps,\r\n        ButtonProps {\r\n    icon?: ReactElement;\r\n    mutationOptions?: UseMutationOptions<\r\n        RecordType,\r\n        MutationOptionsError,\r\n        DeleteManyParams<RecordType>\r\n    > & { meta?: any };\r\n}\r\n\r\nconst PREFIX = 'RaBulkDeleteWithUndoButton';\r\n\r\nconst StyledButton = styled(Button, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    color: theme.palette.error.main,\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.error.main, 0.12),\r\n        // Reset on mouse devices\r\n        '@media (hover: none)': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n}));\r\n\r\nBulkDeleteWithUndoButton.propTypes = {\r\n    label: PropTypes.string,\r\n    resource: PropTypes.string,\r\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\r\n    icon: PropTypes.element,\r\n};\r\n", "import * as React from 'react';\r\nimport { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DownloadIcon from '@mui/icons-material/GetApp';\r\nimport {\r\n    fetchRelatedRecords,\r\n    useDataProvider,\r\n    useNotify,\r\n    Identifier,\r\n    Exporter,\r\n    useListContext,\r\n} from 'ra-core';\r\n\r\nimport { Button, ButtonProps } from './Button';\r\n\r\n/**\r\n * Export the selected rows\r\n *\r\n * To be used inside the <List bulkActionButtons> prop.\r\n *\r\n * @example // basic usage\r\n * import * as React from 'react';\r\n * import { Fragment } from 'react';\r\n * import { BulkDeleteButton, BulkExportButton } from 'react-admin';\r\n *\r\n * const PostBulkActionButtons = () => (\r\n *     <Fragment>\r\n *         <BulkExportButton />\r\n *         <BulkDeleteButton />\r\n *     </Fragment>\r\n * );\r\n *\r\n * export const PostList = () => (\r\n *     <List bulkActionButtons={<PostBulkActionButtons />}>\r\n *         ...\r\n *     </List>\r\n * );\r\n */\r\nexport const BulkExportButton = (props: BulkExportButtonProps) => {\r\n    const {\r\n        onClick,\r\n        label = 'ra.action.export',\r\n        icon = defaultIcon,\r\n        exporter: customExporter,\r\n        meta,\r\n        ...rest\r\n    } = props;\r\n    const {\r\n        exporter: exporterFromContext,\r\n        resource,\r\n        selectedIds,\r\n    } = useListContext(props);\r\n    const exporter = customExporter || exporterFromContext;\r\n    const dataProvider = useDataProvider();\r\n    const notify = useNotify();\r\n    const handleClick = useCallback(\r\n        event => {\r\n            exporter &&\r\n                dataProvider\r\n                    .getMany(resource, { ids: selectedIds, meta })\r\n                    .then(({ data }) =>\r\n                        exporter(\r\n                            data,\r\n                            fetchRelatedRecords(dataProvider),\r\n                            dataProvider,\r\n                            resource\r\n                        )\r\n                    )\r\n                    .catch(error => {\r\n                        console.error(error);\r\n                        notify('ra.notification.http_error', {\r\n                            type: 'error',\r\n                        });\r\n                    });\r\n            if (typeof onClick === 'function') {\r\n                onClick(event);\r\n            }\r\n        },\r\n        [dataProvider, exporter, notify, onClick, resource, selectedIds, meta]\r\n    );\r\n\r\n    return (\r\n        <Button\r\n            onClick={handleClick}\r\n            label={label}\r\n            {...sanitizeRestProps(rest)}\r\n        >\r\n            {icon}\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst defaultIcon = <DownloadIcon />;\r\n\r\nconst sanitizeRestProps = ({\r\n    filterValues,\r\n    selectedIds,\r\n    resource,\r\n    ...rest\r\n}: Omit<BulkExportButtonProps, 'exporter' | 'label' | 'meta'>) => rest;\r\n\r\ninterface Props {\r\n    exporter?: Exporter;\r\n    filterValues?: any;\r\n    icon?: JSX.Element;\r\n    label?: string;\r\n    onClick?: (e: Event) => void;\r\n    selectedIds?: Identifier[];\r\n    resource?: string;\r\n    meta?: any;\r\n}\r\n\r\nexport type BulkExportButtonProps = Props & ButtonProps;\r\n\r\nBulkExportButton.propTypes = {\r\n    exporter: PropTypes.func,\r\n    label: PropTypes.string,\r\n    resource: PropTypes.string,\r\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\r\n    icon: PropTypes.element,\r\n    meta: PropTypes.any,\r\n};\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    BulkUpdateWithConfirmButton,\r\n    BulkUpdateWithConfirmButtonProps,\r\n} from './BulkUpdateWithConfirmButton';\r\nimport {\r\n    BulkUpdateWithUndoButton,\r\n    BulkUpdateWithUndoButtonProps,\r\n} from './BulkUpdateWithUndoButton';\r\nimport { MutationMode } from 'ra-core';\r\n\r\n/**\r\n * Updates the selected rows.\r\n *\r\n * To be used inside the <List bulkActionButtons> prop (where it's enabled by default).\r\n *\r\n * @example // basic usage\r\n * import * as React from 'react';\r\n * import { Fragment } from 'react';\r\n * import { BulkUpdateButton, BulkExportButton } from 'react-admin';\r\n *\r\n * const PostBulkActionButtons = () => (\r\n *     <Fragment>\r\n *         <BulkExportButton />\r\n *         <BulkUpdateButton label=\"Reset Views\" data={{ views: 0 }} />\r\n *     </Fragment>\r\n * );\r\n *\r\n * export const PostList = () => (\r\n *     <List bulkActionButtons={<PostBulkActionButtons />}>\r\n *         ...\r\n *     </List>\r\n * );\r\n */\r\nexport const BulkUpdateButton = (props: BulkUpdateButtonProps) => {\r\n    const { mutationMode = 'undoable', data = defaultData, ...rest } = props;\r\n\r\n    return mutationMode === 'undoable' ? (\r\n        <BulkUpdateWithUndoButton data={data} {...rest} />\r\n    ) : (\r\n        <BulkUpdateWithConfirmButton\r\n            mutationMode={mutationMode}\r\n            data={data}\r\n            {...rest}\r\n        />\r\n    );\r\n};\r\n\r\ninterface Props {\r\n    mutationMode?: MutationMode;\r\n}\r\n\r\nexport type BulkUpdateButtonProps = Props &\r\n    (BulkUpdateWithUndoButtonProps | BulkUpdateWithConfirmButtonProps);\r\n\r\nBulkUpdateButton.propTypes = {\r\n    label: PropTypes.string,\r\n    resource: PropTypes.string,\r\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\r\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\r\n    icon: PropTypes.element,\r\n};\r\n\r\nconst defaultData = [];\r\n", "import * as React from 'react';\r\nimport { Fragment, useState, ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ActionUpdate from '@mui/icons-material/Update';\r\nimport inflection from 'inflection';\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport {\r\n    useListContext,\r\n    useTranslate,\r\n    useUpdateMany,\r\n    useRefresh,\r\n    useNotify,\r\n    useUnselectAll,\r\n    useResourceContext,\r\n    MutationMode,\r\n    RaRecord,\r\n    UpdateManyParams,\r\n} from 'ra-core';\r\n\r\nimport { Confirm } from '../layout';\r\nimport { Button, ButtonProps } from './Button';\r\nimport { BulkActionProps } from '../types';\r\nimport { UseMutationOptions } from 'react-query';\r\n\r\nexport const BulkUpdateWithConfirmButton = (\r\n    props: BulkUpdateWithConfirmButtonProps\r\n) => {\r\n    const notify = useNotify();\r\n    const refresh = useRefresh();\r\n    const translate = useTranslate();\r\n    const resource = useResourceContext(props);\r\n    const unselectAll = useUnselectAll(resource);\r\n    const [isOpen, setOpen] = useState(false);\r\n    const { selectedIds } = useListContext(props);\r\n\r\n    const {\r\n        confirmTitle = 'ra.message.bulk_update_title',\r\n        confirmContent = 'ra.message.bulk_update_content',\r\n        data,\r\n        icon = defaultIcon,\r\n        label = 'ra.action.update',\r\n        mutationMode = 'pessimistic',\r\n        onClick,\r\n        onSuccess = () => {\r\n            refresh();\r\n            notify('ra.notification.updated', {\r\n                type: 'info',\r\n                messageArgs: { smart_count: selectedIds.length },\r\n                undoable: mutationMode === 'undoable',\r\n            });\r\n            unselectAll();\r\n            setOpen(false);\r\n        },\r\n        onError = (error: Error | string) => {\r\n            notify(\r\n                typeof error === 'string'\r\n                    ? error\r\n                    : error.message || 'ra.notification.http_error',\r\n                {\r\n                    type: 'error',\r\n                    messageArgs: {\r\n                        _:\r\n                            typeof error === 'string'\r\n                                ? error\r\n                                : error && error.message\r\n                                ? error.message\r\n                                : undefined,\r\n                    },\r\n                }\r\n            );\r\n            setOpen(false);\r\n        },\r\n        mutationOptions = {},\r\n        ...rest\r\n    } = props;\r\n    const { meta: mutationMeta, ...otherMutationOptions } = mutationOptions;\r\n\r\n    const [updateMany, { isLoading }] = useUpdateMany(\r\n        resource,\r\n        { ids: selectedIds, data, meta: mutationMeta },\r\n        {\r\n            onSuccess,\r\n            onError,\r\n            mutationMode,\r\n            ...otherMutationOptions,\r\n        }\r\n    );\r\n\r\n    const handleClick = e => {\r\n        setOpen(true);\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleUpdate = e => {\r\n        updateMany();\r\n\r\n        if (typeof onClick === 'function') {\r\n            onClick(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <StyledButton\r\n                onClick={handleClick}\r\n                label={label}\r\n                {...sanitizeRestProps(rest)}\r\n            >\r\n                {icon}\r\n            </StyledButton>\r\n            <Confirm\r\n                isOpen={isOpen}\r\n                loading={isLoading}\r\n                title={confirmTitle}\r\n                content={confirmContent}\r\n                translateOptions={{\r\n                    smart_count: selectedIds.length,\r\n                    name: translate(`resources.${resource}.forcedCaseName`, {\r\n                        smart_count: selectedIds.length,\r\n                        _: inflection.humanize(\r\n                            translate(`resources.${resource}.name`, {\r\n                                smart_count: selectedIds.length,\r\n                                _: inflection.inflect(\r\n                                    resource,\r\n                                    selectedIds.length\r\n                                ),\r\n                            }),\r\n                            true\r\n                        ),\r\n                    }),\r\n                }}\r\n                onConfirm={handleUpdate}\r\n                onClose={handleDialogClose}\r\n            />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst sanitizeRestProps = ({\r\n    filterValues,\r\n    label,\r\n    onSuccess,\r\n    onError,\r\n    ...rest\r\n}: Omit<\r\n    BulkUpdateWithConfirmButtonProps,\r\n    'resource' | 'selectedIds' | 'icon' | 'data'\r\n>) => rest;\r\n\r\nexport interface BulkUpdateWithConfirmButtonProps<\r\n    RecordType extends RaRecord = any,\r\n    MutationOptionsError = unknown\r\n> extends BulkActionProps,\r\n        ButtonProps {\r\n    confirmContent?: React.ReactNode;\r\n    confirmTitle?: React.ReactNode;\r\n    icon?: ReactElement;\r\n    data: any;\r\n    onSuccess?: () => void;\r\n    onError?: (error: any) => void;\r\n    mutationMode?: MutationMode;\r\n    mutationOptions?: UseMutationOptions<\r\n        RecordType,\r\n        MutationOptionsError,\r\n        UpdateManyParams<RecordType>\r\n    > & { meta?: any };\r\n}\r\n\r\nBulkUpdateWithConfirmButton.propTypes = {\r\n    confirmTitle: PropTypes.node,\r\n    confirmContent: PropTypes.node,\r\n    label: PropTypes.string,\r\n    resource: PropTypes.string,\r\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\r\n    icon: PropTypes.element,\r\n    data: PropTypes.any.isRequired,\r\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\r\n};\r\n\r\nconst PREFIX = 'RaBulkUpdateWithConfirmButton';\r\n\r\nconst StyledButton = styled(Button, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n        // Reset on mouse devices\r\n        '@media (hover: none)': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n}));\r\n\r\nconst defaultIcon = <ActionUpdate />;\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ActionUpdate from '@mui/icons-material/Update';\r\nimport { alpha } from '@mui/material/styles';\r\nimport {\r\n    useUpdateMany,\r\n    useRefresh,\r\n    useNotify,\r\n    useUnselectAll,\r\n    useResourceContext,\r\n    useListContext,\r\n    RaRecord,\r\n    UpdateManyParams,\r\n} from 'ra-core';\r\nimport { UseMutationOptions } from 'react-query';\r\n\r\nimport { Button, ButtonProps } from './Button';\r\nimport { BulkActionProps } from '../types';\r\n\r\nexport const BulkUpdateWithUndoButton = (\r\n    props: BulkUpdateWithUndoButtonProps\r\n) => {\r\n    const { selectedIds } = useListContext(props);\r\n\r\n    const notify = useNotify();\r\n    const resource = useResourceContext(props);\r\n    const unselectAll = useUnselectAll(resource);\r\n    const refresh = useRefresh();\r\n\r\n    const {\r\n        data,\r\n        label = 'ra.action.update',\r\n        icon = defaultIcon,\r\n        onClick,\r\n        onSuccess = () => {\r\n            notify('ra.notification.updated', {\r\n                type: 'info',\r\n                messageArgs: { smart_count: selectedIds.length },\r\n                undoable: true,\r\n            });\r\n            unselectAll();\r\n            refresh();\r\n        },\r\n        onError = (error: Error | string) => {\r\n            notify(\r\n                typeof error === 'string'\r\n                    ? error\r\n                    : error.message || 'ra.notification.http_error',\r\n                {\r\n                    type: 'error',\r\n                    messageArgs: {\r\n                        _:\r\n                            typeof error === 'string'\r\n                                ? error\r\n                                : error && error.message\r\n                                ? error.message\r\n                                : undefined,\r\n                    },\r\n                }\r\n            );\r\n            refresh();\r\n        },\r\n        mutationOptions = {},\r\n        ...rest\r\n    } = props;\r\n    const { meta: mutationMeta, ...otherMutationOptions } = mutationOptions;\r\n\r\n    const [updateMany, { isLoading }] = useUpdateMany(\r\n        resource,\r\n        { ids: selectedIds, data, meta: mutationMeta },\r\n        {\r\n            onSuccess,\r\n            onError,\r\n            mutationMode: 'undoable',\r\n            ...otherMutationOptions,\r\n        }\r\n    );\r\n\r\n    const handleClick = e => {\r\n        updateMany();\r\n        if (typeof onClick === 'function') {\r\n            onClick(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <StyledButton\r\n            onClick={handleClick}\r\n            label={label}\r\n            disabled={isLoading}\r\n            {...sanitizeRestProps(rest)}\r\n        >\r\n            {icon}\r\n        </StyledButton>\r\n    );\r\n};\r\n\r\nconst defaultIcon = <ActionUpdate />;\r\n\r\nconst sanitizeRestProps = ({\r\n    filterValues,\r\n    label,\r\n    selectedIds,\r\n    onSuccess,\r\n    onError,\r\n    ...rest\r\n}: Omit<BulkUpdateWithUndoButtonProps, 'resource' | 'icon' | 'data'>) => rest;\r\n\r\nexport interface BulkUpdateWithUndoButtonProps<\r\n    RecordType extends RaRecord = any,\r\n    MutationOptionsError = unknown\r\n> extends BulkActionProps,\r\n        ButtonProps {\r\n    icon?: ReactElement;\r\n    data: any;\r\n    onSuccess?: () => void;\r\n    onError?: (error: any) => void;\r\n    mutationOptions?: UseMutationOptions<\r\n        RecordType,\r\n        MutationOptionsError,\r\n        UpdateManyParams<RecordType>\r\n    > & { meta?: any };\r\n}\r\n\r\nBulkUpdateWithUndoButton.propTypes = {\r\n    label: PropTypes.string,\r\n    resource: PropTypes.string,\r\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\r\n    icon: PropTypes.element,\r\n    data: PropTypes.any.isRequired,\r\n};\r\n\r\nconst PREFIX = 'RaBulkUpdateWithUndoButton';\r\n\r\nconst StyledButton = styled(Button, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n        // Reset on mouse devices\r\n        '@media (hover: none)': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n}));\r\n", "import * as React from 'react';\r\nimport { ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { UseMutationOptions } from 'react-query';\r\nimport {\r\n    RaRecord,\r\n    MutationMode,\r\n    DeleteParams,\r\n    useRecordContext,\r\n    useSaveContext,\r\n    SaveContextValue,\r\n    RedirectionSideEffect,\r\n} from 'ra-core';\r\n\r\nimport { ButtonProps } from './Button';\r\nimport { DeleteWithUndoButton } from './DeleteWithUndoButton';\r\nimport { DeleteWithConfirmButton } from './DeleteWithConfirmButton';\r\n\r\n/**\r\n * Button used to delete a single record. Added by default by the <Toolbar> of edit and show views.\r\n *\r\n * @typedef {Object} Props The props you can use (other props are injected if you used it in the <Toolbar>)\r\n * @prop {boolean} mutationMode Either 'pessimistic', 'optimistic' or 'undoable'. Determine whether the deletion uses an undo button in a notification or a confirmation dialog. Defaults to 'undoable'.\r\n * @prop {Object} record The current resource record\r\n * @prop {string} className\r\n * @prop {string} label Button label. Defaults to 'ra.action.delete, translated.\r\n * @prop {boolean} disabled Disable the button.\r\n * @prop {string} variant Material UI variant for the button. Defaults to 'contained'.\r\n * @prop {ReactElement} icon Override the icon. Defaults to the Delete icon from Material UI.\r\n *\r\n * @param {Props} props\r\n *\r\n * @example Usage in the <TopToolbar> of an <Edit> form\r\n *\r\n * import * as React from 'react';\r\n * import { Edit, DeleteButton, TopToolbar } from 'react-admin';\r\n *\r\n * const EditActions = props => {\r\n *     const { data, resource } = props;\r\n *     return (\r\n *         <TopToolbar>\r\n *             <DeleteButton\r\n *                 mutationMode=\"pessimistic\" // Renders the <DeleteWithConfirmButton>\r\n *             />\r\n *         </TopToolbar>\r\n *     );\r\n * };\r\n *\r\n * const Edit = props => {\r\n *     return <Edit actions={<EditActions />} {...props} />;\r\n * };\r\n */\r\nexport const DeleteButton = <RecordType extends RaRecord = any>(\r\n    props: DeleteButtonProps<RecordType>\r\n) => {\r\n    const { mutationMode, ...rest } = props;\r\n    const record = useRecordContext(props);\r\n    const saveContext = useSaveContext(props);\r\n    if (!record || record.id == null) {\r\n        return null;\r\n    }\r\n\r\n    const finalMutationMode = mutationMode\r\n        ? mutationMode\r\n        : saveContext?.mutationMode\r\n        ? saveContext.mutationMode\r\n        : 'undoable';\r\n\r\n    return finalMutationMode === 'undoable' ? (\r\n        // @ts-ignore I looked for the error for one hour without finding it\r\n        <DeleteWithUndoButton<RecordType> record={record} {...rest} />\r\n    ) : (\r\n        <DeleteWithConfirmButton<RecordType>\r\n            // @ts-ignore I looked for the error for one hour without finding it\r\n            mutationMode={finalMutationMode}\r\n            record={record}\r\n            {...rest}\r\n        />\r\n    );\r\n};\r\n\r\nexport interface DeleteButtonProps<\r\n    RecordType extends RaRecord = any,\r\n    MutationOptionsError = unknown\r\n> extends ButtonProps,\r\n        SaveContextValue {\r\n    confirmTitle?: React.ReactNode;\r\n    confirmContent?: React.ReactNode;\r\n    icon?: ReactElement;\r\n    mutationMode?: MutationMode;\r\n    mutationOptions?: UseMutationOptions<\r\n        RecordType,\r\n        MutationOptionsError,\r\n        DeleteParams<RecordType>\r\n    >;\r\n    record?: RecordType;\r\n    redirect?: RedirectionSideEffect;\r\n    resource?: string;\r\n}\r\n\r\nDeleteButton.propTypes = {\r\n    label: PropTypes.string,\r\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\r\n    record: PropTypes.any,\r\n    // @ts-ignore\r\n    redirect: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.func,\r\n    ]),\r\n    resource: PropTypes.string,\r\n    icon: PropTypes.element,\r\n};\r\n", "import * as React from 'react';\r\nimport { ReactElement, ReactEventHandler } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ActionDelete from '@mui/icons-material/Delete';\r\nimport clsx from 'clsx';\r\nimport { UseMutationOptions } from 'react-query';\r\nimport {\r\n    RaRecord,\r\n    useDeleteWithUndoController,\r\n    DeleteParams,\r\n    useRecordContext,\r\n    useResourceContext,\r\n    RedirectionSideEffect,\r\n} from 'ra-core';\r\n\r\nimport { Button, ButtonProps } from './Button';\r\n\r\nexport const DeleteWithUndoButton = <RecordType extends RaRecord = any>(\r\n    props: DeleteWithUndoButtonProps<RecordType>\r\n) => {\r\n    const {\r\n        label = 'ra.action.delete',\r\n        className,\r\n        icon = defaultIcon,\r\n        onClick,\r\n        redirect = 'list',\r\n        mutationOptions,\r\n        color = 'error',\r\n        ...rest\r\n    } = props;\r\n\r\n    const record = useRecordContext(props);\r\n    const resource = useResourceContext(props);\r\n    const { isLoading, handleDelete } = useDeleteWithUndoController({\r\n        record,\r\n        resource,\r\n        redirect,\r\n        onClick,\r\n        mutationOptions,\r\n    });\r\n\r\n    return (\r\n        <Button\r\n            onClick={handleDelete}\r\n            disabled={isLoading}\r\n            label={label}\r\n            className={clsx('ra-delete-button', className)}\r\n            key=\"button\"\r\n            color={color}\r\n            {...rest}\r\n        >\r\n            {icon}\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst defaultIcon = <ActionDelete />;\r\n\r\nexport interface DeleteWithUndoButtonProps<\r\n    RecordType extends RaRecord = any,\r\n    MutationOptionsError = unknown\r\n> extends ButtonProps {\r\n    icon?: ReactElement;\r\n    onClick?: ReactEventHandler<any>;\r\n    mutationOptions?: UseMutationOptions<\r\n        RecordType,\r\n        MutationOptionsError,\r\n        DeleteParams<RecordType>\r\n    >;\r\n    record?: RecordType;\r\n    redirect?: RedirectionSideEffect;\r\n    resource?: string;\r\n}\r\n\r\nDeleteWithUndoButton.propTypes = {\r\n    className: PropTypes.string,\r\n    label: PropTypes.string,\r\n    record: PropTypes.any,\r\n    redirect: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.func,\r\n    ]),\r\n    resource: PropTypes.string,\r\n    icon: PropTypes.element,\r\n};\r\n", "import React, { Fragment, ReactEventHandler, ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ActionDelete from '@mui/icons-material/Delete';\r\nimport clsx from 'clsx';\r\nimport inflection from 'inflection';\r\nimport { UseMutationOptions } from 'react-query';\r\nimport {\r\n    MutationMode,\r\n    RaRecord,\r\n    DeleteParams,\r\n    useDeleteWithConfirmController,\r\n    useRecordContext,\r\n    useResourceContext,\r\n    useTranslate,\r\n    RedirectionSideEffect,\r\n} from 'ra-core';\r\n\r\nimport { Confirm } from '../layout';\r\nimport { Button, ButtonProps } from './Button';\r\n\r\nexport const DeleteWithConfirmButton = <RecordType extends RaRecord = any>(\r\n    props: DeleteWithConfirmButtonProps<RecordType>\r\n) => {\r\n    const {\r\n        className,\r\n        confirmTitle = 'ra.message.delete_title',\r\n        confirmContent = 'ra.message.delete_content',\r\n        icon = defaultIcon,\r\n        label = 'ra.action.delete',\r\n        mutationMode = 'pessimistic',\r\n        onClick,\r\n        redirect = 'list',\r\n        translateOptions = {},\r\n        mutationOptions,\r\n        color = 'error',\r\n        ...rest\r\n    } = props;\r\n    const translate = useTranslate();\r\n    const record = useRecordContext(props);\r\n    const resource = useResourceContext(props);\r\n\r\n    const {\r\n        open,\r\n        isLoading,\r\n        handleDialogOpen,\r\n        handleDialogClose,\r\n        handleDelete,\r\n    } = useDeleteWithConfirmController({\r\n        record,\r\n        redirect,\r\n        mutationMode,\r\n        onClick,\r\n        mutationOptions,\r\n        resource,\r\n    });\r\n\r\n    return (\r\n        <Fragment>\r\n            <Button\r\n                onClick={handleDialogOpen}\r\n                label={label}\r\n                className={clsx('ra-delete-button', className)}\r\n                key=\"button\"\r\n                color={color}\r\n                {...rest}\r\n            >\r\n                {icon}\r\n            </Button>\r\n            <Confirm\r\n                isOpen={open}\r\n                loading={isLoading}\r\n                title={confirmTitle}\r\n                content={confirmContent}\r\n                translateOptions={{\r\n                    name: translate(`resources.${resource}.forcedCaseName`, {\r\n                        smart_count: 1,\r\n                        _: inflection.humanize(\r\n                            translate(`resources.${resource}.name`, {\r\n                                smart_count: 1,\r\n                                _: inflection.singularize(resource),\r\n                            }),\r\n                            true\r\n                        ),\r\n                    }),\r\n                    id: record.id,\r\n                    ...translateOptions,\r\n                }}\r\n                onConfirm={handleDelete}\r\n                onClose={handleDialogClose}\r\n            />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst defaultIcon = <ActionDelete />;\r\n\r\nexport interface DeleteWithConfirmButtonProps<\r\n    RecordType extends RaRecord = any,\r\n    MutationOptionsError = unknown\r\n> extends ButtonProps {\r\n    confirmTitle?: React.ReactNode;\r\n    confirmContent?: React.ReactNode;\r\n    icon?: ReactElement;\r\n    mutationMode?: MutationMode;\r\n    onClick?: ReactEventHandler<any>;\r\n    // May be injected by Toolbar - sanitized in Button\r\n    translateOptions?: object;\r\n    mutationOptions?: UseMutationOptions<\r\n        RecordType,\r\n        MutationOptionsError,\r\n        DeleteParams<RecordType>\r\n    >;\r\n    record?: RecordType;\r\n    redirect?: RedirectionSideEffect;\r\n    resource?: string;\r\n}\r\n\r\nDeleteWithConfirmButton.propTypes = {\r\n    className: PropTypes.string,\r\n    confirmTitle: PropTypes.node,\r\n    confirmContent: PropTypes.node,\r\n    label: PropTypes.string,\r\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\r\n    record: PropTypes.any,\r\n    redirect: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.func,\r\n    ]),\r\n    resource: PropTypes.string,\r\n    icon: PropTypes.element,\r\n    translateOptions: PropTypes.object,\r\n};\r\n", "import * as React from 'react';\r\nimport { ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { styled } from '@mui/material/styles';\r\nimport ContentCreate from '@mui/icons-material/Create';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    RaRecord,\r\n    useResourceContext,\r\n    useRecordContext,\r\n    useCreatePath,\r\n} from 'ra-core';\r\n\r\nimport { Button, ButtonProps } from './Button';\r\n\r\n/**\r\n * Opens the Edit view for the current record.\r\n *\r\n * Reads the record and resource from the context.\r\n *\r\n * @example // basic usage\r\n * import { EditButton } from 'react-admin';\r\n *\r\n * const CommentEditButton = () => (\r\n *     <EditButton label=\"Edit comment\" />\r\n * );\r\n */\r\nexport const EditButton = <RecordType extends RaRecord = any>(\r\n    props: EditButtonProps<RecordType>\r\n) => {\r\n    const {\r\n        icon = defaultIcon,\r\n        label = 'ra.action.edit',\r\n        scrollToTop = true,\r\n        className,\r\n        ...rest\r\n    } = props;\r\n    const resource = useResourceContext(props);\r\n    const record = useRecordContext(props);\r\n    const createPath = useCreatePath();\r\n    if (!record) return null;\r\n    return (\r\n        <StyledButton\r\n            component={Link}\r\n            to={createPath({ type: 'edit', resource, id: record.id })}\r\n            state={scrollStates[String(scrollToTop)]}\r\n            label={label}\r\n            onClick={stopPropagation}\r\n            className={clsx(EditButtonClasses.root, className)}\r\n            {...(rest as any)}\r\n        >\r\n            {icon}\r\n        </StyledButton>\r\n    );\r\n};\r\n\r\n// avoids using useMemo to get a constant value for the link state\r\nconst scrollStates = {\r\n    true: { _scrollToTop: true },\r\n    false: {},\r\n};\r\n\r\nconst defaultIcon = <ContentCreate />;\r\n\r\n// useful to prevent click bubbling in a datagrid with rowClick\r\nconst stopPropagation = e => e.stopPropagation();\r\n\r\ninterface Props<RecordType extends RaRecord = any> {\r\n    icon?: ReactElement;\r\n    label?: string;\r\n    record?: RecordType;\r\n    resource?: string;\r\n    scrollToTop?: boolean;\r\n}\r\n\r\nexport type EditButtonProps<RecordType extends RaRecord = any> = Props<\r\n    RecordType\r\n> &\r\n    ButtonProps;\r\n\r\nEditButton.propTypes = {\r\n    icon: PropTypes.element,\r\n    label: PropTypes.string,\r\n    record: PropTypes.any,\r\n    scrollToTop: PropTypes.bool,\r\n};\r\n\r\nconst PREFIX = 'RaEditButton';\r\n\r\nexport const EditButtonClasses = {\r\n    root: `${PREFIX}-root`,\r\n};\r\n\r\nconst StyledButton = styled(Button, {\r\n    name: PREFIX,\r\n    overridesResolver: (_props, styles) => styles.root,\r\n})({});\r\n", "import * as React from 'react';\r\nimport { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DownloadIcon from '@mui/icons-material/GetApp';\r\nimport {\r\n    fetchRelatedRecords,\r\n    useDataProvider,\r\n    useNotify,\r\n    useListContext,\r\n    SortPayload,\r\n    Exporter,\r\n    FilterPayload,\r\n    useResourceContext,\r\n} from 'ra-core';\r\nimport { Button, ButtonProps } from './Button';\r\n\r\nexport const ExportButton = (props: ExportButtonProps) => {\r\n    const {\r\n        maxResults = 1000,\r\n        onClick,\r\n        label = 'ra.action.export',\r\n        icon = defaultIcon,\r\n        exporter: customExporter,\r\n        meta,\r\n        ...rest\r\n    } = props;\r\n    const {\r\n        filter,\r\n        filterValues,\r\n        sort,\r\n        exporter: exporterFromContext,\r\n        total,\r\n    } = useListContext(props);\r\n    const resource = useResourceContext(props);\r\n    const exporter = customExporter || exporterFromContext;\r\n    const dataProvider = useDataProvider();\r\n    const notify = useNotify();\r\n    const handleClick = useCallback(\r\n        event => {\r\n            dataProvider\r\n                .getList(resource, {\r\n                    sort,\r\n                    filter: filter\r\n                        ? { ...filterValues, ...filter }\r\n                        : filterValues,\r\n                    pagination: { page: 1, perPage: maxResults },\r\n                    meta,\r\n                })\r\n                .then(\r\n                    ({ data }) =>\r\n                        exporter &&\r\n                        exporter(\r\n                            data,\r\n                            fetchRelatedRecords(dataProvider),\r\n                            dataProvider,\r\n                            resource\r\n                        )\r\n                )\r\n                .catch(error => {\r\n                    console.error(error);\r\n                    notify('ra.notification.http_error', { type: 'error' });\r\n                });\r\n            if (typeof onClick === 'function') {\r\n                onClick(event);\r\n            }\r\n        },\r\n        [\r\n            dataProvider,\r\n            exporter,\r\n            filter,\r\n            filterValues,\r\n            maxResults,\r\n            notify,\r\n            onClick,\r\n            resource,\r\n            sort,\r\n            meta,\r\n        ]\r\n    );\r\n\r\n    return (\r\n        <Button\r\n            onClick={handleClick}\r\n            label={label}\r\n            disabled={total === 0}\r\n            {...sanitizeRestProps(rest)}\r\n        >\r\n            {icon}\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst defaultIcon = <DownloadIcon />;\r\n\r\nconst sanitizeRestProps = ({\r\n    filterValues,\r\n    resource,\r\n    ...rest\r\n}: Omit<\r\n    ExportButtonProps,\r\n    'sort' | 'maxResults' | 'label' | 'exporter' | 'meta'\r\n>) => rest;\r\n\r\ninterface Props {\r\n    exporter?: Exporter;\r\n    filterValues?: FilterPayload;\r\n    icon?: JSX.Element;\r\n    label?: string;\r\n    maxResults?: number;\r\n    onClick?: (e: Event) => void;\r\n    resource?: string;\r\n    sort?: SortPayload;\r\n    meta?: any;\r\n}\r\n\r\nexport type ExportButtonProps = Props & ButtonProps;\r\n\r\nExportButton.propTypes = {\r\n    exporter: PropTypes.func,\r\n    filterValues: PropTypes.object,\r\n    label: PropTypes.string,\r\n    maxResults: PropTypes.number,\r\n    resource: PropTypes.string,\r\n    sort: PropTypes.exact({\r\n        field: PropTypes.string,\r\n        order: PropTypes.string,\r\n    }),\r\n    icon: PropTypes.element,\r\n    meta: PropTypes.any,\r\n};\r\n", "import * as React from 'react';\r\nimport { MouseEvent } from 'react';\r\nimport { IconButton, IconButtonProps, Tooltip } from '@mui/material';\r\nimport { useTranslate } from 'ra-core';\r\n\r\n/**\r\n * An IconButton with a tooltip which ensures the tooltip is closed on click to avoid ghost tooltips\r\n * when the button position changes.\r\n */\r\nexport const IconButtonWithTooltip = ({\r\n    label,\r\n    onClick,\r\n    ...props\r\n}: IconButtonWithTooltipProps) => {\r\n    const translate = useTranslate();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const translatedLabel = translate(label, { _: label });\r\n\r\n    const handleClick = (event: MouseEvent<HTMLButtonElement>) => {\r\n        handleClose();\r\n        onClick(event);\r\n    };\r\n\r\n    return (\r\n        <Tooltip\r\n            title={translatedLabel}\r\n            open={open}\r\n            onOpen={handleOpen}\r\n            onClose={handleClose}\r\n        >\r\n            <IconButton\r\n                aria-label={translatedLabel}\r\n                onClick={handleClick}\r\n                {...props}\r\n            />\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nexport interface IconButtonWithTooltipProps extends IconButtonProps {\r\n    label: string;\r\n}\r\n", "import * as React from 'react';\r\nimport { MouseEvent, useState } from 'react';\r\nimport { useLocaleState, useLocales } from 'ra-core';\r\nimport { Box, Button, Menu, MenuItem, styled } from '@mui/material';\r\nimport LanguageIcon from '@mui/icons-material/Translate';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\n/**\r\n * Language selector. Changes the locale in the app and persists it in\r\n * preferences so that the app opens with the right locale in the future.\r\n *\r\n * Uses i18nProvider.getLocales() to get the list of available locales.\r\n *\r\n * @example\r\n * import { AppBar, TitlePortal, LocalesMenuButton } from 'react-admin';\r\n *\r\n * const MyAppBar = () => (\r\n *     <AppBar>\r\n *         <TitlePortal />\r\n *         <LocalesMenuButton />\r\n *     </AppBar>\r\n * );\r\n */\r\nexport const LocalesMenuButton = (props: LocalesMenuButtonProps) => {\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n    const languages = useLocales({ locales: props.languages });\r\n    const [locale, setLocale] = useLocaleState();\r\n\r\n    const getNameForLocale = (locale: string): string => {\r\n        const language = languages.find(language => language.locale === locale);\r\n        return language ? language.name : '';\r\n    };\r\n\r\n    const changeLocale = (locale: string) => (): void => {\r\n        setLocale(locale);\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleLanguageClick = (event: MouseEvent<HTMLElement>): void => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (): void => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <Root component=\"span\">\r\n            <Button\r\n                color=\"inherit\"\r\n                aria-controls=\"simple-menu\"\r\n                aria-label=\"\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleLanguageClick}\r\n                startIcon={<LanguageIcon />}\r\n                endIcon={<ExpandMoreIcon fontSize=\"small\" />}\r\n            >\r\n                {getNameForLocale(locale)}\r\n            </Button>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {languages.map(language => (\r\n                    <MenuItem\r\n                        key={language.locale}\r\n                        onClick={changeLocale(language.locale)}\r\n                        selected={language.locale === locale}\r\n                    >\r\n                        {language.name}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </Root>\r\n    );\r\n};\r\n\r\nconst PREFIX = 'RaLocalesMenuButton';\r\n\r\nexport const LocalesMenuButtonClasses = {};\r\n\r\nconst Root = styled(Box, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})({});\r\n\r\nexport interface LocalesMenuButtonProps {\r\n    languages?: { locale: string; name: string }[];\r\n}\r\n", "import * as React from 'react';\r\nimport { ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ActionList from '@mui/icons-material/List';\r\nimport { Link } from 'react-router-dom';\r\nimport { useResourceContext, useCreatePath } from 'ra-core';\r\n\r\nimport { Button, ButtonProps } from './Button';\r\n\r\n/**\r\n * Opens the List view of a given resource\r\n *\r\n * @example // basic usage\r\n * import { ListButton } from 'react-admin';\r\n *\r\n * const CommentListButton = () => (\r\n *     <ListButton label=\"Comments\" />\r\n * );\r\n *\r\n * @example // linking back to the list from the Edit view\r\n * import { TopToolbar, ListButton, ShowButton, Edit } from 'react-admin';\r\n *\r\n * const PostEditActions = () => (\r\n *     <TopToolbar>\r\n *         <ListButton />\r\n *         <ShowButton />\r\n *     </TopToolbar>\r\n * );\r\n *\r\n * export const PostEdit = (props) => (\r\n *     <Edit actions={<PostEditActions />} {...props}>\r\n *         ...\r\n *     </Edit>\r\n * );\r\n */\r\nexport const ListButton = (props: ListButtonProps) => {\r\n    const {\r\n        icon = defaultIcon,\r\n        label = 'ra.action.list',\r\n        resource: resourceProp,\r\n        scrollToTop = true,\r\n        ...rest\r\n    } = props;\r\n    const resource = useResourceContext(props);\r\n    const createPath = useCreatePath();\r\n    return (\r\n        <Button\r\n            component={Link}\r\n            to={createPath({ type: 'list', resource })}\r\n            state={scrollStates[String(scrollToTop)]}\r\n            label={label}\r\n            {...(rest as any)}\r\n        >\r\n            {icon}\r\n        </Button>\r\n    );\r\n};\r\n\r\n// avoids using useMemo to get a constant value for the link state\r\nconst scrollStates = {\r\n    true: { _scrollToTop: true },\r\n    false: {},\r\n};\r\n\r\nconst defaultIcon = <ActionList />;\r\n\r\ninterface Props {\r\n    icon?: ReactElement;\r\n    label?: string;\r\n    resource?: string;\r\n    scrollToTop?: boolean;\r\n}\r\n\r\nexport type ListButtonProps = Props & ButtonProps;\r\n\r\nListButton.propTypes = {\r\n    icon: PropTypes.element,\r\n    label: PropTypes.string,\r\n};\r\n", "import * as React from 'react';\r\nimport { ReactElement, MouseEvent, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NavigationRefresh from '@mui/icons-material/Refresh';\r\nimport { useRefresh } from 'ra-core';\r\n\r\nimport { Button, ButtonProps } from './Button';\r\n\r\nexport const RefreshButton = (props: RefreshButtonProps) => {\r\n    const {\r\n        label = 'ra.action.refresh',\r\n        icon = defaultIcon,\r\n        onClick,\r\n        ...rest\r\n    } = props;\r\n    const refresh = useRefresh();\r\n    const handleClick = useCallback(\r\n        event => {\r\n            event.preventDefault();\r\n            refresh();\r\n            if (typeof onClick === 'function') {\r\n                onClick(event);\r\n            }\r\n        },\r\n        [refresh, onClick]\r\n    );\r\n\r\n    return (\r\n        <Button label={label} onClick={handleClick} {...rest}>\r\n            {icon}\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst defaultIcon = <NavigationRefresh />;\r\n\r\ninterface Props {\r\n    label?: string;\r\n    icon?: ReactElement;\r\n    onClick?: (e: MouseEvent) => void;\r\n}\r\n\r\nexport type RefreshButtonProps = Props & ButtonProps;\r\n\r\nRefreshButton.propTypes = {\r\n    label: PropTypes.string,\r\n    icon: PropTypes.element,\r\n    onClick: PropTypes.func,\r\n};\r\n", "import * as React from 'react';\r\nimport { useCallback, ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\r\nimport NavigationRefresh from '@mui/icons-material/Refresh';\r\nimport { useRefresh, useTranslate } from 'ra-core';\r\n\r\nexport const RefreshIconButton = (props: RefreshIconButtonProps) => {\r\n    const {\r\n        label = 'ra.action.refresh',\r\n        icon = defaultIcon,\r\n        onClick,\r\n        className,\r\n        ...rest\r\n    } = props;\r\n    const refresh = useRefresh();\r\n    const translate = useTranslate();\r\n    const handleClick = useCallback(\r\n        event => {\r\n            event.preventDefault();\r\n            refresh();\r\n            if (typeof onClick === 'function') {\r\n                onClick(event);\r\n            }\r\n        },\r\n        [refresh, onClick]\r\n    );\r\n\r\n    return (\r\n        <Tooltip title={label && translate(label, { _: 'Refresh' })}>\r\n            <IconButton\r\n                aria-label={label && translate(label, { _: 'Refresh' })}\r\n                className={className}\r\n                color=\"inherit\"\r\n                onClick={handleClick}\r\n                {...rest}\r\n            >\r\n                {icon}\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nconst defaultIcon = <NavigationRefresh />;\r\n\r\ninterface Props {\r\n    className?: string;\r\n    icon?: ReactElement;\r\n    label?: string;\r\n    onClick?: (e: MouseEvent) => void;\r\n}\r\n\r\nexport type RefreshIconButtonProps = Props & IconButtonProps;\r\n\r\nRefreshIconButton.propTypes = {\r\n    className: PropTypes.string,\r\n    label: PropTypes.string,\r\n    icon: PropTypes.element,\r\n};\r\n", "import * as React from 'react';\r\nimport { MouseEventHandler, ReactElement, useCallback } from 'react';\r\nimport { UseMutationOptions } from 'react-query';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, ButtonProps, CircularProgress } from '@mui/material';\r\nimport ContentSave from '@mui/icons-material/Save';\r\nimport { useFormContext, useFormState } from 'react-hook-form';\r\nimport {\r\n    CreateParams,\r\n    RaRecord,\r\n    TransformData,\r\n    UpdateParams,\r\n    useSaveContext,\r\n    useTranslate,\r\n    warning,\r\n    setSubmissionErrors,\r\n} from 'ra-core';\r\n\r\n/**\r\n * Submit button for resource forms (Edit and Create).\r\n *\r\n * @typedef {Object} Props the props you can use (other props are injected by the <Toolbar>)\r\n * @prop {string} className\r\n * @prop {string} label Button label. Defaults to 'ra.action.save', translated.\r\n * @prop {boolean} disabled Disable the button.\r\n * @prop {string} variant Material UI variant for the button. Defaults to 'contained'.\r\n * @prop {ReactElement} icon\r\n * @prop {function} mutationOptions Object of options passed to react-query.\r\n * @prop {function} transform Callback to execute before calling the dataProvider. Receives the data from the form, must return that transformed data. Can be asynchronous (and return a Promise)\r\n * @prop {boolean} alwaysEnable Force enabling the <SaveButton>. If it's not defined, the `<SaveButton>` will be enabled using `react-hook-form`'s `isValidating` state props and form context's `saving` prop (disabled if isValidating or saving, enabled otherwise).\r\n *\r\n * @param {Props} props\r\n *\r\n * @example // with custom success side effect\r\n *\r\n * const MySaveButton = props => {\r\n *     const notify = useNotify();\r\n *     const redirect = useRedirect();\r\n *     const onSuccess = (response) => {\r\n *         notify(`Post \"${response.data.title}\" saved!`);\r\n *         redirect('/posts');\r\n *     };\r\n *     return <SaveButton {...props} mutationOptions={{ onSuccess }} />;\r\n * }\r\n */\r\nexport const SaveButton = <RecordType extends RaRecord = any>(\r\n    props: SaveButtonProps<RecordType>\r\n) => {\r\n    const {\r\n        color = 'primary',\r\n        icon = defaultIcon,\r\n        invalid,\r\n        label = 'ra.action.save',\r\n        onClick,\r\n        mutationOptions,\r\n        disabled: disabledProp,\r\n        type = 'submit',\r\n        transform,\r\n        variant = 'contained',\r\n        alwaysEnable = false,\r\n        ...rest\r\n    } = props;\r\n    const translate = useTranslate();\r\n    const form = useFormContext();\r\n    const saveContext = useSaveContext();\r\n    const { dirtyFields, isValidating, isSubmitting } = useFormState();\r\n    // useFormState().isDirty might differ from useFormState().dirtyFields (https://github.com/react-hook-form/react-hook-form/issues/4740)\r\n    const isDirty = Object.keys(dirtyFields).length > 0;\r\n    // Use form isDirty, isValidating and form context saving to enable or disable the save button\r\n    // if alwaysEnable is undefined\r\n    const disabled = valueOrDefault(\r\n        alwaysEnable === false || alwaysEnable === undefined\r\n            ? undefined\r\n            : !alwaysEnable,\r\n        disabledProp || !isDirty || isValidating || isSubmitting\r\n    );\r\n\r\n    warning(\r\n        type === 'submit' &&\r\n            ((mutationOptions &&\r\n                (mutationOptions.onSuccess || mutationOptions.onError)) ||\r\n                transform),\r\n        'Cannot use <SaveButton mutationOptions> props on a button of type \"submit\". To override the default mutation options on a particular save button, set the <SaveButton type=\"button\"> prop, or set mutationOptions in the main view component (<Create> or <Edit>).'\r\n    );\r\n\r\n    const handleSubmit = useCallback(\r\n        async values => {\r\n            let errors;\r\n            if (saveContext?.save) {\r\n                errors = await saveContext.save(values, {\r\n                    ...mutationOptions,\r\n                    transform,\r\n                });\r\n            }\r\n            if (errors != null) {\r\n                setSubmissionErrors(errors, form.setError);\r\n            }\r\n        },\r\n        [form.setError, saveContext, mutationOptions, transform]\r\n    );\r\n\r\n    const handleClick: MouseEventHandler<HTMLButtonElement> = useCallback(\r\n        async event => {\r\n            if (onClick) {\r\n                onClick(event);\r\n            }\r\n            if (event.defaultPrevented) {\r\n                return;\r\n            }\r\n            if (type === 'button') {\r\n                // this button doesn't submit the form, so it doesn't trigger useIsFormInvalid in <FormContent>\r\n                // therefore we need to check for errors manually\r\n                event.stopPropagation();\r\n                await form.handleSubmit(handleSubmit)(event);\r\n            }\r\n        },\r\n        [onClick, type, form, handleSubmit]\r\n    );\r\n\r\n    const displayedLabel = label && translate(label, { _: label });\r\n\r\n    return (\r\n        <StyledButton\r\n            variant={variant}\r\n            type={type}\r\n            color={color}\r\n            aria-label={displayedLabel}\r\n            disabled={disabled}\r\n            onClick={handleClick}\r\n            {...rest}\r\n        >\r\n            {isSubmitting ? (\r\n                <CircularProgress\r\n                    sx={circularProgressStyle}\r\n                    size={14}\r\n                    thickness={3}\r\n                    color=\"inherit\"\r\n                />\r\n            ) : (\r\n                icon\r\n            )}\r\n            {displayedLabel}\r\n        </StyledButton>\r\n    );\r\n};\r\n\r\nconst circularProgressStyle = {\r\n    '&.MuiCircularProgress-root': {\r\n        marginRight: '10px',\r\n        marginLeft: '2px',\r\n    },\r\n};\r\n\r\nconst defaultIcon = <ContentSave />;\r\n\r\ninterface Props<\r\n    RecordType extends RaRecord = any,\r\n    MutationOptionsError = unknown\r\n> {\r\n    className?: string;\r\n    disabled?: boolean;\r\n    icon?: ReactElement;\r\n    invalid?: boolean;\r\n    label?: string;\r\n    mutationOptions?: UseMutationOptions<\r\n        RecordType,\r\n        MutationOptionsError,\r\n        CreateParams<RecordType> | UpdateParams<RecordType>\r\n    >;\r\n    transform?: TransformData;\r\n    variant?: string;\r\n}\r\n\r\nexport type SaveButtonProps<RecordType extends RaRecord = any> = Props<\r\n    RecordType\r\n> &\r\n    ButtonProps & {\r\n        alwaysEnable?: boolean;\r\n    };\r\n\r\nSaveButton.propTypes = {\r\n    className: PropTypes.string,\r\n    invalid: PropTypes.bool,\r\n    label: PropTypes.string,\r\n    variant: PropTypes.oneOf(['text', 'outlined', 'contained']),\r\n    icon: PropTypes.element,\r\n    alwaysEnable: PropTypes.bool,\r\n};\r\n\r\nconst PREFIX = 'RaSaveButton';\r\n\r\nconst StyledButton = styled(Button, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    position: 'relative',\r\n    [`& .MuiSvgIcon-root, & .MuiIcon-root, & .MuiCircularProgress-root`]: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    [`& .MuiSvgIcon-root, & .MuiIcon-root`]: {\r\n        fontSize: 18,\r\n    },\r\n}));\r\n\r\nconst valueOrDefault = (value, defaultValue) =>\r\n    typeof value === 'undefined' ? defaultValue : value;\r\n", "import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Button } from './Button';\r\n\r\nexport const SkipNavigationButton = () => {\r\n    return (\r\n        <StyledButton\r\n            onClick={skipToContent}\r\n            className={'skip-nav-button'}\r\n            label=\"ra.navigation.skip_nav\"\r\n            variant=\"contained\"\r\n        />\r\n    );\r\n};\r\n\r\nconst PREFIX = 'RaSkipNavigationButton';\r\n\r\nconst StyledButton = styled(Button, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    position: 'fixed',\r\n    padding: theme.spacing(1),\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.getContrastText(theme.palette.background.default),\r\n    transition: theme.transitions.create(['top', 'opacity'], {\r\n        easing: theme.transitions.easing.easeIn,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    left: theme.spacing(2),\r\n    top: theme.spacing(-10),\r\n    zIndex: 5000,\r\n    '&:hover': {\r\n        opacity: 0.8,\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    '&:focus': {\r\n        top: theme.spacing(2),\r\n        transition: theme.transitions.create(['top', 'opacity'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n}));\r\n\r\nconst skipToContent = () => {\r\n    if (typeof document === 'undefined') return;\r\n    const element = document.getElementById('main-content');\r\n\r\n    if (!element) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            console.warn(\r\n                'No element with id \"main-content\" was found. Ensure the element that contains your main content has an id of \"main-content\".'\r\n            );\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    element.setAttribute('tabIndex', '-1');\r\n    element.focus();\r\n    element.blur();\r\n    element.removeAttribute('tabIndex');\r\n};\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    UpdateWithConfirmButton,\r\n    UpdateWithConfirmButtonProps,\r\n} from './UpdateWithConfirmButton';\r\nimport {\r\n    UpdateWithUndoButton,\r\n    UpdateWithUndoButtonProps,\r\n} from './UpdateWithUndoButton';\r\n\r\n/**\r\n * Updates the selected rows.\r\n *\r\n * To be used inside the <Edit actions> prop or <Show actions> prop.\r\n *\r\n * @example // basic usage\r\n * import * as React from 'react';\r\n * import { Edit, TopToolbar, UpdateButton } from 'react-admin';\r\n *\r\n * const PostEditActions = () => (\r\n *     <TopToolbar>\r\n *         <UpdateButton label=\"Reset Views\" data={{ views: 0 }} />\r\n *     </TopToolbar>\r\n * );\r\n *\r\n * export const PostEdit = () => (\r\n *     <Edit actions={<PostEditActions />}>\r\n *         ...\r\n *     </Edit>\r\n * );\r\n */\r\nexport const UpdateButton = (props: UpdateButtonProps) => {\r\n    const { mutationMode = 'undoable', ...rest } = props;\r\n\r\n    return mutationMode === 'undoable' ? (\r\n        <UpdateWithUndoButton {...rest} />\r\n    ) : (\r\n        <UpdateWithConfirmButton mutationMode={mutationMode} {...rest} />\r\n    );\r\n};\r\n\r\nexport type UpdateButtonProps =\r\n    | ({\r\n          mutationMode?: 'undoable';\r\n      } & UpdateWithUndoButtonProps)\r\n    | ({\r\n          mutationMode?: 'pessimistic' | 'optimistic';\r\n      } & UpdateWithConfirmButtonProps);\r\n\r\nUpdateButton.propTypes = {\r\n    label: PropTypes.string,\r\n    resource: PropTypes.string,\r\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\r\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\r\n    icon: PropTypes.element,\r\n};\r\n", "import * as React from 'react';\r\nimport { Fragment, useState, ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ActionUpdate from '@mui/icons-material/Update';\r\nimport inflection from 'inflection';\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport {\r\n    useTranslate,\r\n    useNotify,\r\n    useResourceContext,\r\n    MutationMode,\r\n    RaRecord,\r\n    useRecordContext,\r\n    useUpdate,\r\n    UpdateParams,\r\n} from 'ra-core';\r\n\r\nimport { Confirm } from '../layout';\r\nimport { Button, ButtonProps } from './Button';\r\nimport { BulkActionProps } from '../types';\r\nimport { UseMutationOptions } from 'react-query';\r\n\r\nexport const UpdateWithConfirmButton = (\r\n    props: UpdateWithConfirmButtonProps\r\n) => {\r\n    const notify = useNotify();\r\n    const translate = useTranslate();\r\n    const resource = useResourceContext(props);\r\n    const [isOpen, setOpen] = useState(false);\r\n    const record = useRecordContext(props);\r\n\r\n    const {\r\n        confirmTitle = 'ra.message.bulk_update_title',\r\n        confirmContent = 'ra.message.bulk_update_content',\r\n        data,\r\n        icon = defaultIcon,\r\n        label = 'ra.action.update',\r\n        mutationMode = 'pessimistic',\r\n        onClick,\r\n        mutationOptions = {},\r\n        ...rest\r\n    } = props;\r\n    const {\r\n        meta: mutationMeta,\r\n        onSuccess = () => {\r\n            notify('ra.notification.updated', {\r\n                type: 'info',\r\n                messageArgs: { smart_count: 1 },\r\n                undoable: mutationMode === 'undoable',\r\n            });\r\n            setOpen(false);\r\n        },\r\n        onError = (error: Error | string) => {\r\n            notify(\r\n                typeof error === 'string'\r\n                    ? error\r\n                    : error.message || 'ra.notification.http_error',\r\n                {\r\n                    type: 'error',\r\n                    messageArgs: {\r\n                        _:\r\n                            typeof error === 'string'\r\n                                ? error\r\n                                : error && error.message\r\n                                ? error.message\r\n                                : undefined,\r\n                    },\r\n                }\r\n            );\r\n            setOpen(false);\r\n        },\r\n        ...otherMutationOptions\r\n    } = mutationOptions;\r\n\r\n    const [updateMany, { isLoading }] = useUpdate();\r\n\r\n    const handleClick = e => {\r\n        setOpen(true);\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleUpdate = e => {\r\n        updateMany(\r\n            resource,\r\n            { id: record.id, data, meta: mutationMeta, previousData: record },\r\n            {\r\n                onSuccess,\r\n                onError,\r\n                mutationMode,\r\n                ...otherMutationOptions,\r\n            }\r\n        );\r\n\r\n        if (typeof onClick === 'function') {\r\n            onClick(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <StyledButton\r\n                onClick={handleClick}\r\n                label={label}\r\n                {...sanitizeRestProps(rest)}\r\n            >\r\n                {icon}\r\n            </StyledButton>\r\n            <Confirm\r\n                isOpen={isOpen}\r\n                loading={isLoading}\r\n                title={confirmTitle}\r\n                content={confirmContent}\r\n                translateOptions={{\r\n                    smart_count: 1,\r\n                    name: translate(`resources.${resource}.forcedCaseName`, {\r\n                        smart_count: 1,\r\n                        _: inflection.humanize(\r\n                            translate(`resources.${resource}.name`, {\r\n                                smart_count: 1,\r\n                                _: inflection.inflect(resource, 1),\r\n                            }),\r\n                            true\r\n                        ),\r\n                    }),\r\n                }}\r\n                onConfirm={handleUpdate}\r\n                onClose={handleDialogClose}\r\n            />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst sanitizeRestProps = ({\r\n    filterValues,\r\n    label,\r\n    ...rest\r\n}: Omit<\r\n    UpdateWithConfirmButtonProps,\r\n    'resource' | 'selectedIds' | 'icon' | 'data'\r\n>) => rest;\r\n\r\nexport interface UpdateWithConfirmButtonProps<\r\n    RecordType extends RaRecord = any,\r\n    MutationOptionsError = unknown\r\n> extends BulkActionProps,\r\n        ButtonProps {\r\n    confirmContent?: React.ReactNode;\r\n    confirmTitle?: React.ReactNode;\r\n    icon?: ReactElement;\r\n    data: any;\r\n    mutationMode?: MutationMode;\r\n    mutationOptions?: UseMutationOptions<\r\n        RecordType,\r\n        MutationOptionsError,\r\n        UpdateParams<RecordType>\r\n    > & { meta?: any };\r\n}\r\n\r\nUpdateWithConfirmButton.propTypes = {\r\n    confirmTitle: PropTypes.node,\r\n    confirmContent: PropTypes.node,\r\n    label: PropTypes.string,\r\n    resource: PropTypes.string,\r\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\r\n    icon: PropTypes.element,\r\n    data: PropTypes.any.isRequired,\r\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\r\n};\r\n\r\nconst PREFIX = 'RaUpdateWithConfirmButton';\r\n\r\nconst StyledButton = styled(Button, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n        // Reset on mouse devices\r\n        '@media (hover: none)': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n}));\r\n\r\nconst defaultIcon = <ActionUpdate />;\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ActionUpdate from '@mui/icons-material/Update';\r\nimport { alpha } from '@mui/material/styles';\r\nimport {\r\n    useRefresh,\r\n    useNotify,\r\n    useResourceContext,\r\n    RaRecord,\r\n    useRecordContext,\r\n    useUpdate,\r\n    UpdateParams,\r\n} from 'ra-core';\r\nimport { UseMutationOptions } from 'react-query';\r\n\r\nimport { Button, ButtonProps } from './Button';\r\nimport { BulkActionProps } from '../types';\r\n\r\nexport const UpdateWithUndoButton = (props: UpdateWithUndoButtonProps) => {\r\n    const record = useRecordContext(props);\r\n    const notify = useNotify();\r\n    const resource = useResourceContext(props);\r\n    const refresh = useRefresh();\r\n\r\n    const {\r\n        data,\r\n        label = 'ra.action.update',\r\n        icon = defaultIcon,\r\n        onClick,\r\n        mutationOptions = {},\r\n        ...rest\r\n    } = props;\r\n\r\n    const [updateMany, { isLoading }] = useUpdate();\r\n\r\n    const {\r\n        meta: mutationMeta,\r\n        onSuccess = () => {\r\n            notify('ra.notification.updated', {\r\n                type: 'info',\r\n                messageArgs: { smart_count: 1 },\r\n                undoable: true,\r\n            });\r\n        },\r\n        onError = (error: Error | string) => {\r\n            notify(\r\n                typeof error === 'string'\r\n                    ? error\r\n                    : error.message || 'ra.notification.http_error',\r\n                {\r\n                    type: 'error',\r\n                    messageArgs: {\r\n                        _:\r\n                            typeof error === 'string'\r\n                                ? error\r\n                                : error && error.message\r\n                                ? error.message\r\n                                : undefined,\r\n                    },\r\n                }\r\n            );\r\n            refresh();\r\n        },\r\n        ...otherMutationOptions\r\n    } = mutationOptions;\r\n\r\n    const handleClick = e => {\r\n        updateMany(\r\n            resource,\r\n            { id: record.id, data, meta: mutationMeta, previousData: record },\r\n            {\r\n                onSuccess,\r\n                onError,\r\n                mutationMode: 'undoable',\r\n                ...otherMutationOptions,\r\n            }\r\n        );\r\n        if (typeof onClick === 'function') {\r\n            onClick(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <StyledButton\r\n            onClick={handleClick}\r\n            label={label}\r\n            disabled={isLoading}\r\n            {...sanitizeRestProps(rest)}\r\n        >\r\n            {icon}\r\n        </StyledButton>\r\n    );\r\n};\r\n\r\nconst defaultIcon = <ActionUpdate />;\r\n\r\nconst sanitizeRestProps = ({\r\n    filterValues,\r\n    label,\r\n    selectedIds,\r\n    ...rest\r\n}: Omit<UpdateWithUndoButtonProps, 'resource' | 'icon' | 'data'>) => rest;\r\n\r\nexport interface UpdateWithUndoButtonProps<\r\n    RecordType extends RaRecord = any,\r\n    MutationOptionsError = unknown\r\n> extends BulkActionProps,\r\n        ButtonProps {\r\n    icon?: ReactElement;\r\n    data: any;\r\n    mutationOptions?: UseMutationOptions<\r\n        RecordType,\r\n        MutationOptionsError,\r\n        UpdateParams<RecordType>\r\n    > & { meta?: any };\r\n}\r\n\r\nUpdateWithUndoButton.propTypes = {\r\n    label: PropTypes.string,\r\n    resource: PropTypes.string,\r\n    record: PropTypes.object,\r\n    icon: PropTypes.element,\r\n    data: PropTypes.any.isRequired,\r\n};\r\n\r\nconst PREFIX = 'RaUpdateWithUndoButton';\r\n\r\nconst StyledButton = styled(Button, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    color: theme.palette.primary.main,\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n        // Reset on mouse devices\r\n        '@media (hover: none)': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n}));\r\n", "import * as React from 'react';\r\nimport { HtmlHTMLAttributes, ReactNode, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Avatar, SxProps } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useCheckAuth } from 'ra-core';\r\n\r\nimport { LoginForm as DefaultLoginForm } from './LoginForm';\r\n\r\n/**\r\n * A standalone login page, to serve as authentication gate to the admin\r\n *\r\n * Expects the user to enter a login and a password, which will be checked\r\n * by the `authProvider.login()` method. Redirects to the root page (/)\r\n * upon success, otherwise displays an authentication error message.\r\n *\r\n * Copy and adapt this component to implement your own login logic\r\n * (e.g. to authenticate via email or facebook or anything else).\r\n *\r\n * @example\r\n *     import MyLoginPage from './MyLoginPage';\r\n *     const App = () => (\r\n *         <Admin loginPage={MyLoginPage} authProvider={authProvider}>\r\n *             ...\r\n *        </Admin>\r\n *     );\r\n */\r\nexport const Login = (props: LoginProps) => {\r\n    const { children = defaultLoginForm, backgroundImage, ...rest } = props;\r\n    const containerRef = useRef<HTMLDivElement>();\r\n    let backgroundImageLoaded = false;\r\n    const checkAuth = useCheckAuth();\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        checkAuth({}, false)\r\n            .then(() => {\r\n                // already authenticated, redirect to the home page\r\n                navigate('/');\r\n            })\r\n            .catch(() => {\r\n                // not authenticated, stay on the login page\r\n            });\r\n    }, [checkAuth, navigate]);\r\n\r\n    const updateBackgroundImage = () => {\r\n        if (!backgroundImageLoaded && containerRef.current) {\r\n            containerRef.current.style.backgroundImage = `url(${backgroundImage})`;\r\n            backgroundImageLoaded = true;\r\n        }\r\n    };\r\n\r\n    // Load background image asynchronously to speed up time to interactive\r\n    const lazyLoadBackgroundImage = () => {\r\n        if (backgroundImage) {\r\n            const img = new Image();\r\n            img.onload = updateBackgroundImage;\r\n            img.src = backgroundImage;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!backgroundImageLoaded) {\r\n            lazyLoadBackgroundImage();\r\n        }\r\n    });\r\n    return (\r\n        <Root {...rest} ref={containerRef}>\r\n            <Card className={LoginClasses.card}>\r\n                <div className={LoginClasses.avatar}>\r\n                    <Avatar className={LoginClasses.icon}>\r\n                        <LockIcon />\r\n                    </Avatar>\r\n                </div>\r\n                {children}\r\n            </Card>\r\n        </Root>\r\n    );\r\n};\r\n\r\nconst defaultLoginForm = <DefaultLoginForm />;\r\n\r\nexport interface LoginProps extends HtmlHTMLAttributes<HTMLDivElement> {\r\n    backgroundImage?: string;\r\n    children?: ReactNode;\r\n    className?: string;\r\n    sx?: SxProps;\r\n}\r\n\r\nconst PREFIX = 'RaLogin';\r\nexport const LoginClasses = {\r\n    card: `${PREFIX}-card`,\r\n    avatar: `${PREFIX}-avatar`,\r\n    icon: `${PREFIX}-icon`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minHeight: '100vh',\r\n    height: '1px',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    backgroundImage:\r\n        'radial-gradient(circle at 50% 14em, #313264 0%, #00023b 60%, #00023b 100%)',\r\n\r\n    [`& .${LoginClasses.card}`]: {\r\n        minWidth: 300,\r\n        marginTop: '6em',\r\n    },\r\n    [`& .${LoginClasses.avatar}`]: {\r\n        margin: '1em',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    [`& .${LoginClasses.icon}`]: {\r\n        backgroundColor: theme.palette.secondary[500],\r\n    },\r\n}));\r\n\r\nLogin.propTypes = {\r\n    backgroundImage: PropTypes.string,\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n};\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, CardContent, CircularProgress } from '@mui/material';\r\nimport {\r\n    Form,\r\n    required,\r\n    useTranslate,\r\n    useLogin,\r\n    useNotify,\r\n    useSafeSetState,\r\n} from 'ra-core';\r\nimport { TextInput } from '../input';\r\n\r\nexport const LoginForm = (props: LoginFormProps) => {\r\n    const { redirectTo, className } = props;\r\n    const [loading, setLoading] = useSafeSetState(false);\r\n    const login = useLogin();\r\n    const translate = useTranslate();\r\n    const notify = useNotify();\r\n\r\n    const submit = (values: FormData) => {\r\n        setLoading(true);\r\n        login(values, redirectTo)\r\n            .then(() => {\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                setLoading(false);\r\n                notify(\r\n                    typeof error === 'string'\r\n                        ? error\r\n                        : typeof error === 'undefined' || !error.message\r\n                        ? 'ra.auth.sign_in_error'\r\n                        : error.message,\r\n                    {\r\n                        type: 'error',\r\n                        messageArgs: {\r\n                            _:\r\n                                typeof error === 'string'\r\n                                    ? error\r\n                                    : error && error.message\r\n                                    ? error.message\r\n                                    : undefined,\r\n                        },\r\n                    }\r\n                );\r\n            });\r\n    };\r\n\r\n    return (\r\n        <StyledForm\r\n            onSubmit={submit}\r\n            mode=\"onChange\"\r\n            noValidate\r\n            className={className}\r\n        >\r\n            <CardContent className={LoginFormClasses.content}>\r\n                <TextInput\r\n                    autoFocus\r\n                    source=\"username\"\r\n                    label={translate('ra.auth.username')}\r\n                    autoComplete=\"username\"\r\n                    validate={required()}\r\n                    fullWidth\r\n                />\r\n                <TextInput\r\n                    source=\"password\"\r\n                    label={translate('ra.auth.password')}\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    validate={required()}\r\n                    fullWidth\r\n                />\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    fullWidth\r\n                    className={LoginFormClasses.button}\r\n                >\r\n                    {loading ? (\r\n                        <CircularProgress\r\n                            className={LoginFormClasses.icon}\r\n                            size={19}\r\n                            thickness={3}\r\n                        />\r\n                    ) : (\r\n                        translate('ra.auth.sign_in')\r\n                    )}\r\n                </Button>\r\n            </CardContent>\r\n        </StyledForm>\r\n    );\r\n};\r\n\r\nconst PREFIX = 'RaLoginForm';\r\n\r\nexport const LoginFormClasses = {\r\n    content: `${PREFIX}-content`,\r\n    button: `${PREFIX}-button`,\r\n    icon: `${PREFIX}-icon`,\r\n};\r\n\r\nconst StyledForm = styled(Form, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    [`& .${LoginFormClasses.content}`]: {\r\n        width: 300,\r\n    },\r\n    [`& .${LoginFormClasses.button}`]: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    [`& .${LoginFormClasses.icon}`]: {\r\n        margin: theme.spacing(0.3),\r\n    },\r\n}));\r\n\r\nexport interface LoginFormProps {\r\n    redirectTo?: string;\r\n    className?: string;\r\n}\r\n\r\ninterface FormData {\r\n    username: string;\r\n    password: string;\r\n}\r\nLoginForm.propTypes = {\r\n    redirectTo: PropTypes.string,\r\n};\r\n", "import * as React from 'react';\r\nimport { cloneElement, Children, ReactElement, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport {\r\n    isRequired,\r\n    FieldTitle,\r\n    composeSyncValidators,\r\n    RaRecord,\r\n    useApplyInputDefaultValues,\r\n    useGetValidationErrorMessage,\r\n    useFormGroupContext,\r\n    useFormGroups,\r\n} from 'ra-core';\r\nimport { useFieldArray, useFormContext } from 'react-hook-form';\r\nimport {\r\n    InputLabel,\r\n    FormControl,\r\n    FormHelperText,\r\n    FormControlProps,\r\n    styled,\r\n} from '@mui/material';\r\n\r\nimport { LinearProgress } from '../../layout';\r\nimport { CommonInputProps } from '../CommonInputProps';\r\nimport { InputHelperText } from '../InputHelperText';\r\nimport { sanitizeInputRestProps } from '../sanitizeInputRestProps';\r\nimport { Labeled } from '../../Labeled';\r\nimport { ArrayInputContext } from './ArrayInputContext';\r\n\r\n/**\r\n * To edit arrays of data embedded inside a record, <ArrayInput> creates a list of sub-forms.\r\n *\r\n *  @example\r\n *\r\n *      import { ArrayInput, SimpleFormIterator, DateInput, TextInput } from 'react-admin';\r\n *\r\n *      <ArrayInput source=\"backlinks\">\r\n *          <SimpleFormIterator>\r\n *              <DateInput source=\"date\" />\r\n *              <TextInput source=\"url\" />\r\n *          </SimpleFormIterator>\r\n *      </ArrayInput>\r\n *\r\n * <ArrayInput> allows the edition of embedded arrays, like the backlinks field\r\n * in the following post record:\r\n *\r\n * {\r\n *   id: 123\r\n *   backlinks: [\r\n *         {\r\n *             date: '2012-08-10T00:00:00.000Z',\r\n *             url: 'http://example.com/foo/bar.html',\r\n *         },\r\n *         {\r\n *             date: '2012-08-14T00:00:00.000Z',\r\n *             url: 'https://blog.johndoe.com/2012/08/12/foobar.html',\r\n *         }\r\n *    ]\r\n * }\r\n *\r\n * <ArrayInput> expects a single child, which must be a *form iterator* component.\r\n * A form iterator is a component accepting a fields object as passed by\r\n * react-hook-form-arrays's useFieldArray() hook, and defining a layout for\r\n * an array of fields. For instance, the <SimpleFormIterator> component\r\n * displays an array of fields in an unordered list (<ul>), one sub-form by\r\n * list item (<li>). It also provides controls for adding and removing\r\n * a sub-record (a backlink in this example).\r\n *\r\n * @see {@link https://react-hook-form.com/docs/usefieldarray}\r\n */\r\nexport const ArrayInput = (props: ArrayInputProps) => {\r\n    const {\r\n        className,\r\n        defaultValue,\r\n        label,\r\n        isFetching,\r\n        isLoading,\r\n        children,\r\n        helperText,\r\n        record,\r\n        resource: resourceFromProps,\r\n        source,\r\n        validate,\r\n        variant,\r\n        disabled,\r\n        margin = 'dense',\r\n        ...rest\r\n    } = props;\r\n\r\n    const formGroupName = useFormGroupContext();\r\n    const formGroups = useFormGroups();\r\n\r\n    const sanitizedValidate = Array.isArray(validate)\r\n        ? composeSyncValidators(validate)\r\n        : validate;\r\n    const getValidationErrorMessage = useGetValidationErrorMessage();\r\n\r\n    const {\r\n        getFieldState,\r\n        formState,\r\n        getValues,\r\n        register,\r\n        unregister,\r\n    } = useFormContext();\r\n\r\n    const fieldProps = useFieldArray({\r\n        name: source,\r\n        rules: {\r\n            validate: async value => {\r\n                if (!sanitizedValidate) return true;\r\n                const error = await sanitizedValidate(\r\n                    value,\r\n                    getValues(),\r\n                    props\r\n                );\r\n\r\n                if (!error) return true;\r\n                return getValidationErrorMessage(error);\r\n            },\r\n        },\r\n    });\r\n\r\n    const { isSubmitted } = formState;\r\n\r\n    // We need to register the array itself as a field to enable validation at its level\r\n    useEffect(() => {\r\n        register(source);\r\n        formGroups.registerField(source, formGroupName);\r\n\r\n        return () => {\r\n            unregister(source, { keepValue: true });\r\n            formGroups.unregisterField(source, formGroupName);\r\n        };\r\n    }, [register, unregister, source, formGroups, formGroupName]);\r\n\r\n    useApplyInputDefaultValues({\r\n        inputProps: props,\r\n        isArrayInput: true,\r\n        fieldArrayInputControl: fieldProps,\r\n    });\r\n\r\n    const { isDirty, error } = getFieldState(source, formState);\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Labeled label={label} className={className}>\r\n                <LinearProgress />\r\n            </Labeled>\r\n        );\r\n    }\r\n    const renderHelperText =\r\n        helperText !== false || ((isDirty || isSubmitted) && !!error);\r\n\r\n    return (\r\n        <Root\r\n            fullWidth\r\n            margin={margin}\r\n            className={clsx(\r\n                'ra-input',\r\n                `ra-input-${source}`,\r\n                ArrayInputClasses.root,\r\n                className\r\n            )}\r\n            error={(isDirty || isSubmitted) && !!error}\r\n            {...sanitizeInputRestProps(rest)}\r\n        >\r\n            <InputLabel\r\n                htmlFor={source}\r\n                className={ArrayInputClasses.label}\r\n                shrink\r\n                error={(isDirty || isSubmitted) && !!error}\r\n            >\r\n                <FieldTitle\r\n                    label={label}\r\n                    source={source}\r\n                    resource={resourceFromProps}\r\n                    isRequired={isRequired(validate)}\r\n                />\r\n            </InputLabel>\r\n            <ArrayInputContext.Provider value={fieldProps}>\r\n                {cloneElement(Children.only(children), {\r\n                    ...fieldProps,\r\n                    record,\r\n                    resource: resourceFromProps,\r\n                    source,\r\n                    variant,\r\n                    margin,\r\n                    disabled,\r\n                })}\r\n            </ArrayInputContext.Provider>\r\n            {renderHelperText ? (\r\n                <FormHelperText error={(isDirty || isSubmitted) && !!error}>\r\n                    <InputHelperText\r\n                        touched={isDirty || isSubmitted}\r\n                        // root property is applicable to built-in validation only,\r\n                        // Resolvers are yet to support useFieldArray root level validation.\r\n                        // Reference: https://react-hook-form.com/docs/usefieldarray\r\n                        error={error?.root?.message ?? error?.message}\r\n                        helperText={helperText}\r\n                    />\r\n                </FormHelperText>\r\n            ) : null}\r\n        </Root>\r\n    );\r\n};\r\n\r\nexport const getArrayInputError = error => {\r\n    if (Array.isArray(error)) {\r\n        return undefined;\r\n    }\r\n    return error;\r\n};\r\n\r\nexport interface ArrayInputProps\r\n    extends CommonInputProps,\r\n        Omit<FormControlProps, 'defaultValue' | 'onBlur' | 'onChange'> {\r\n    className?: string;\r\n    children: ReactElement;\r\n    disabled?: boolean;\r\n    isFetching?: boolean;\r\n    isLoading?: boolean;\r\n    record?: Partial<RaRecord>;\r\n}\r\n\r\nconst PREFIX = 'RaArrayInput';\r\n\r\nexport const ArrayInputClasses = {\r\n    root: `${PREFIX}-root`,\r\n    label: `${PREFIX}-label`,\r\n};\r\n\r\nconst Root = styled(FormControl, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    marginTop: 0,\r\n    [`& .${ArrayInputClasses.label}`]: {\r\n        position: 'relative',\r\n        top: theme.spacing(0.5),\r\n        left: theme.spacing(-1.5),\r\n    },\r\n    [`& .${ArrayInputClasses.root}`]: {\r\n        // nested ArrayInput\r\n        paddingLeft: theme.spacing(2),\r\n    },\r\n}));\r\n", "import * as React from 'react';\r\nimport { isValidElement, ReactElement } from 'react';\r\nimport {\r\n    useTranslate,\r\n    ValidationError,\r\n    ValidationErrorMessage,\r\n    ValidationErrorMessageWithArgs,\r\n} from 'ra-core';\r\n\r\nexport const InputHelperText = (props: InputHelperTextProps) => {\r\n    const { helperText, touched, error } = props;\r\n    const translate = useTranslate();\r\n\r\n    if (touched && error) {\r\n        if ((error as ValidationErrorMessageWithArgs).message) {\r\n            return <ValidationError error={error} />;\r\n        }\r\n        return <>{error}</>;\r\n    }\r\n\r\n    if (helperText === false) {\r\n        return null;\r\n    }\r\n\r\n    if (isValidElement(helperText)) {\r\n        return helperText;\r\n    }\r\n\r\n    if (typeof helperText === 'string') {\r\n        return <>{translate(helperText, { _: helperText })}</>;\r\n    }\r\n\r\n    // Material UI's HelperText cannot reserve space unless we pass a single\r\n    // space as child, which isn't possible when the child is a component.\r\n    // Therefore, we must reserve the space ourselves by passing the same\r\n    // markup as Material UI.\r\n    // @see https://github.com/mui/material-ui/blob/62e439b7022d519ab638d65201e204b59b77f8da/packages/material-ui/src/FormHelperText/FormHelperText.js#L85-L90\r\n    return <span dangerouslySetInnerHTML={defaultInnerHTML} />;\r\n};\r\n\r\nconst defaultInnerHTML = { __html: '&#8203;' };\r\n\r\nexport interface InputHelperTextProps {\r\n    helperText?: string | ReactElement | boolean;\r\n    error?: ValidationErrorMessage;\r\n    touched: boolean;\r\n}\r\n", "export const sanitizeInputRestProps = ({\r\n    afterSubmit,\r\n    allowNull,\r\n    alwaysOn,\r\n    beforeSubmit,\r\n    component,\r\n    data,\r\n    defaultValue,\r\n    error,\r\n    format,\r\n    formatOnBlur,\r\n    formClassName,\r\n    initialValue,\r\n    initializeForm,\r\n    input,\r\n    isEqual,\r\n    isRequired,\r\n    label,\r\n    limitChoicesToValue,\r\n    locale,\r\n    meta,\r\n    multiple,\r\n    name,\r\n    options,\r\n    optionText,\r\n    optionValue,\r\n    parse,\r\n    record,\r\n    ref,\r\n    refetch,\r\n    render,\r\n    resource,\r\n    setFilter,\r\n    setPagination,\r\n    setSort,\r\n    shouldUnregister,\r\n    source,\r\n    submitError,\r\n    subscription,\r\n    textAlign,\r\n    translate,\r\n    translateChoice,\r\n    validate,\r\n    validateFields,\r\n    value,\r\n    ...rest\r\n}: any) => rest;\r\n", "import * as React from 'react';\r\nimport { ElementType, ReactElement } from 'react';\r\nimport { Stack, StackProps, Theme, Typography } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Property } from 'csstype';\r\nimport clsx from 'clsx';\r\n\r\nimport { FieldTitle } from 'ra-core';\r\nimport { ResponsiveStyleValue } from '@mui/system';\r\n\r\n/**\r\n * Wrap a field or an input with a label if necessary.\r\n *\r\n * The label is displayed if:\r\n * - the field or input has a label prop that is not false, or\r\n * - the field or input has a source prop\r\n *\r\n * @example\r\n * <Labeled>\r\n *     <FooComponent source=\"title\" />\r\n * </Labeled>\r\n */\r\nexport const Labeled = ({\r\n    children,\r\n    className = '',\r\n    color = 'textSecondary',\r\n    component = 'span',\r\n    fullWidth,\r\n    isRequired,\r\n    label,\r\n    resource,\r\n    source,\r\n    ...rest\r\n}: LabeledProps) => (\r\n    <Root\r\n        // @ts-ignore https://github.com/mui/material-ui/issues/29875\r\n        component={component}\r\n        className={clsx(className, {\r\n            [LabeledClasses.fullWidth]: fullWidth,\r\n        })}\r\n        {...rest}\r\n    >\r\n        {label !== false &&\r\n        children.props.label !== false &&\r\n        typeof children.type !== 'string' &&\r\n        // @ts-ignore\r\n        children.type?.displayName !== 'Labeled' &&\r\n        // @ts-ignore\r\n        children.type?.displayName !== 'Labeled' ? (\r\n            <Typography color={color} className={LabeledClasses.label}>\r\n                <FieldTitle\r\n                    label={label || children.props.label}\r\n                    source={source || children.props.source}\r\n                    resource={resource}\r\n                    isRequired={isRequired}\r\n                />\r\n            </Typography>\r\n        ) : null}\r\n        {children}\r\n    </Root>\r\n);\r\n\r\nLabeled.displayName = 'Labeled';\r\n\r\nexport interface LabeledProps extends StackProps {\r\n    children: ReactElement;\r\n    className?: string;\r\n    color?:\r\n        | ResponsiveStyleValue<Property.Color | Property.Color[]>\r\n        | ((\r\n              theme: Theme\r\n          ) => ResponsiveStyleValue<Property.Color | Property.Color[]>);\r\n    component?: ElementType;\r\n    fullWidth?: boolean;\r\n    htmlFor?: string;\r\n    isRequired?: boolean;\r\n    label?: string | ReactElement | boolean;\r\n    resource?: string;\r\n    source?: string;\r\n}\r\n\r\nconst PREFIX = 'RaLabeled';\r\n\r\nexport const LabeledClasses = {\r\n    label: `${PREFIX}-label`,\r\n    fullWidth: `${PREFIX}-fullWidth`,\r\n};\r\n\r\nconst Root = styled(Stack, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})({\r\n    display: 'inline-flex',\r\n    marginBottom: '0.2em',\r\n\r\n    [`&.${LabeledClasses.fullWidth}`]: {\r\n        width: '100%',\r\n    },\r\n\r\n    [`& .${LabeledClasses.label}`]: {\r\n        fontSize: '0.75em',\r\n        marginBottom: '0.2em',\r\n    },\r\n});\r\n", "import { createContext } from 'react';\r\nimport { UseFieldArrayReturn } from 'react-hook-form';\r\n\r\n/**\r\n * A React context that provides access to an ArrayInput methods as provided by react-hook-form\r\n * Useful to create custom array input iterators.\r\n * @see {ArrayInput}\r\n * @see {@link https://react-hook-form.com/docs/usefieldarray}\r\n */\r\nexport const ArrayInputContext = createContext<ArrayInputContextValue>(\r\n    undefined\r\n);\r\n\r\nexport type ArrayInputContextValue = UseFieldArrayReturn;\r\n", "import * as React from 'react';\r\nimport {\r\n    Children,\r\n    cloneElement,\r\n    MouseEvent,\r\n    MouseEventHandler,\r\n    ReactElement,\r\n    ReactNode,\r\n    useCallback,\r\n    useMemo,\r\n    useRef,\r\n    useState,\r\n} from 'react';\r\nimport { styled, SxProps } from '@mui/material';\r\nimport clsx from 'clsx';\r\nimport get from 'lodash/get';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    FormDataConsumer,\r\n    RaRecord,\r\n    useRecordContext,\r\n    useTranslate,\r\n} from 'ra-core';\r\nimport { UseFieldArrayReturn } from 'react-hook-form';\r\n\r\nimport { useArrayInput } from './useArrayInput';\r\nimport {\r\n    SimpleFormIteratorClasses,\r\n    SimpleFormIteratorPrefix,\r\n} from './useSimpleFormIteratorStyles';\r\nimport { SimpleFormIteratorContext } from './SimpleFormIteratorContext';\r\nimport {\r\n    DisableRemoveFunction,\r\n    SimpleFormIteratorItem,\r\n} from './SimpleFormIteratorItem';\r\nimport { AddItemButton as DefaultAddItemButton } from './AddItemButton';\r\nimport { RemoveItemButton as DefaultRemoveItemButton } from './RemoveItemButton';\r\nimport { ReOrderButtons as DefaultReOrderButtons } from './ReOrderButtons';\r\nimport { ClearArrayButton } from './ClearArrayButton';\r\nimport { Confirm } from '../../layout';\r\n\r\nexport const SimpleFormIterator = (props: SimpleFormIteratorProps) => {\r\n    const {\r\n        addButton = <DefaultAddItemButton />,\r\n        removeButton = <DefaultRemoveItemButton />,\r\n        reOrderButtons = <DefaultReOrderButtons />,\r\n        children,\r\n        className,\r\n        resource,\r\n        source,\r\n        disabled,\r\n        disableAdd = false,\r\n        disableClear,\r\n        disableRemove = false,\r\n        disableReordering,\r\n        inline,\r\n        getItemLabel = false,\r\n        fullWidth,\r\n        sx,\r\n    } = props;\r\n    const [confirmIsOpen, setConfirmIsOpen] = useState<boolean>(false);\r\n    const { append, fields, move, remove, replace } = useArrayInput(props);\r\n    const translate = useTranslate();\r\n    const record = useRecordContext(props);\r\n    const initialDefaultValue = useRef({});\r\n\r\n    const removeField = useCallback(\r\n        (index: number) => {\r\n            remove(index);\r\n        },\r\n        [remove]\r\n    );\r\n\r\n    if (fields.length > 0) {\r\n        const { id, ...rest } = fields[0];\r\n        initialDefaultValue.current = rest;\r\n        for (const k in initialDefaultValue.current)\r\n            initialDefaultValue.current[k] = null;\r\n    }\r\n\r\n    const addField = useCallback(\r\n        (item: any = undefined) => {\r\n            let defaultValue = item;\r\n            if (item == null) {\r\n                defaultValue = initialDefaultValue.current;\r\n                if (\r\n                    Children.count(children) === 1 &&\r\n                    React.isValidElement(Children.only(children)) &&\r\n                    // @ts-ignore\r\n                    !Children.only(children).props.source &&\r\n                    // Make sure it's not a FormDataConsumer\r\n                    Children.map(\r\n                        children,\r\n                        input =>\r\n                            React.isValidElement(input) &&\r\n                            input.type !== FormDataConsumer\r\n                    ).some(Boolean)\r\n                ) {\r\n                    // ArrayInput used for an array of scalar values\r\n                    // (e.g. tags: ['foo', 'bar'])\r\n                    defaultValue = '';\r\n                } else {\r\n                    // ArrayInput used for an array of objects\r\n                    // (e.g. authors: [{ firstName: 'John', lastName: 'Doe' }, { firstName: 'Jane', lastName: 'Doe' }])\r\n                    defaultValue =\r\n                        defaultValue || ({} as Record<string, unknown>);\r\n                    Children.forEach(children, input => {\r\n                        if (\r\n                            React.isValidElement(input) &&\r\n                            input.type !== FormDataConsumer &&\r\n                            input.props.source\r\n                        ) {\r\n                            defaultValue[input.props.source] =\r\n                                input.props.defaultValue ?? null;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            append(defaultValue);\r\n        },\r\n        [append, children]\r\n    );\r\n\r\n    // add field and call the onClick event of the button passed as addButton prop\r\n    const handleAddButtonClick = (\r\n        originalOnClickHandler: MouseEventHandler\r\n    ) => (event: MouseEvent) => {\r\n        addField();\r\n        if (originalOnClickHandler) {\r\n            originalOnClickHandler(event);\r\n        }\r\n    };\r\n\r\n    const handleReorder = useCallback(\r\n        (origin: number, destination: number) => {\r\n            move(origin, destination);\r\n        },\r\n        [move]\r\n    );\r\n\r\n    const handleArrayClear = useCallback(() => {\r\n        replace([]);\r\n        setConfirmIsOpen(false);\r\n    }, [replace]);\r\n\r\n    const records = get(record, source);\r\n\r\n    const context = useMemo(\r\n        () => ({\r\n            total: fields.length,\r\n            add: addField,\r\n            remove: removeField,\r\n            reOrder: handleReorder,\r\n            source,\r\n        }),\r\n        [addField, fields.length, handleReorder, removeField, source]\r\n    );\r\n    return fields ? (\r\n        <SimpleFormIteratorContext.Provider value={context}>\r\n            <Root\r\n                className={clsx(\r\n                    className,\r\n                    fullWidth && 'fullwidth',\r\n                    disabled && 'disabled'\r\n                )}\r\n                sx={sx}\r\n            >\r\n                <ul className={SimpleFormIteratorClasses.list}>\r\n                    {fields.map((member, index) => (\r\n                        <SimpleFormIteratorItem\r\n                            key={member.id}\r\n                            disabled={disabled}\r\n                            disableRemove={disableRemove}\r\n                            disableReordering={disableReordering}\r\n                            fields={fields}\r\n                            getItemLabel={getItemLabel}\r\n                            index={index}\r\n                            member={`${source}.${index}`}\r\n                            onRemoveField={removeField}\r\n                            onReorder={handleReorder}\r\n                            record={(records && records[index]) || {}}\r\n                            removeButton={removeButton}\r\n                            reOrderButtons={reOrderButtons}\r\n                            resource={resource}\r\n                            source={source}\r\n                            inline={inline}\r\n                        >\r\n                            {children}\r\n                        </SimpleFormIteratorItem>\r\n                    ))}\r\n                </ul>\r\n                {!disabled && !(disableAdd && (disableClear || disableRemove)) && (\r\n                    <div className={SimpleFormIteratorClasses.buttons}>\r\n                        {!disableAdd && (\r\n                            <div className={SimpleFormIteratorClasses.add}>\r\n                                {cloneElement(addButton, {\r\n                                    className: clsx(\r\n                                        'button-add',\r\n                                        `button-add-${source}`\r\n                                    ),\r\n                                    onClick: handleAddButtonClick(\r\n                                        addButton.props.onClick\r\n                                    ),\r\n                                })}\r\n                            </div>\r\n                        )}\r\n                        {fields.length > 0 && !disableClear && !disableRemove && (\r\n                            <div className={SimpleFormIteratorClasses.clear}>\r\n                                <Confirm\r\n                                    isOpen={confirmIsOpen}\r\n                                    title={translate(\r\n                                        'ra.action.clear_array_input'\r\n                                    )}\r\n                                    content={translate(\r\n                                        'ra.message.clear_array_input'\r\n                                    )}\r\n                                    onConfirm={handleArrayClear}\r\n                                    onClose={() => setConfirmIsOpen(false)}\r\n                                />\r\n                                <ClearArrayButton\r\n                                    onClick={() => setConfirmIsOpen(true)}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </Root>\r\n        </SimpleFormIteratorContext.Provider>\r\n    ) : null;\r\n};\r\n\r\nSimpleFormIterator.propTypes = {\r\n    addButton: PropTypes.element,\r\n    removeButton: PropTypes.element,\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    field: PropTypes.object,\r\n    fields: PropTypes.array,\r\n    fieldState: PropTypes.object,\r\n    formState: PropTypes.object,\r\n    fullWidth: PropTypes.bool,\r\n    inline: PropTypes.bool,\r\n    record: PropTypes.object,\r\n    source: PropTypes.string,\r\n    resource: PropTypes.string,\r\n    translate: PropTypes.func,\r\n    disableAdd: PropTypes.bool,\r\n    disableRemove: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\r\n    TransitionProps: PropTypes.shape({}),\r\n};\r\n\r\ntype GetItemLabelFunc = (index: number) => string | ReactElement;\r\n\r\nexport interface SimpleFormIteratorProps extends Partial<UseFieldArrayReturn> {\r\n    addButton?: ReactElement;\r\n    children?: ReactNode;\r\n    className?: string;\r\n    disabled?: boolean;\r\n    disableAdd?: boolean;\r\n    disableClear?: boolean;\r\n    disableRemove?: boolean | DisableRemoveFunction;\r\n    disableReordering?: boolean;\r\n    fullWidth?: boolean;\r\n    getItemLabel?: boolean | GetItemLabelFunc;\r\n    inline?: boolean;\r\n    meta?: {\r\n        // the type defined in FieldArrayRenderProps says error is boolean, which is wrong.\r\n        error?: any;\r\n        submitFailed?: boolean;\r\n    };\r\n    record?: RaRecord;\r\n    removeButton?: ReactElement;\r\n    reOrderButtons?: ReactElement;\r\n    resource?: string;\r\n    source?: string;\r\n    sx?: SxProps;\r\n}\r\n\r\nconst Root = styled('div', {\r\n    name: SimpleFormIteratorPrefix,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    '& > ul': {\r\n        padding: 0,\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    '& > ul > li:last-child': {\r\n        // hide the last separator\r\n        borderBottom: 'none',\r\n    },\r\n    [`& .${SimpleFormIteratorClasses.line}`]: {\r\n        display: 'flex',\r\n        listStyleType: 'none',\r\n        borderBottom: `solid 1px ${theme.palette.divider}`,\r\n        [theme.breakpoints.down('sm')]: { display: 'block' },\r\n    },\r\n    [`& .${SimpleFormIteratorClasses.index}`]: {\r\n        display: 'flex',\r\n        alignItems: 'top',\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n        [theme.breakpoints.down('md')]: { display: 'none' },\r\n    },\r\n    [`& .${SimpleFormIteratorClasses.form}`]: {\r\n        alignItems: 'flex-start',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    [`&.fullwidth > ul > li > .${SimpleFormIteratorClasses.form}`]: {\r\n        flex: 2,\r\n    },\r\n    [`& .${SimpleFormIteratorClasses.inline}`]: {\r\n        flexDirection: 'row',\r\n        columnGap: '1em',\r\n        flexWrap: 'wrap',\r\n    },\r\n    [`& .${SimpleFormIteratorClasses.action}`]: {\r\n        marginTop: theme.spacing(0.5),\r\n        visibility: 'hidden',\r\n        '@media(hover:none)': {\r\n            visibility: 'visible',\r\n        },\r\n    },\r\n    [`& .${SimpleFormIteratorClasses.buttons}`]: {\r\n        display: 'flex',\r\n    },\r\n    [`& .${SimpleFormIteratorClasses.add}`]: {\r\n        borderBottom: 'none',\r\n    },\r\n    [`& .${SimpleFormIteratorClasses.clear}`]: {\r\n        borderBottom: 'none',\r\n    },\r\n    [`& .${SimpleFormIteratorClasses.line}:hover > .${SimpleFormIteratorClasses.action}`]: {\r\n        visibility: 'visible',\r\n    },\r\n}));\r\n", "import { useContext, useMemo } from 'react';\r\nimport { ArrayInputContext, ArrayInputContextValue } from './ArrayInputContext';\r\n\r\n/**\r\n * A hook to access an array input methods as provided by react-hook-form.\r\n * Useful to create custom array input iterators.\r\n * @see {ArrayInput}\r\n * @see https://react-hook-form.com/docs/usefieldarray\r\n */\r\nexport const useArrayInput = (\r\n    props?: Partial<ArrayInputContextValue>\r\n): ArrayInputContextValue => {\r\n    const context = useContext(ArrayInputContext);\r\n    const memo = useMemo(\r\n        () => ({\r\n            append: props?.append,\r\n            fields: props?.fields,\r\n            insert: props?.insert,\r\n            move: props?.move,\r\n            prepend: props?.prepend,\r\n            remove: props?.remove,\r\n            replace: props?.replace,\r\n            swap: props?.swap,\r\n            update: props?.update,\r\n        }),\r\n        [props]\r\n    );\r\n\r\n    if (props?.fields) {\r\n        return memo;\r\n    }\r\n\r\n    return context;\r\n};\r\n", "export const SimpleFormIteratorPrefix = 'RaSimpleFormIterator';\r\n\r\nexport const SimpleFormIteratorClasses = {\r\n    action: `${SimpleFormIteratorPrefix}-action`,\r\n    add: `${SimpleFormIteratorPrefix}-add`,\r\n    clear: `${SimpleFormIteratorPrefix}-clear`,\r\n    form: `${SimpleFormIteratorPrefix}-form`,\r\n    index: `${SimpleFormIteratorPrefix}-index`,\r\n    inline: `${SimpleFormIteratorPrefix}-inline`,\r\n    line: `${SimpleFormIteratorPrefix}-line`,\r\n    list: `${SimpleFormIteratorPrefix}-list`,\r\n    buttons: `${SimpleFormIteratorPrefix}-buttons`,\r\n};\r\n", "import { createContext } from 'react';\r\n\r\n/**\r\n * A React context that provides access to a SimpleFormIterator data (the total number of items) and mutators (add, reorder and remove).\r\n * Useful to create custom array input iterators.\r\n * @see {SimpleFormIterator}\r\n * @see {ArrayInput}\r\n */\r\nexport const SimpleFormIteratorContext = createContext<\r\n    SimpleFormIteratorContextValue\r\n>(undefined);\r\n\r\nexport type SimpleFormIteratorContextValue = {\r\n    add: () => void;\r\n    remove: (index: number) => void;\r\n    reOrder: (index: number, newIndex: number) => void;\r\n    source: string;\r\n    total: number;\r\n};\r\n", "import * as React from 'react';\r\nimport {\r\n    Children,\r\n    cloneElement,\r\n    MouseEvent,\r\n    MouseEventHandler,\r\n    isValidElement,\r\n    ReactElement,\r\n    ReactNode,\r\n    useMemo,\r\n} from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport clsx from 'clsx';\r\nimport { RaRecord } from 'ra-core';\r\n\r\nimport { SimpleFormIteratorClasses } from './useSimpleFormIteratorStyles';\r\nimport { useSimpleFormIterator } from './useSimpleFormIterator';\r\nimport { ArrayInputContextValue } from './ArrayInputContext';\r\nimport {\r\n    SimpleFormIteratorItemContext,\r\n    SimpleFormIteratorItemContextValue,\r\n} from './SimpleFormIteratorItemContext';\r\n\r\nexport const SimpleFormIteratorItem = React.forwardRef(\r\n    (props: SimpleFormIteratorItemProps, ref: any) => {\r\n        const {\r\n            children,\r\n            disabled,\r\n            disableReordering,\r\n            disableRemove,\r\n            getItemLabel,\r\n            index,\r\n            inline = false,\r\n            member,\r\n            record,\r\n            removeButton,\r\n            reOrderButtons,\r\n            resource,\r\n            source,\r\n        } = props;\r\n\r\n        const { total, reOrder, remove } = useSimpleFormIterator();\r\n        // Returns a boolean to indicate whether to disable the remove button for certain fields.\r\n        // If disableRemove is a function, then call the function with the current record to\r\n        // determining if the button should be disabled. Otherwise, use a boolean property that\r\n        // enables or disables the button for all of the fields.\r\n        const disableRemoveField = (record: RaRecord) => {\r\n            if (typeof disableRemove === 'boolean') {\r\n                return disableRemove;\r\n            }\r\n            return disableRemove && disableRemove(record);\r\n        };\r\n\r\n        // remove field and call the onClick event of the button passed as removeButton prop\r\n        const handleRemoveButtonClick = (\r\n            originalOnClickHandler: MouseEventHandler,\r\n            index: number\r\n        ) => (event: MouseEvent) => {\r\n            remove(index);\r\n            if (originalOnClickHandler) {\r\n                originalOnClickHandler(event);\r\n            }\r\n        };\r\n\r\n        const context = useMemo<SimpleFormIteratorItemContextValue>(\r\n            () => ({\r\n                index,\r\n                total,\r\n                reOrder: newIndex => reOrder(index, newIndex),\r\n                remove: () => remove(index),\r\n            }),\r\n            [index, total, reOrder, remove]\r\n        );\r\n\r\n        const label =\r\n            typeof getItemLabel === 'function'\r\n                ? getItemLabel(index)\r\n                : getItemLabel;\r\n\r\n        return (\r\n            <SimpleFormIteratorItemContext.Provider value={context}>\r\n                <li className={SimpleFormIteratorClasses.line} ref={ref}>\r\n                    {label && (\r\n                        <Typography\r\n                            variant=\"body2\"\r\n                            className={SimpleFormIteratorClasses.index}\r\n                        >\r\n                            {label}\r\n                        </Typography>\r\n                    )}\r\n                    <section\r\n                        className={clsx(\r\n                            SimpleFormIteratorClasses.form,\r\n                            inline && SimpleFormIteratorClasses.inline\r\n                        )}\r\n                    >\r\n                        {Children.map(\r\n                            children,\r\n                            (input: ReactElement, index2) => {\r\n                                if (!isValidElement<any>(input)) {\r\n                                    return null;\r\n                                }\r\n                                const { source, ...inputProps } = input.props;\r\n                                return cloneElement(input, {\r\n                                    source: source\r\n                                        ? `${member}.${source}`\r\n                                        : member,\r\n                                    index: source ? undefined : index2,\r\n                                    resource,\r\n                                    disabled,\r\n                                    ...inputProps,\r\n                                });\r\n                            }\r\n                        )}\r\n                    </section>\r\n                    {!disabled && (\r\n                        <span className={SimpleFormIteratorClasses.action}>\r\n                            {!disableReordering &&\r\n                                cloneElement(reOrderButtons, {\r\n                                    index,\r\n                                    max: total,\r\n                                    reOrder,\r\n                                    className: clsx(\r\n                                        'button-reorder',\r\n                                        `button-reorder-${source}-${index}`\r\n                                    ),\r\n                                })}\r\n\r\n                            {!disableRemoveField(record) &&\r\n                                cloneElement(removeButton, {\r\n                                    onClick: handleRemoveButtonClick(\r\n                                        removeButton.props.onClick,\r\n                                        index\r\n                                    ),\r\n                                    className: clsx(\r\n                                        'button-remove',\r\n                                        `button-remove-${source}-${index}`\r\n                                    ),\r\n                                })}\r\n                        </span>\r\n                    )}\r\n                </li>\r\n            </SimpleFormIteratorItemContext.Provider>\r\n        );\r\n    }\r\n);\r\n\r\nexport type DisableRemoveFunction = (record: RaRecord) => boolean;\r\n\r\ntype GetItemLabelFunc = (index: number) => string | ReactElement;\r\n\r\nexport type SimpleFormIteratorItemProps = Partial<ArrayInputContextValue> & {\r\n    children?: ReactNode;\r\n    disabled?: boolean;\r\n    disableRemove?: boolean | DisableRemoveFunction;\r\n    disableReordering?: boolean;\r\n    getItemLabel?: boolean | GetItemLabelFunc;\r\n    index: number;\r\n    inline?: boolean;\r\n    member: string;\r\n    onRemoveField: (index: number) => void;\r\n    onReorder: (origin: number, destination: number) => void;\r\n    record: RaRecord;\r\n    removeButton?: ReactElement;\r\n    reOrderButtons?: ReactElement;\r\n    resource: string;\r\n    source: string;\r\n};\r\n", "import { useContext } from 'react';\r\nimport { SimpleFormIteratorContext } from './SimpleFormIteratorContext';\r\n\r\n/**\r\n * A hook that provides access to a SimpleFormIterator data (the total number of items) and mutators (add, reorder and remove).\r\n * Useful to create custom array input iterators.\r\n * @see {SimpleFormIterator}\r\n * @see {ArrayInput}\r\n */\r\nexport const useSimpleFormIterator = () =>\r\n    useContext(SimpleFormIteratorContext);\r\n", "import { createContext } from 'react';\r\n\r\n/**\r\n * A React context that provides access to a SimpleFormIterator item meta (its index and the total number of items) and mutators (reorder and remove this remove).\r\n * Useful to create custom array input iterators.\r\n * @see {SimpleFormIterator}\r\n * @see {ArrayInput}\r\n */\r\nexport const SimpleFormIteratorItemContext = createContext<\r\n    SimpleFormIteratorItemContextValue\r\n>(undefined);\r\n\r\nexport type SimpleFormIteratorItemContextValue = {\r\n    index: number;\r\n    total: number;\r\n    remove: () => void;\r\n    reOrder: (newIndex: number) => void;\r\n};\r\n", "import * as React from 'react';\r\nimport AddIcon from '@mui/icons-material/AddCircleOutline';\r\nimport { useSimpleFormIterator } from './useSimpleFormIterator';\r\n\r\nimport { IconButtonWithTooltip, ButtonProps } from '../../button';\r\n\r\nexport const AddItemButton = (props: ButtonProps) => {\r\n    const { add } = useSimpleFormIterator();\r\n    return (\r\n        <IconButtonWithTooltip\r\n            label=\"ra.action.add\"\r\n            size=\"small\"\r\n            onClick={() => add()}\r\n            color=\"primary\"\r\n            {...props}\r\n        >\r\n            <AddIcon fontSize=\"small\" />\r\n        </IconButtonWithTooltip>\r\n    );\r\n};\r\n", "import * as React from 'react';\r\nimport CloseIcon from '@mui/icons-material/RemoveCircleOutline';\r\n\r\nimport { IconButtonWithTooltip, ButtonProps } from '../../button';\r\nimport { useSimpleFormIteratorItem } from './useSimpleFormIteratorItem';\r\n\r\nexport const RemoveItemButton = (props: Omit<ButtonProps, 'onClick'>) => {\r\n    const { remove } = useSimpleFormIteratorItem();\r\n\r\n    return (\r\n        <IconButtonWithTooltip\r\n            label=\"ra.action.remove\"\r\n            size=\"small\"\r\n            onClick={() => remove()}\r\n            color=\"warning\"\r\n            {...props}\r\n        >\r\n            <CloseIcon fontSize=\"small\" />\r\n        </IconButtonWithTooltip>\r\n    );\r\n};\r\n", "import { useContext } from 'react';\r\nimport { SimpleFormIteratorItemContext } from './SimpleFormIteratorItemContext';\r\n\r\n/**\r\n * A hook that provides access to a SimpleFormIterator item meta (its index and the total number of items) and mutators (reorder and remove this remove).\r\n * Useful to create custom array input iterators.\r\n * @see {SimpleFormIterator}\r\n * @see {ArrayInput}\r\n */\r\nexport const useSimpleFormIteratorItem = () =>\r\n    useContext(SimpleFormIteratorItemContext);\r\n", "import * as React from 'react';\r\n\r\nimport { IconButtonWithTooltip } from '../../button';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowCircleUp';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowCircleDown';\r\nimport { useSimpleFormIteratorItem } from './useSimpleFormIteratorItem';\r\n\r\nexport const ReOrderButtons = ({ className }: { className?: string }) => {\r\n    const { index, total, reOrder } = useSimpleFormIteratorItem();\r\n\r\n    return (\r\n        <span className={className}>\r\n            <IconButtonWithTooltip\r\n                label=\"ra.action.move_up\"\r\n                size=\"small\"\r\n                onClick={() => reOrder(index - 1)}\r\n                disabled={index <= 0}\r\n                color=\"primary\"\r\n            >\r\n                <ArrowUpwardIcon fontSize=\"small\" />\r\n            </IconButtonWithTooltip>\r\n            <IconButtonWithTooltip\r\n                label=\"ra.action.move_down\"\r\n                size=\"small\"\r\n                onClick={() => reOrder(index + 1)}\r\n                disabled={total == null || index >= total - 1}\r\n                color=\"primary\"\r\n            >\r\n                <ArrowDownwardIcon fontSize=\"small\" />\r\n            </IconButtonWithTooltip>\r\n        </span>\r\n    );\r\n};\r\n", "import * as React from 'react';\r\nimport ClearIcon from '@mui/icons-material/HighlightOff';\r\n\r\nimport { ButtonProps, IconButtonWithTooltip } from '../../button';\r\n\r\nexport const ClearArrayButton = (props: ButtonProps) => (\r\n    <IconButtonWithTooltip\r\n        label=\"ra.action.clear_array_input\"\r\n        size=\"small\"\r\n        color=\"warning\"\r\n        {...props}\r\n    >\r\n        <ClearIcon fontSize=\"small\" />\r\n    </IconButtonWithTooltip>\r\n);\r\n\r\nexport default null;\r\n", "import * as React from 'react';\r\nimport {\r\n    isValidElement,\r\n    useCallback,\r\n    useEffect,\r\n    useMemo,\r\n    useRef,\r\n    useState,\r\n    ReactNode,\r\n} from 'react';\r\nimport debounce from 'lodash/debounce';\r\nimport get from 'lodash/get';\r\nimport isEqual from 'lodash/isEqual';\r\nimport clsx from 'clsx';\r\nimport {\r\n    Autocomplete,\r\n    AutocompleteProps,\r\n    Chip,\r\n    TextField,\r\n    TextFieldProps,\r\n    createFilterOptions,\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n    ChoicesProps,\r\n    FieldTitle,\r\n    RaRecord,\r\n    useChoicesContext,\r\n    useInput,\r\n    useSuggestions,\r\n    UseSuggestionsOptions,\r\n    useTimeout,\r\n    useTranslate,\r\n    warning,\r\n    useGetRecordRepresentation,\r\n    useEvent,\r\n} from 'ra-core';\r\nimport {\r\n    SupportCreateSuggestionOptions,\r\n    useSupportCreateSuggestion,\r\n} from './useSupportCreateSuggestion';\r\nimport { CommonInputProps } from './CommonInputProps';\r\nimport { InputHelperText } from './InputHelperText';\r\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\r\n\r\nconst defaultFilterOptions = createFilterOptions();\r\n\r\n/**\r\n * An Input component for an autocomplete field, using an array of objects for the options\r\n *\r\n * Pass possible options as an array of objects in the 'choices' attribute.\r\n *\r\n * By default, the options are built from:\r\n *  - the 'id' property as the option value,\r\n *  - the 'name' property as the option text\r\n * @example\r\n * const choices = [\r\n *    { id: 'M', name: 'Male' },\r\n *    { id: 'F', name: 'Female' },\r\n * ];\r\n * <AutocompleteInput source=\"gender\" choices={choices} />\r\n *\r\n * You can also customize the properties to use for the option name and value,\r\n * thanks to the 'optionText' and 'optionValue' attributes.\r\n * @example\r\n * const choices = [\r\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\r\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\r\n * ];\r\n * <AutocompleteInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\r\n *\r\n * `optionText` also accepts a function, so you can shape the option text at will:\r\n * @example\r\n * const choices = [\r\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\r\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\r\n * ];\r\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\r\n * <AutocompleteInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\r\n *\r\n * `optionText` also accepts a React Element, that can access\r\n * the related choice through the `useRecordContext` hook. You can use Field components there.\r\n * Note that you must also specify the `matchSuggestion` and `inputText` props\r\n * @example\r\n * const choices = [\r\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\r\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\r\n * ];\r\n * const matchSuggestion = (filterValue, choice) => choice.first_name.match(filterValue) || choice.last_name.match(filterValue)\r\n * const inputText = (record) => `${record.fullName} (${record.language})`;\r\n *\r\n * const FullNameField = () => {\r\n *     const record = useRecordContext();\r\n *     return <span>{record.first_name} {record.last_name}</span>;\r\n * }\r\n * <AutocompleteInput source=\"author\" choices={choices} optionText={<FullNameField />} matchSuggestion={matchSuggestion} inputText={inputText} />\r\n *\r\n * The choices are translated by default, so you can use translation identifiers as choices:\r\n * @example\r\n * const choices = [\r\n *    { id: 'M', name: 'myroot.gender.male' },\r\n *    { id: 'F', name: 'myroot.gender.female' },\r\n * ];\r\n *\r\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\r\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\r\n * @example\r\n * <AutocompleteInput source=\"gender\" choices={choices} translateChoice={false}/>\r\n *\r\n * The object passed as `options` props is passed to the Material UI <TextField> component\r\n *\r\n * @example\r\n * <AutocompleteInput source=\"author_id\" options={{ color: 'secondary', InputLabelProps: { shrink: true } }} />\r\n */\r\nexport const AutocompleteInput = <\r\n    OptionType extends RaRecord = RaRecord,\r\n    Multiple extends boolean | undefined = false,\r\n    DisableClearable extends boolean | undefined = false,\r\n    SupportCreate extends boolean | undefined = false\r\n>(\r\n    props: AutocompleteInputProps<\r\n        OptionType,\r\n        Multiple,\r\n        DisableClearable,\r\n        SupportCreate\r\n    >\r\n) => {\r\n    const {\r\n        choices: choicesProp,\r\n        className,\r\n        clearOnBlur = true,\r\n        clearText = 'ra.action.clear_input_value',\r\n        closeText = 'ra.action.close',\r\n        create,\r\n        createLabel,\r\n        createItemLabel,\r\n        createValue,\r\n        debounce: debounceDelay = 250,\r\n        defaultValue,\r\n        emptyText,\r\n        emptyValue = '',\r\n        field: fieldOverride,\r\n        format,\r\n        helperText,\r\n        id: idOverride,\r\n        inputText,\r\n        isFetching: isFetchingProp,\r\n        isLoading: isLoadingProp,\r\n        isRequired: isRequiredOverride,\r\n        label,\r\n        limitChoicesToValue,\r\n        matchSuggestion,\r\n        margin,\r\n        fieldState: fieldStateOverride,\r\n        filterToQuery: filterToQueryProp = DefaultFilterToQuery,\r\n        formState: formStateOverride,\r\n        multiple = false,\r\n        noOptionsText,\r\n        onBlur,\r\n        onChange,\r\n        onCreate,\r\n        openText = 'ra.action.open',\r\n        optionText,\r\n        optionValue,\r\n        parse,\r\n        resource: resourceProp,\r\n        shouldRenderSuggestions,\r\n        setFilter,\r\n        size,\r\n        source: sourceProp,\r\n        suggestionLimit = Infinity,\r\n        TextFieldProps,\r\n        translateChoice,\r\n        validate,\r\n        variant,\r\n        ...rest\r\n    } = props;\r\n\r\n    const filterToQuery = useEvent(filterToQueryProp);\r\n\r\n    const {\r\n        allChoices,\r\n        isLoading,\r\n        error: fetchError,\r\n        resource,\r\n        source,\r\n        setFilters,\r\n        isFromReference,\r\n    } = useChoicesContext({\r\n        choices: choicesProp,\r\n        isFetching: isFetchingProp,\r\n        isLoading: isLoadingProp,\r\n        resource: resourceProp,\r\n        source: sourceProp,\r\n    });\r\n\r\n    const translate = useTranslate();\r\n\r\n    const {\r\n        id,\r\n        field,\r\n        isRequired,\r\n        fieldState: { error, invalid, isTouched },\r\n        formState: { isSubmitted },\r\n    } = useInput({\r\n        defaultValue,\r\n        id: idOverride,\r\n        field: fieldOverride,\r\n        fieldState: fieldStateOverride,\r\n        formState: formStateOverride,\r\n        isRequired: isRequiredOverride,\r\n        onBlur,\r\n        onChange,\r\n        parse,\r\n        format,\r\n        resource,\r\n        source,\r\n        validate,\r\n        ...rest,\r\n    });\r\n\r\n    const finalChoices = useMemo(\r\n        () =>\r\n            // eslint-disable-next-line eqeqeq\r\n            emptyText == undefined || isRequired || multiple\r\n                ? allChoices\r\n                : [\r\n                      {\r\n                          [optionValue || 'id']: emptyValue,\r\n                          [typeof optionText === 'string'\r\n                              ? optionText\r\n                              : 'name']: translate(emptyText, {\r\n                              _: emptyText,\r\n                          }),\r\n                      },\r\n                  ].concat(allChoices),\r\n        [\r\n            allChoices,\r\n            emptyValue,\r\n            emptyText,\r\n            isRequired,\r\n            multiple,\r\n            optionText,\r\n            optionValue,\r\n            translate,\r\n        ]\r\n    );\r\n\r\n    const selectedChoice = useSelectedChoice<\r\n        OptionType,\r\n        Multiple,\r\n        DisableClearable,\r\n        SupportCreate\r\n    >(field.value, {\r\n        choices: finalChoices,\r\n        // @ts-ignore\r\n        multiple,\r\n        optionValue,\r\n    });\r\n\r\n    useEffect(() => {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (emptyValue == null) {\r\n            throw new Error(\r\n                `emptyValue being set to null or undefined is not supported. Use parse to turn the empty string into null.`\r\n            );\r\n        }\r\n    }, [emptyValue]);\r\n\r\n    useEffect(() => {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (isValidElement(optionText) && emptyText != undefined) {\r\n            throw new Error(\r\n                `optionText of type React element is not supported when setting emptyText`\r\n            );\r\n        }\r\n        // eslint-disable-next-line eqeqeq\r\n        if (isValidElement(optionText) && inputText == undefined) {\r\n            throw new Error(`\r\nIf you provided a React element for the optionText prop, you must also provide the inputText prop (used for the text input)`);\r\n        }\r\n        if (\r\n            isValidElement(optionText) &&\r\n            !isFromReference &&\r\n            // eslint-disable-next-line eqeqeq\r\n            matchSuggestion == undefined\r\n        ) {\r\n            throw new Error(`\r\nIf you provided a React element for the optionText prop, you must also provide the matchSuggestion prop (used to match the user input with a choice)`);\r\n        }\r\n    }, [optionText, inputText, matchSuggestion, emptyText, isFromReference]);\r\n\r\n    useEffect(() => {\r\n        warning(\r\n            /* eslint-disable eqeqeq */\r\n            shouldRenderSuggestions != undefined && noOptionsText == undefined,\r\n            `When providing a shouldRenderSuggestions function, we recommend you also provide the noOptionsText prop and set it to a text explaining users why no options are displayed. It supports translation keys.`\r\n        );\r\n        /* eslint-enable eqeqeq */\r\n    }, [shouldRenderSuggestions, noOptionsText]);\r\n\r\n    const getRecordRepresentation = useGetRecordRepresentation(resource);\r\n\r\n    const { getChoiceText, getChoiceValue, getSuggestions } = useSuggestions({\r\n        choices: finalChoices,\r\n        limitChoicesToValue,\r\n        matchSuggestion,\r\n        optionText:\r\n            optionText ??\r\n            (isFromReference ? getRecordRepresentation : undefined),\r\n        optionValue,\r\n        selectedItem: selectedChoice,\r\n        suggestionLimit,\r\n        translateChoice: translateChoice ?? !isFromReference,\r\n    });\r\n\r\n    const [filterValue, setFilterValue] = useState('');\r\n\r\n    const handleChange = (newValue: any) => {\r\n        if (multiple) {\r\n            if (Array.isArray(newValue)) {\r\n                field.onChange(newValue.map(getChoiceValue));\r\n            } else {\r\n                field.onChange([\r\n                    ...(field.value ?? []),\r\n                    getChoiceValue(newValue),\r\n                ]);\r\n            }\r\n        } else {\r\n            field.onChange(getChoiceValue(newValue) ?? emptyValue);\r\n        }\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n    const debouncedSetFilter = useCallback(\r\n        debounce(filter => {\r\n            if (setFilter) {\r\n                return setFilter(filter);\r\n            }\r\n\r\n            if (choicesProp) {\r\n                return;\r\n            }\r\n\r\n            setFilters(filterToQuery(filter), undefined, true);\r\n        }, debounceDelay),\r\n        [debounceDelay, setFilters, setFilter]\r\n    );\r\n\r\n    // We must reset the filter every time the value changes to ensure we\r\n    // display at least some choices even if the input has a value.\r\n    // Otherwise, it would only display the currently selected one and the user\r\n    // would have to first clear the input before seeing any other choices\r\n    const currentValue = useRef(field.value);\r\n    useEffect(() => {\r\n        if (!isEqual(currentValue.current, field.value)) {\r\n            currentValue.current = field.value;\r\n            debouncedSetFilter('');\r\n        }\r\n    }, [field.value]); // eslint-disable-line\r\n\r\n    const {\r\n        getCreateItem,\r\n        handleChange: handleChangeWithCreateSupport,\r\n        createElement,\r\n        createId,\r\n    } = useSupportCreateSuggestion({\r\n        create,\r\n        createLabel,\r\n        createItemLabel,\r\n        createValue,\r\n        handleChange,\r\n        filter: filterValue,\r\n        onCreate,\r\n        optionText,\r\n    });\r\n\r\n    const getOptionLabel = useCallback(\r\n        (option: any, isListItem: boolean = false) => {\r\n            // eslint-disable-next-line eqeqeq\r\n            if (option == undefined) {\r\n                return '';\r\n            }\r\n\r\n            // Value selected with enter, right from the input\r\n            if (typeof option === 'string') {\r\n                return option;\r\n            }\r\n\r\n            if (option?.id === createId) {\r\n                return get(\r\n                    option,\r\n                    typeof optionText === 'string' ? optionText : 'name'\r\n                );\r\n            }\r\n\r\n            if (!isListItem && option[optionValue || 'id'] === emptyValue) {\r\n                return get(\r\n                    option,\r\n                    typeof optionText === 'string' ? optionText : 'name'\r\n                );\r\n            }\r\n\r\n            if (!isListItem && inputText !== undefined) {\r\n                return inputText(option);\r\n            }\r\n\r\n            return getChoiceText(option);\r\n        },\r\n        [\r\n            getChoiceText,\r\n            inputText,\r\n            createId,\r\n            optionText,\r\n            optionValue,\r\n            emptyValue,\r\n        ]\r\n    );\r\n\r\n    const finalOnBlur = useCallback((): void => {\r\n        if (clearOnBlur && !multiple) {\r\n            const optionLabel = getOptionLabel(selectedChoice);\r\n            if (!isEqual(optionLabel, filterValue)) {\r\n                setFilterValue(optionLabel);\r\n                debouncedSetFilter('');\r\n            }\r\n        }\r\n        field.onBlur();\r\n    }, [\r\n        clearOnBlur,\r\n        field,\r\n        getOptionLabel,\r\n        selectedChoice,\r\n        filterValue,\r\n        debouncedSetFilter,\r\n        multiple,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (!multiple) {\r\n            const optionLabel = getOptionLabel(selectedChoice);\r\n            if (typeof optionLabel === 'string') {\r\n                setFilterValue(optionLabel);\r\n            } else {\r\n                throw new Error(\r\n                    'When optionText returns a React element, you must also provide the inputText prop'\r\n                );\r\n            }\r\n        }\r\n    }, [getOptionLabel, multiple, selectedChoice]);\r\n\r\n    const handleInputChange = (\r\n        event: any,\r\n        newInputValue: string,\r\n        _reason: string\r\n    ) => {\r\n        if (\r\n            event?.type === 'change' ||\r\n            !doesQueryMatchSelection(newInputValue)\r\n        ) {\r\n            setFilterValue(newInputValue);\r\n            debouncedSetFilter(newInputValue);\r\n        }\r\n    };\r\n\r\n    const doesQueryMatchSelection = useCallback(\r\n        (filter: string) => {\r\n            let selectedItemTexts;\r\n\r\n            if (multiple) {\r\n                selectedItemTexts = selectedChoice.map(item =>\r\n                    getOptionLabel(item)\r\n                );\r\n            } else {\r\n                selectedItemTexts = [getOptionLabel(selectedChoice)];\r\n            }\r\n\r\n            return selectedItemTexts.includes(filter);\r\n        },\r\n        [getOptionLabel, multiple, selectedChoice]\r\n    );\r\n    const doesQueryMatchSuggestion = useCallback(\r\n        filter => {\r\n            const hasOption = !!finalChoices\r\n                ? finalChoices.some(choice => getOptionLabel(choice) === filter)\r\n                : false;\r\n\r\n            return doesQueryMatchSelection(filter) || hasOption;\r\n        },\r\n        [finalChoices, getOptionLabel, doesQueryMatchSelection]\r\n    );\r\n\r\n    const filterOptions = (options, params) => {\r\n        let filteredOptions =\r\n            isFromReference || // When used inside a reference, AutocompleteInput shouldn't do the filtering as it's done by the reference input\r\n            matchSuggestion || // When using element as optionText (and matchSuggestion), options are filtered by getSuggestions, so they shouldn't be filtered here\r\n            limitChoicesToValue // When limiting choices to values (why? it's legacy!), options are also filtered by getSuggestions, so they shouldn't be filtered here\r\n                ? options\r\n                : defaultFilterOptions(options, params); // Otherwise, we let Material UI's Autocomplete do the filtering\r\n\r\n        // add create option if necessary\r\n        const { inputValue } = params;\r\n        if (\r\n            (onCreate || create) &&\r\n            inputValue !== '' &&\r\n            !doesQueryMatchSuggestion(filterValue)\r\n        ) {\r\n            filteredOptions = filteredOptions.concat(getCreateItem(inputValue));\r\n        }\r\n\r\n        return filteredOptions;\r\n    };\r\n\r\n    const handleAutocompleteChange = (\r\n        event: any,\r\n        newValue: any,\r\n        _reason: string\r\n    ) => {\r\n        handleChangeWithCreateSupport(newValue != null ? newValue : emptyValue);\r\n    };\r\n\r\n    const oneSecondHasPassed = useTimeout(1000, filterValue);\r\n\r\n    const suggestions = useMemo(() => {\r\n        if (!isFromReference && (matchSuggestion || limitChoicesToValue)) {\r\n            return getSuggestions(filterValue);\r\n        }\r\n        return finalChoices?.slice(0, suggestionLimit) || [];\r\n    }, [\r\n        finalChoices,\r\n        filterValue,\r\n        getSuggestions,\r\n        limitChoicesToValue,\r\n        matchSuggestion,\r\n        suggestionLimit,\r\n        isFromReference,\r\n    ]);\r\n\r\n    const isOptionEqualToValue = (option, value) => {\r\n        return String(getChoiceValue(option)) === String(getChoiceValue(value));\r\n    };\r\n    const renderHelperText =\r\n        !!fetchError ||\r\n        helperText !== false ||\r\n        ((isTouched || isSubmitted) && invalid);\r\n\r\n    return (\r\n        <>\r\n            <StyledAutocomplete\r\n                blurOnSelect\r\n                className={clsx('ra-input', `ra-input-${source}`, className)}\r\n                clearText={translate(clearText, { _: clearText })}\r\n                closeText={translate(closeText, { _: closeText })}\r\n                openOnFocus\r\n                openText={translate(openText, { _: openText })}\r\n                id={id}\r\n                isOptionEqualToValue={isOptionEqualToValue}\r\n                filterSelectedOptions\r\n                renderInput={params => (\r\n                    <TextField\r\n                        name={field.name}\r\n                        label={\r\n                            <FieldTitle\r\n                                label={label}\r\n                                source={source}\r\n                                resource={resourceProp}\r\n                                isRequired={isRequired}\r\n                            />\r\n                        }\r\n                        error={\r\n                            !!fetchError ||\r\n                            ((isTouched || isSubmitted) && invalid)\r\n                        }\r\n                        helperText={\r\n                            renderHelperText ? (\r\n                                <InputHelperText\r\n                                    touched={\r\n                                        isTouched || isSubmitted || fetchError\r\n                                    }\r\n                                    error={\r\n                                        error?.message || fetchError?.message\r\n                                    }\r\n                                    helperText={helperText}\r\n                                />\r\n                            ) : null\r\n                        }\r\n                        margin={margin}\r\n                        variant={variant}\r\n                        className={AutocompleteInputClasses.textField}\r\n                        {...TextFieldProps}\r\n                        {...params}\r\n                        size={size}\r\n                    />\r\n                )}\r\n                multiple={multiple}\r\n                renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                        <Chip\r\n                            label={\r\n                                isValidElement(optionText)\r\n                                    ? inputText(option)\r\n                                    : getChoiceText(option)\r\n                            }\r\n                            sx={{\r\n                                '.MuiSvgIcon-root': {\r\n                                    // FIXME: Workaround to allow choices deletion\r\n                                    // Maybe related to storybook and mui using different versions of emotion\r\n                                    zIndex: 100,\r\n                                },\r\n                            }}\r\n                            size=\"small\"\r\n                            {...getTagProps({ index })}\r\n                        />\r\n                    ))\r\n                }\r\n                noOptionsText={\r\n                    typeof noOptionsText === 'string'\r\n                        ? translate(noOptionsText, { _: noOptionsText })\r\n                        : noOptionsText\r\n                }\r\n                selectOnFocus\r\n                clearOnBlur={clearOnBlur}\r\n                {...sanitizeInputRestProps(rest)}\r\n                freeSolo={!!create || !!onCreate}\r\n                handleHomeEndKeys={!!create || !!onCreate}\r\n                filterOptions={filterOptions}\r\n                options={\r\n                    shouldRenderSuggestions == undefined || // eslint-disable-line eqeqeq\r\n                    shouldRenderSuggestions(filterValue)\r\n                        ? suggestions\r\n                        : []\r\n                }\r\n                getOptionLabel={getOptionLabel}\r\n                inputValue={filterValue}\r\n                loading={\r\n                    isLoading &&\r\n                    (!finalChoices || finalChoices.length === 0) &&\r\n                    oneSecondHasPassed\r\n                }\r\n                value={selectedChoice}\r\n                onChange={handleAutocompleteChange}\r\n                onBlur={finalOnBlur}\r\n                onInputChange={handleInputChange}\r\n                renderOption={(props, record: RaRecord) => {\r\n                    (props as {\r\n                        key: string;\r\n                    }).key = getChoiceValue(record);\r\n\r\n                    const optionLabel = getOptionLabel(record, true);\r\n\r\n                    return (\r\n                        <li {...props}>\r\n                            {optionLabel === '' ? ' ' : optionLabel}\r\n                        </li>\r\n                    );\r\n                }}\r\n            />\r\n            {createElement}\r\n        </>\r\n    );\r\n};\r\n\r\nconst PREFIX = 'RaAutocompleteInput';\r\n\r\nexport const AutocompleteInputClasses = {\r\n    textField: `${PREFIX}-textField`,\r\n};\r\n\r\nconst StyledAutocomplete = styled(Autocomplete, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    [`& .${AutocompleteInputClasses.textField}`]: {\r\n        minWidth: theme.spacing(20),\r\n    },\r\n}));\r\n\r\n// @ts-ignore\r\nexport interface AutocompleteInputProps<\r\n    OptionType extends any = RaRecord,\r\n    Multiple extends boolean | undefined = false,\r\n    DisableClearable extends boolean | undefined = false,\r\n    SupportCreate extends boolean | undefined = false\r\n> extends Omit<CommonInputProps, 'source'>,\r\n        ChoicesProps,\r\n        UseSuggestionsOptions,\r\n        Omit<SupportCreateSuggestionOptions, 'handleChange' | 'optionText'>,\r\n        Omit<\r\n            AutocompleteProps<\r\n                OptionType,\r\n                Multiple,\r\n                DisableClearable,\r\n                SupportCreate\r\n            >,\r\n            'onChange' | 'options' | 'renderInput'\r\n        > {\r\n    children?: ReactNode;\r\n    debounce?: number;\r\n    emptyText?: string;\r\n    emptyValue?: any;\r\n    filterToQuery?: (searchText: string) => any;\r\n    inputText?: (option: any) => string;\r\n    setFilter?: (value: string) => void;\r\n    shouldRenderSuggestions?: any;\r\n    // Source is optional as AutocompleteInput can be used inside a ReferenceInput that already defines the source\r\n    source?: string;\r\n    TextFieldProps?: TextFieldProps;\r\n}\r\n\r\n/**\r\n * Returns the selected choice (or choices if multiple) by matching the input value with the choices.\r\n */\r\nconst useSelectedChoice = <\r\n    OptionType extends any = RaRecord,\r\n    Multiple extends boolean | undefined = false,\r\n    DisableClearable extends boolean | undefined = false,\r\n    SupportCreate extends boolean | undefined = false\r\n>(\r\n    value: any,\r\n    {\r\n        choices,\r\n        multiple,\r\n        optionValue,\r\n    }: AutocompleteInputProps<\r\n        OptionType,\r\n        Multiple,\r\n        DisableClearable,\r\n        SupportCreate\r\n    >\r\n) => {\r\n    const selectedChoiceRef = useRef(\r\n        getSelectedItems(choices, value, optionValue, multiple)\r\n    );\r\n    const [selectedChoice, setSelectedChoice] = useState<RaRecord | RaRecord[]>(\r\n        () => getSelectedItems(choices, value, optionValue, multiple)\r\n    );\r\n\r\n    // As the selected choices are objects, we want to ensure we pass the same\r\n    // reference to the Autocomplete as it would reset its filter value otherwise.\r\n    useEffect(() => {\r\n        const newSelectedItems = getSelectedItems(\r\n            choices,\r\n            value,\r\n            optionValue,\r\n            multiple\r\n        );\r\n\r\n        if (\r\n            !areSelectedItemsEqual(\r\n                selectedChoiceRef.current,\r\n                newSelectedItems,\r\n                optionValue,\r\n                multiple\r\n            )\r\n        ) {\r\n            selectedChoiceRef.current = newSelectedItems;\r\n            setSelectedChoice(newSelectedItems);\r\n        }\r\n    }, [choices, value, multiple, optionValue]);\r\n    return selectedChoice || null;\r\n};\r\n\r\nconst getSelectedItems = (\r\n    choices = [],\r\n    value,\r\n    optionValue = 'id',\r\n    multiple\r\n) => {\r\n    if (multiple) {\r\n        return (Array.isArray(value ?? []) ? value : [value])\r\n            .map(item =>\r\n                choices.find(\r\n                    choice => String(item) === String(get(choice, optionValue))\r\n                )\r\n            )\r\n            .filter(item => !!item);\r\n    }\r\n    return (\r\n        choices.find(\r\n            choice => String(get(choice, optionValue)) === String(value)\r\n        ) || ''\r\n    );\r\n};\r\n\r\nconst areSelectedItemsEqual = (\r\n    selectedChoice: RaRecord | RaRecord[],\r\n    newSelectedChoice: RaRecord | RaRecord[],\r\n    optionValue = 'id',\r\n    multiple: boolean\r\n) => {\r\n    if (multiple) {\r\n        const selectedChoiceArray = (selectedChoice as RaRecord[]) ?? [];\r\n        const newSelectedChoiceArray = (newSelectedChoice as RaRecord[]) ?? [];\r\n        if (selectedChoiceArray.length !== newSelectedChoiceArray.length) {\r\n            return false;\r\n        }\r\n        const equalityArray = selectedChoiceArray.map(choice =>\r\n            newSelectedChoiceArray.some(\r\n                newChoice =>\r\n                    get(newChoice, optionValue) === get(choice, optionValue)\r\n            )\r\n        );\r\n        return !equalityArray.some(item => item === false);\r\n    }\r\n    return (\r\n        get(selectedChoice, optionValue) === get(newSelectedChoice, optionValue)\r\n    );\r\n};\r\n\r\nconst DefaultFilterToQuery = searchText => ({ q: searchText });\r\n", "import * as React from 'react';\r\nimport {\r\n    ChangeEvent,\r\n    createContext,\r\n    isValidElement,\r\n    ReactElement,\r\n    useContext,\r\n    useEffect,\r\n    useMemo,\r\n    useRef,\r\n    useState,\r\n} from 'react';\r\nimport { Identifier, OptionText, useTranslate } from 'ra-core';\r\nimport set from 'lodash/set';\r\n\r\n/**\r\n * This hook provides support for suggestion creation in inputs which have choices.\r\n *\r\n * @param options The hook option\r\n * @param {ReactElement} options.create A react element which will be rendered when users choose to create a new choice. This component must call the `useCreateSuggestionContext` hook which provides `onCancel`, `onCreate` and `filter`. See the examples.\r\n * @param {String} options.createLabel Optional. The label for the choice item allowing users to create a new choice. Can be a translation key. Defaults to `ra.action.create`.\r\n * @param {String} options.createItemLabel Optional. The label for the choice item allowing users to create a new choice when they already entered a filter. Can be a translation key. The translation will receive an `item` parameter. Defaults to `ra.action.create_item`.\r\n * @param {any} options.createValue Optional. The value for the choice item allowing users to create a new choice. Defaults to `@@ra-create`.\r\n * @param {String} options.filter Optional. The filter users may have already entered. Useful for autocomplete inputs for example.\r\n * @param {OnCreateHandler} options.onCreate Optional. A function which will be called when users choose to create a new choice, if the `create` option wasn't provided.\r\n * @param {Function} options.handleChange A function to pass to the input. Receives the same parameter as the original event handler and an additional newItem parameter if a new item was create.\r\n * @returns {UseSupportCreateValue} An object with the following properties:\r\n * - getCreateItem: a function which will return the label of the choice for create a new choice.\r\n * - createElement: a React element to render after the input. It will be rendered when users choose to create a new choice. It renders null otherwise.\r\n */\r\nexport const useSupportCreateSuggestion = (\r\n    options: SupportCreateSuggestionOptions\r\n): UseSupportCreateValue => {\r\n    const {\r\n        create,\r\n        createLabel = 'ra.action.create',\r\n        createItemLabel = 'ra.action.create_item',\r\n        createValue = '@@ra-create',\r\n        optionText = 'name',\r\n        filter,\r\n        handleChange,\r\n        onCreate,\r\n    } = options;\r\n    const translate = useTranslate();\r\n    const [renderOnCreate, setRenderOnCreate] = useState(false);\r\n    const filterRef = useRef(filter);\r\n\r\n    useEffect(() => {\r\n        if (filterRef.current !== filter && filter !== '') {\r\n            filterRef.current = filter;\r\n        }\r\n    }, [filter]);\r\n\r\n    const context = useMemo(\r\n        () => ({\r\n            filter: filterRef.current,\r\n            onCancel: () => setRenderOnCreate(false),\r\n            onCreate: item => {\r\n                setRenderOnCreate(false);\r\n                handleChange(item);\r\n            },\r\n        }),\r\n        [handleChange]\r\n    );\r\n\r\n    return {\r\n        createId: createValue,\r\n        getCreateItem: () => {\r\n            if (typeof optionText !== 'string') {\r\n                return {\r\n                    id: createValue,\r\n                    name:\r\n                        filter && createItemLabel\r\n                            ? translate(createItemLabel, {\r\n                                  item: filter,\r\n                                  _: createItemLabel,\r\n                              })\r\n                            : translate(createLabel, { _: createLabel }),\r\n                };\r\n            }\r\n            return set(\r\n                {\r\n                    id: createValue,\r\n                },\r\n                optionText,\r\n                filter && createItemLabel\r\n                    ? translate(createItemLabel, {\r\n                          item: filter,\r\n                          _: createItemLabel,\r\n                      })\r\n                    : translate(createLabel, { _: createLabel })\r\n            );\r\n        },\r\n        handleChange: async (eventOrValue: MouseEvent | any) => {\r\n            const value = eventOrValue?.target?.value || eventOrValue;\r\n            const finalValue = Array.isArray(value) ? [...value].pop() : value;\r\n\r\n            if (finalValue?.id === createValue || finalValue === createValue) {\r\n                if (!isValidElement(create)) {\r\n                    const newSuggestion = await onCreate(filter);\r\n                    if (newSuggestion) {\r\n                        handleChange(newSuggestion);\r\n                        return;\r\n                    }\r\n                } else {\r\n                    setRenderOnCreate(true);\r\n                    return;\r\n                }\r\n            }\r\n            handleChange(eventOrValue);\r\n        },\r\n        createElement:\r\n            renderOnCreate && isValidElement(create) ? (\r\n                <CreateSuggestionContext.Provider value={context}>\r\n                    {create}\r\n                </CreateSuggestionContext.Provider>\r\n            ) : null,\r\n    };\r\n};\r\n\r\nexport interface SupportCreateSuggestionOptions {\r\n    create?: ReactElement;\r\n    createValue?: string;\r\n    createLabel?: string;\r\n    createItemLabel?: string;\r\n    filter?: string;\r\n    handleChange: (value: any) => void;\r\n    onCreate?: OnCreateHandler;\r\n    optionText?: OptionText;\r\n}\r\n\r\nexport interface UseSupportCreateValue {\r\n    createId: string;\r\n    getCreateItem: (\r\n        filterValue?: string\r\n    ) => { id: Identifier; [key: string]: any };\r\n    handleChange: (eventOrValue: ChangeEvent | any) => Promise<void>;\r\n    createElement: ReactElement | null;\r\n}\r\n\r\nconst CreateSuggestionContext = createContext<CreateSuggestionContextValue>(\r\n    undefined\r\n);\r\n\r\ninterface CreateSuggestionContextValue {\r\n    filter?: string;\r\n    onCreate: (choice: any) => void;\r\n    onCancel: () => void;\r\n}\r\nexport const useCreateSuggestionContext = () =>\r\n    useContext(CreateSuggestionContext);\r\n\r\nexport type OnCreateHandler = (filter?: string) => any | Promise<any>;\r\n", "import * as React from 'react';\r\nimport { RaRecord } from 'ra-core';\r\nimport { AutocompleteInput, AutocompleteInputProps } from './AutocompleteInput';\r\n\r\n/**\r\n * An Input component for an autocomplete field, using an array of objects for the options\r\n *\r\n * Pass possible options as an array of objects in the 'choices' attribute.\r\n *\r\n * By default, the options are built from:\r\n *  - the 'id' property as the option value,\r\n *  - the 'name' property as the option text\r\n * @example\r\n * const choices = [\r\n *    { id: 'M', name: 'Male' },\r\n *    { id: 'F', name: 'Female' },\r\n * ];\r\n * <AutocompleteArrayInput source=\"gender\" choices={choices} />\r\n *\r\n * You can also customize the properties to use for the option name and value,\r\n * thanks to the 'optionText' and 'optionValue' attributes.\r\n * @example\r\n * const choices = [\r\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\r\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\r\n * ];\r\n * <AutocompleteArrayInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\r\n *\r\n * `optionText` also accepts a function, so you can shape the option text at will:\r\n * @example\r\n * const choices = [\r\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\r\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\r\n * ];\r\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\r\n * <AutocompleteArrayInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\r\n *\r\n * `optionText` also accepts a React Element, that can access\r\n * the related choice through the `useRecordContext` hook. You can use Field components there.\r\n * Note that you must also specify the `matchSuggestion` and `inputText` props\r\n * @example\r\n * const choices = [\r\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\r\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\r\n * ];\r\n * const matchSuggestion = (filterValue, choice) => choice.first_name.match(filterValue) || choice.last_name.match(filterValue)\r\n * const inputText = (record) => `${record.fullName} (${record.language})`;\r\n *\r\n * const FullNameField = () => {\r\n *     const record = useRecordContext();\r\n *     return <span>{record.first_name} {record.last_name}</span>;\r\n * }\r\n *\r\n * <AutocompleteArrayInput source=\"gender\" choices={choices} optionText={<FullNameField />} matchSuggestion={matchSuggestion} />\r\n *\r\n * The choices are translated by default, so you can use translation identifiers as choices:\r\n * @example\r\n * const choices = [\r\n *    { id: 'M', name: 'myroot.gender.male' },\r\n *    { id: 'F', name: 'myroot.gender.female' },\r\n * ];\r\n *\r\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\r\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\r\n * @example\r\n * <AutocompleteArrayInput source=\"gender\" choices={choices} translateChoice={false}/>\r\n */\r\n\r\nexport const AutocompleteArrayInput = <\r\n    OptionType extends RaRecord = RaRecord,\r\n    DisableClearable extends boolean | undefined = boolean | undefined,\r\n    SupportCreate extends boolean | undefined = false\r\n>({\r\n    defaultValue,\r\n    ...props\r\n}: AutocompleteArrayInputProps<\r\n    OptionType,\r\n    DisableClearable,\r\n    SupportCreate\r\n>) => (\r\n    <AutocompleteInput<OptionType, true, DisableClearable, SupportCreate>\r\n        {...props}\r\n        multiple\r\n        defaultValue={defaultValue ?? []}\r\n    />\r\n);\r\n\r\nexport type AutocompleteArrayInputProps<\r\n    OptionType extends any = RaRecord,\r\n    DisableClearable extends boolean | undefined = false,\r\n    SupportCreate extends boolean | undefined = false\r\n> = Omit<\r\n    AutocompleteInputProps<OptionType, true, DisableClearable, SupportCreate>,\r\n    'defaultValue'\r\n> & {\r\n    defaultValue?: any[];\r\n};\r\n", "import * as React from 'react';\r\nimport { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormGroup, { FormGroupProps } from '@mui/material/FormGroup';\r\nimport Switch, { SwitchProps } from '@mui/material/Switch';\r\nimport { FieldTitle, useInput } from 'ra-core';\r\n\r\nimport { CommonInputProps } from './CommonInputProps';\r\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\r\nimport { InputHelperText } from './InputHelperText';\r\nimport { InputPropTypes } from './InputPropTypes';\r\n\r\nexport const BooleanInput = (props: BooleanInputProps) => {\r\n    const {\r\n        className,\r\n        row = false,\r\n        defaultValue = false,\r\n        format,\r\n        label,\r\n        fullWidth,\r\n        helperText,\r\n        onBlur,\r\n        onChange,\r\n        onFocus,\r\n        disabled,\r\n        parse,\r\n        resource,\r\n        source,\r\n        validate,\r\n        options = defaultOptions,\r\n        sx,\r\n        ...rest\r\n    } = props;\r\n    const {\r\n        id,\r\n        field,\r\n        isRequired,\r\n        fieldState: { error, invalid, isTouched },\r\n        formState: { isSubmitted },\r\n    } = useInput({\r\n        defaultValue,\r\n        format,\r\n        parse,\r\n        resource,\r\n        source,\r\n        onBlur,\r\n        onChange,\r\n        type: 'checkbox',\r\n        validate,\r\n        ...rest,\r\n    });\r\n\r\n    const handleChange = useCallback(\r\n        event => {\r\n            field.onChange(event);\r\n            // Ensure field is considered as touched\r\n            field.onBlur();\r\n        },\r\n        [field]\r\n    );\r\n\r\n    const renderHelperText =\r\n        helperText !== false || ((isTouched || isSubmitted) && invalid);\r\n\r\n    return (\r\n        <FormGroup\r\n            className={clsx('ra-input', `ra-input-${source}`, className)}\r\n            row={row}\r\n            sx={sx}\r\n        >\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch\r\n                        id={id}\r\n                        name={field.name}\r\n                        color=\"primary\"\r\n                        onChange={handleChange}\r\n                        onFocus={onFocus}\r\n                        checked={Boolean(field.value)}\r\n                        {...sanitizeInputRestProps(rest)}\r\n                        {...options}\r\n                        disabled={disabled}\r\n                    />\r\n                }\r\n                label={\r\n                    <FieldTitle\r\n                        label={label}\r\n                        source={source}\r\n                        resource={resource}\r\n                        isRequired={isRequired}\r\n                    />\r\n                }\r\n            />\r\n            {renderHelperText ? (\r\n                <FormHelperText error={(isTouched || isSubmitted) && invalid}>\r\n                    <InputHelperText\r\n                        touched={isTouched || isSubmitted}\r\n                        error={error?.message}\r\n                        helperText={helperText}\r\n                    />\r\n                </FormHelperText>\r\n            ) : null}\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nBooleanInput.propTypes = {\r\n    ...InputPropTypes,\r\n    // @ts-ignore\r\n    options: PropTypes.shape(Switch.propTypes),\r\n    disabled: PropTypes.bool,\r\n};\r\n\r\nexport type BooleanInputProps = CommonInputProps &\r\n    SwitchProps &\r\n    Omit<FormGroupProps, 'defaultValue' | 'onChange' | 'onBlur' | 'onFocus'> & {\r\n        options?: SwitchProps;\r\n    };\r\n\r\nconst defaultOptions = {};\r\n", "import PropTypes from 'prop-types';\r\n\r\n/**\r\n * Common PropTypes for all react-admin inputs\r\n */\r\nexport const InputPropTypes = {\r\n    label: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.element,\r\n    ]),\r\n    resource: PropTypes.string,\r\n    source: PropTypes.string,\r\n};\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport clsx from 'clsx';\r\nimport { useCallback, FunctionComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormControl, { FormControlProps } from '@mui/material/FormControl';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport { CheckboxProps } from '@mui/material/Checkbox';\r\nimport { FieldTitle, useInput, ChoicesProps, useChoicesContext } from 'ra-core';\r\n\r\nimport { CommonInputProps } from './CommonInputProps';\r\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\r\nimport { CheckboxGroupInputItem } from './CheckboxGroupInputItem';\r\nimport { InputHelperText } from './InputHelperText';\r\nimport { Labeled } from '../Labeled';\r\nimport { LinearProgress } from '../layout';\r\n\r\n/**\r\n * An Input component for a checkbox group, using an array of objects for the options\r\n *\r\n * Pass possible options as an array of objects in the 'choices' attribute.\r\n *\r\n * The expected input must be an array of identifiers (e.g. [12, 31]) which correspond to\r\n * the 'optionValue' of 'choices' attribute objects.\r\n *\r\n * By default, the options are built from:\r\n *  - the 'id' property as the option value,\r\n *  - the 'name' property as the option text\r\n * @example\r\n * const choices = [\r\n *     { id: 12, name: 'Ray Hakt' },\r\n *     { id: 31, name: 'Ann Gullar' },\r\n *     { id: 42, name: 'Sean Phonee' },\r\n * ];\r\n * <CheckboxGroupInput source=\"recipients\" choices={choices} />\r\n *\r\n * You can also customize the properties to use for the option name and value,\r\n * thanks to the 'optionText' and 'optionValue' attributes.\r\n * @example\r\n * const choices = [\r\n *    { _id: 123, full_name: 'Leo Tolstoi' },\r\n *    { _id: 456, full_name: 'Jane Austen' },\r\n * ];\r\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\r\n *\r\n * `optionText` also accepts a function, so you can shape the option text at will:\r\n * @example\r\n * const choices = [\r\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\r\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\r\n * ];\r\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\r\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText={optionRenderer} />\r\n *\r\n * `optionText` also accepts a React Element, that can access\r\n * the related choice through the `useRecordContext` hook. You can use Field components there.\r\n * @example\r\n * const choices = [\r\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\r\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\r\n * ];\r\n * const FullNameField = () => {\r\n *     const record = useRecordContext();\r\n *     return <span>{record.first_name} {record.last_name}</span>;\r\n * };\r\n *\r\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText={<FullNameField />}/>\r\n *\r\n * The choices are translated by default, so you can use translation identifiers as choices:\r\n * @example\r\n * const choices = [\r\n *    { id: 'programming', name: 'myroot.category.programming' },\r\n *    { id: 'lifestyle', name: 'myroot.category.lifestyle' },\r\n *    { id: 'photography', name: 'myroot.category.photography' },\r\n * ];\r\n *\r\n * However, in some cases (e.g. inside a `<ReferenceArrayInput>`), you may not want\r\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\r\n * @example\r\n * <CheckboxGroupInput source=\"tags\" choices={choices} translateChoice={false}/>\r\n *\r\n * The object passed as `options` props is passed to the Material UI <Checkbox> components\r\n */\r\nexport const CheckboxGroupInput: FunctionComponent<CheckboxGroupInputProps> = props => {\r\n    const {\r\n        choices: choicesProp,\r\n        className,\r\n        classes: classesOverride,\r\n        format,\r\n        helperText,\r\n        label,\r\n        labelPlacement,\r\n        isLoading: isLoadingProp,\r\n        isFetching: isFetchingProp,\r\n        margin = 'dense',\r\n        onBlur,\r\n        onChange,\r\n        options,\r\n        optionText = 'name',\r\n        optionValue = 'id',\r\n        parse,\r\n        resource: resourceProp,\r\n        row = true,\r\n        source: sourceProp,\r\n        translateChoice,\r\n        validate,\r\n        ...rest\r\n    } = props;\r\n\r\n    const {\r\n        allChoices,\r\n        isLoading,\r\n        error: fetchError,\r\n        resource,\r\n        source,\r\n        isFromReference,\r\n    } = useChoicesContext({\r\n        choices: choicesProp,\r\n        isFetching: isFetchingProp,\r\n        isLoading: isLoadingProp,\r\n        resource: resourceProp,\r\n        source: sourceProp,\r\n    });\r\n\r\n    if (source === undefined) {\r\n        throw new Error(\r\n            `If you're not wrapping the CheckboxGroupInput inside a ReferenceArrayInput, you must provide the source prop`\r\n        );\r\n    }\r\n\r\n    if (!isLoading && !fetchError && allChoices === undefined) {\r\n        throw new Error(\r\n            `If you're not wrapping the CheckboxGroupInput inside a ReferenceArrayInput, you must provide the choices prop`\r\n        );\r\n    }\r\n\r\n    const {\r\n        field: { onChange: formOnChange, onBlur: formOnBlur, value },\r\n        fieldState: { error, invalid, isTouched },\r\n        formState: { isSubmitted },\r\n        id,\r\n        isRequired,\r\n    } = useInput({\r\n        format,\r\n        parse,\r\n        resource,\r\n        source,\r\n        validate,\r\n        onChange,\r\n        onBlur,\r\n        ...rest,\r\n    });\r\n\r\n    const handleCheck = useCallback(\r\n        (event, isChecked) => {\r\n            let newValue;\r\n\r\n            if (\r\n                allChoices.every(\r\n                    item => typeof get(item, optionValue) === 'number'\r\n                )\r\n            ) {\r\n                try {\r\n                    // try to convert string value to number, e.g. '123'\r\n                    newValue = JSON.parse(event.target.value);\r\n                } catch (e) {\r\n                    // impossible to convert value, e.g. 'abc'\r\n                    newValue = event.target.value;\r\n                }\r\n            } else {\r\n                newValue = event.target.value;\r\n            }\r\n\r\n            if (isChecked) {\r\n                formOnChange([...(value || []), ...[newValue]]);\r\n            } else {\r\n                formOnChange(value.filter(v => v != newValue)); // eslint-disable-line eqeqeq\r\n            }\r\n            formOnBlur(); // Ensure field is flagged as touched\r\n        },\r\n        [allChoices, formOnChange, formOnBlur, optionValue, value]\r\n    );\r\n\r\n    if (isLoading && (!allChoices || allChoices.length === 0)) {\r\n        return (\r\n            <Labeled\r\n                id={id}\r\n                label={label}\r\n                source={source}\r\n                resource={resource}\r\n                className={clsx('ra-input', `ra-input-${source}`, className)}\r\n                isRequired={isRequired}\r\n                {...rest}\r\n            >\r\n                <LinearProgress />\r\n            </Labeled>\r\n        );\r\n    }\r\n\r\n    const renderHelperText =\r\n        !!fetchError ||\r\n        helperText !== false ||\r\n        ((isTouched || isSubmitted) && invalid);\r\n\r\n    return (\r\n        <StyledFormControl\r\n            component=\"fieldset\"\r\n            margin={margin}\r\n            error={fetchError || ((isTouched || isSubmitted) && invalid)}\r\n            className={clsx('ra-input', `ra-input-${source}`, className)}\r\n            {...sanitizeRestProps(rest)}\r\n        >\r\n            <FormLabel\r\n                component=\"legend\"\r\n                className={CheckboxGroupInputClasses.label}\r\n            >\r\n                <FieldTitle\r\n                    label={label}\r\n                    source={source}\r\n                    resource={resource}\r\n                    isRequired={isRequired}\r\n                />\r\n            </FormLabel>\r\n            <FormGroup row={row}>\r\n                {allChoices?.map(choice => (\r\n                    <CheckboxGroupInputItem\r\n                        key={get(choice, optionValue)}\r\n                        choice={choice}\r\n                        id={id}\r\n                        onChange={handleCheck}\r\n                        options={options}\r\n                        optionText={optionText}\r\n                        optionValue={optionValue}\r\n                        translateChoice={translateChoice ?? !isFromReference}\r\n                        value={value}\r\n                        labelPlacement={labelPlacement}\r\n                        {...sanitizeRestProps(rest)}\r\n                    />\r\n                ))}\r\n            </FormGroup>\r\n            {renderHelperText ? (\r\n                <FormHelperText\r\n                    error={\r\n                        fetchError || ((isTouched || isSubmitted) && !!error)\r\n                    }\r\n                    className={CheckboxGroupInputClasses.helperText}\r\n                >\r\n                    <InputHelperText\r\n                        touched={isTouched || isSubmitted || fetchError}\r\n                        error={error?.message || fetchError?.message}\r\n                        helperText={helperText}\r\n                    />\r\n                </FormHelperText>\r\n            ) : null}\r\n        </StyledFormControl>\r\n    );\r\n};\r\n\r\nconst sanitizeRestProps = ({\r\n    refetch,\r\n    setFilter,\r\n    setPagination,\r\n    setSort,\r\n    loaded,\r\n    touched,\r\n    ...rest\r\n}: any) => sanitizeInputRestProps(rest);\r\n\r\nCheckboxGroupInput.propTypes = {\r\n    choices: PropTypes.arrayOf(PropTypes.any),\r\n    className: PropTypes.string,\r\n    source: PropTypes.string,\r\n    optionText: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.func,\r\n        PropTypes.element,\r\n    ]),\r\n    optionValue: PropTypes.string,\r\n    row: PropTypes.bool,\r\n    resource: PropTypes.string,\r\n    translateChoice: PropTypes.bool,\r\n};\r\n\r\nexport type CheckboxGroupInputProps = Omit<CommonInputProps, 'source'> &\r\n    ChoicesProps &\r\n    CheckboxProps &\r\n    FormControlProps & {\r\n        options?: CheckboxProps;\r\n        row?: boolean;\r\n        // Optional as this input can be used inside a ReferenceInput\r\n        source?: string;\r\n        labelPlacement?: 'bottom' | 'end' | 'start' | 'top';\r\n    };\r\n\r\nconst PREFIX = 'RaCheckboxGroupInput';\r\n\r\nexport const CheckboxGroupInputClasses = {\r\n    label: `${PREFIX}-label`,\r\n    helperText: `${PREFIX}-helperText`,\r\n};\r\n\r\nconst StyledFormControl = styled(FormControl, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    [`& .${CheckboxGroupInputClasses.label}`]: {\r\n        transform: 'translate(0, 4px) scale(0.75)',\r\n        transformOrigin: `top ${theme.direction === 'ltr' ? 'left' : 'right'}`,\r\n    },\r\n    [`& .${CheckboxGroupInputClasses.helperText}`]: {\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n    },\r\n}));\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { useChoices } from 'ra-core';\r\n\r\nexport const CheckboxGroupInputItem = props => {\r\n    const {\r\n        id,\r\n        choice,\r\n        className,\r\n        fullWidth,\r\n        onChange,\r\n        optionText,\r\n        optionValue,\r\n        options,\r\n        translateChoice,\r\n        value,\r\n        labelPlacement,\r\n        ...rest\r\n    } = props;\r\n\r\n    const { getChoiceText, getChoiceValue } = useChoices({\r\n        optionText,\r\n        optionValue,\r\n        translateChoice,\r\n    });\r\n\r\n    const choiceName = getChoiceText(choice);\r\n\r\n    return (\r\n        <StyledFormControlLabel\r\n            htmlFor={`${id}_${getChoiceValue(choice)}`}\r\n            key={getChoiceValue(choice)}\r\n            onChange={onChange}\r\n            className={className}\r\n            control={\r\n                <Checkbox\r\n                    id={`${id}_${getChoiceValue(choice)}`}\r\n                    color=\"primary\"\r\n                    className={CheckboxGroupInputItemClasses.checkbox}\r\n                    checked={\r\n                        value\r\n                            ? value.find(v => v == getChoiceValue(choice)) !== // eslint-disable-line eqeqeq\r\n                              undefined\r\n                            : false\r\n                    }\r\n                    value={String(getChoiceValue(choice))}\r\n                    {...options}\r\n                    {...rest}\r\n                />\r\n            }\r\n            label={choiceName}\r\n            labelPlacement={labelPlacement}\r\n        />\r\n    );\r\n};\r\n\r\nconst PREFIX = 'RaCheckboxGroupInputItem';\r\n\r\nexport const CheckboxGroupInputItemClasses = {\r\n    checkbox: `${PREFIX}-checkbox`,\r\n};\r\n\r\nconst StyledFormControlLabel = styled(FormControlLabel, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})({\r\n    [`& .${CheckboxGroupInputItemClasses.checkbox}`]: {\r\n        height: 32,\r\n    },\r\n});\r\n", "import * as React from 'react';\r\nimport { cloneElement, ReactElement, ReactNode, useCallback } from 'react';\r\nimport clsx from 'clsx';\r\nimport {\r\n    ChoicesProps,\r\n    Identifier,\r\n    ListContextProvider,\r\n    useChoicesContext,\r\n    useInput,\r\n} from 'ra-core';\r\nimport { CommonInputProps } from './CommonInputProps';\r\nimport { InputHelperText } from './InputHelperText';\r\nimport { SupportCreateSuggestionOptions } from './useSupportCreateSuggestion';\r\nimport { Datagrid, DatagridProps } from '../list/datagrid';\r\nimport { FilterButton, FilterForm } from '../list/filter';\r\nimport { FilterContext } from '../list/FilterContext';\r\nimport { Pagination as DefaultPagination } from '../list/pagination';\r\n\r\nconst defaultPagination = <DefaultPagination />;\r\n\r\n/**\r\n * WIP: This component is not yet ready to be used.\r\n *\r\n * An input for selecting items displayed in a datagrid\r\n *\r\n * @example\r\n * const membersFilters = [\r\n *     <TextInput label=\"Search\" source=\"q\" alwaysOn />,\r\n * ];\r\n * const TeamEdit = () => (\r\n *    <Edit>\r\n *        <SimpleForm>\r\n *            <TextInput source=\"name\" />\r\n *            <ReferenceArrayInput\r\n *                source=\"members\"\r\n *                reference=\"users\"\r\n *                filter={{ is_retired: false }}\r\n *                perPage={50}\r\n *                sort={{ field: 'lastName', order: 'ASC' }}\r\n *            >\r\n *                <DatagridInput\r\n *                    filters={membersFilters}\r\n *                >\r\n *                    <TextField source=\"firstName\" />\r\n *                    <TextField source=\"lastName\" />\r\n *                </DatagridInput>\r\n *            </ReferenceArrayInput>\r\n *        </SimpleForm>\r\n *    </Edit>\r\n * );\r\n */\r\nexport const DatagridInput = (props: DatagridInputProps) => {\r\n    const {\r\n        choices,\r\n        className,\r\n        pagination = defaultPagination,\r\n        filters,\r\n        source: sourceProp,\r\n        resource: resourceProp,\r\n        ...rest\r\n    } = props;\r\n\r\n    const {\r\n        allChoices,\r\n        availableChoices,\r\n        selectedChoices,\r\n        error: fetchError,\r\n        source,\r\n        ...choicesContext\r\n    } = useChoicesContext({\r\n        choices,\r\n        resource: resourceProp,\r\n        source: sourceProp,\r\n    });\r\n    const { field, fieldState, formState } = useInput({\r\n        ...props,\r\n        ...choicesContext,\r\n        source,\r\n    });\r\n\r\n    const onSelect = useCallback(\r\n        (idsToAdd: Identifier[]) => {\r\n            field.onChange(idsToAdd);\r\n        },\r\n        [field]\r\n    );\r\n\r\n    const onToggleItem = useCallback(\r\n        (id: Identifier) => {\r\n            if (field.value.includes(id)) {\r\n                field.onChange(field.value.filter(item => item !== id));\r\n            } else {\r\n                field.onChange([...field.value, id]);\r\n            }\r\n        },\r\n        [field]\r\n    );\r\n\r\n    const onUnselectItems = useCallback(() => {\r\n        field.onChange([]);\r\n    }, [field]);\r\n\r\n    const listContext = React.useMemo(\r\n        () => ({\r\n            ...choicesContext,\r\n            data: availableChoices,\r\n            onSelect,\r\n            onToggleItem,\r\n            onUnselectItems,\r\n            selectedIds: field.value,\r\n        }),\r\n        [\r\n            availableChoices,\r\n            choicesContext,\r\n            field,\r\n            onSelect,\r\n            onToggleItem,\r\n            onUnselectItems,\r\n        ]\r\n    );\r\n    return (\r\n        <div className={clsx('ra-input', `ra-input-${source}`, className)}>\r\n            <ListContextProvider value={listContext}>\r\n                {filters ? (\r\n                    Array.isArray(filters) ? (\r\n                        <FilterContext.Provider value={filters}>\r\n                            <>\r\n                                <FilterForm />\r\n                                <FilterButton />\r\n                            </>\r\n                        </FilterContext.Provider>\r\n                    ) : (\r\n                        <>\r\n                            {cloneElement(filters, {\r\n                                context: 'form',\r\n                            })}\r\n                            {cloneElement(filters, {\r\n                                context: 'button',\r\n                            })}\r\n                        </>\r\n                    )\r\n                ) : null}\r\n                {!fieldState.error && !fetchError && (\r\n                    <>\r\n                        <Datagrid {...rest} />\r\n                        {pagination !== false && pagination}\r\n                    </>\r\n                )}\r\n                <InputHelperText\r\n                    touched={\r\n                        fieldState.isTouched ||\r\n                        formState.isSubmitted ||\r\n                        fetchError\r\n                    }\r\n                    error={fieldState.error?.message || fetchError?.message}\r\n                />\r\n            </ListContextProvider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport type DatagridInputProps = Omit<CommonInputProps, 'source'> &\r\n    ChoicesProps &\r\n    Omit<SupportCreateSuggestionOptions, 'handleChange'> &\r\n    DatagridProps & {\r\n        children?: ReactNode;\r\n        source?: string;\r\n        filters?: ReactElement | ReactElement[];\r\n        pagination?: ReactElement | false;\r\n    };\r\n", "import * as React from 'react';\r\nimport { cloneElement, memo, FC, ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { SxProps, TableBody, TableBodyProps } from '@mui/material';\r\nimport clsx from 'clsx';\r\nimport { Identifier, RaRecord } from 'ra-core';\r\n\r\nimport { DatagridClasses } from './useDatagridStyles';\r\nimport DatagridRow, { PureDatagridRow, RowClickFunction } from './DatagridRow';\r\n\r\nconst DatagridBody: FC<DatagridBodyProps> = React.forwardRef(\r\n    (\r\n        {\r\n            children,\r\n            className,\r\n            data = defaultData,\r\n            expand,\r\n            hasBulkActions = false,\r\n            hover,\r\n            onToggleItem,\r\n            resource,\r\n            row = defaultChildren,\r\n            rowClick,\r\n            rowSx,\r\n            rowStyle,\r\n            selectedIds,\r\n            isRowSelectable,\r\n            ...rest\r\n        },\r\n        ref\r\n    ) => (\r\n        <TableBody\r\n            ref={ref}\r\n            className={clsx('datagrid-body', className, DatagridClasses.tbody)}\r\n            {...rest}\r\n        >\r\n            {data.map((record, rowIndex) =>\r\n                cloneElement(\r\n                    row,\r\n                    {\r\n                        className: clsx(DatagridClasses.row, {\r\n                            [DatagridClasses.rowEven]: rowIndex % 2 === 0,\r\n                            [DatagridClasses.rowOdd]: rowIndex % 2 !== 0,\r\n                        }),\r\n                        expand,\r\n                        hasBulkActions: hasBulkActions && !!selectedIds,\r\n                        hover,\r\n                        id: record.id ?? `row${rowIndex}`,\r\n                        key: record.id ?? `row${rowIndex}`,\r\n                        onToggleItem,\r\n                        record,\r\n                        resource,\r\n                        rowClick,\r\n                        selectable: !isRowSelectable || isRowSelectable(record),\r\n                        selected: selectedIds?.includes(record.id),\r\n                        sx: rowSx?.(record, rowIndex),\r\n                        style: rowStyle?.(record, rowIndex),\r\n                    },\r\n                    children\r\n                )\r\n            )}\r\n        </TableBody>\r\n    )\r\n);\r\n\r\nconst defaultChildren = <DatagridRow />;\r\n\r\nDatagridBody.propTypes = {\r\n    className: PropTypes.string,\r\n    children: PropTypes.node,\r\n    // @ts-ignore\r\n    data: PropTypes.arrayOf(PropTypes.object),\r\n    // @ts-ignore\r\n    expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\r\n    hasBulkActions: PropTypes.bool,\r\n    hover: PropTypes.bool,\r\n    onToggleItem: PropTypes.func,\r\n    resource: PropTypes.string,\r\n    row: PropTypes.element,\r\n    // @ts-ignore\r\n    rowClick: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.func,\r\n        PropTypes.bool,\r\n    ]),\r\n    rowSx: PropTypes.func,\r\n    rowStyle: PropTypes.func,\r\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\r\n    styles: PropTypes.object,\r\n    isRowSelectable: PropTypes.func,\r\n};\r\n\r\nexport interface DatagridBodyProps extends Omit<TableBodyProps, 'classes'> {\r\n    className?: string;\r\n    data?: any[];\r\n    expand?:\r\n        | ReactElement\r\n        | FC<{\r\n              id: Identifier;\r\n              record: RaRecord;\r\n              resource: string;\r\n          }>;\r\n    hasBulkActions?: boolean;\r\n    hover?: boolean;\r\n    onToggleItem?: (\r\n        id: Identifier,\r\n        event: React.TouchEvent | React.MouseEvent\r\n    ) => void;\r\n    record?: RaRecord;\r\n    resource?: string;\r\n    row?: ReactElement;\r\n    rowClick?: string | RowClickFunction | false;\r\n    rowSx?: (record: RaRecord, index: number) => SxProps;\r\n    rowStyle?: (record: RaRecord, index: number) => any;\r\n    selectedIds?: Identifier[];\r\n    isRowSelectable?: (record: RaRecord) => boolean;\r\n}\r\n\r\nconst defaultData = [];\r\n\r\n// trick Material UI Table into thinking this is one of the child type it supports\r\n// @ts-ignore\r\nDatagridBody.muiName = 'TableBody';\r\n\r\nexport const PureDatagridBody = memo(props => (\r\n    <DatagridBody row={<PureDatagridRow />} {...props} />\r\n));\r\n\r\n// trick Material UI Table into thinking this is one of the child type it supports\r\n// @ts-ignore\r\nPureDatagridBody.muiName = 'TableBody';\r\n\r\nexport default DatagridBody;\r\n", "import { styled } from '@mui/material';\r\n\r\nconst PREFIX = 'RaDatagrid';\r\n\r\nexport const DatagridClasses = {\r\n    root: `${PREFIX}-root`,\r\n    table: `${PREFIX}-table`,\r\n    tableWrapper: `${PREFIX}-tableWrapper`,\r\n    thead: `${PREFIX}-thead`,\r\n    tbody: `${PREFIX}-tbody`,\r\n    headerRow: `${PREFIX}-headerRow`,\r\n    headerCell: `${PREFIX}-headerCell`,\r\n    checkbox: `${PREFIX}-checkbox`,\r\n    row: `${PREFIX}-row`,\r\n    clickableRow: `${PREFIX}-clickableRow`,\r\n    rowEven: `${PREFIX}-rowEven`,\r\n    rowOdd: `${PREFIX}-rowOdd`,\r\n    rowCell: `${PREFIX}-rowCell`,\r\n    selectable: `${PREFIX}-selectable`,\r\n    expandHeader: `${PREFIX}-expandHeader`,\r\n    expandIconCell: `${PREFIX}-expandIconCell`,\r\n    expandIcon: `${PREFIX}-expandIcon`,\r\n    expandable: `${PREFIX}-expandable`,\r\n    expanded: `${PREFIX}-expanded`,\r\n    expandedPanel: `${PREFIX}-expandedPanel`,\r\n};\r\n\r\nexport const DatagridRoot = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    [`& .${DatagridClasses.table}`]: {\r\n        tableLayout: 'auto',\r\n    },\r\n    [`& .${DatagridClasses.tableWrapper}`]: {},\r\n    [`& .${DatagridClasses.thead}`]: {},\r\n    [`& .${DatagridClasses.tbody}`]: {},\r\n    [`& .${DatagridClasses.headerRow}`]: {},\r\n    [`& .${DatagridClasses.headerCell}`]: {\r\n        position: 'sticky',\r\n        top: 0,\r\n        zIndex: 2,\r\n        backgroundColor: theme.palette.background.paper,\r\n        '&:first-of-type': {\r\n            borderTopLeftRadius: theme.shape.borderRadius,\r\n        },\r\n        '&:last-child': {\r\n            borderTopRightRadius: theme.shape.borderRadius,\r\n        },\r\n    },\r\n    [`& .${DatagridClasses.checkbox}`]: {},\r\n    [`& .${DatagridClasses.row}`]: {},\r\n    [`& .${DatagridClasses.clickableRow}`]: {\r\n        cursor: 'pointer',\r\n    },\r\n    [`& .${DatagridClasses.rowEven}`]: {},\r\n    [`& .${DatagridClasses.rowOdd}`]: {},\r\n    [`& .${DatagridClasses.rowCell}`]: {},\r\n    [`& .${DatagridClasses.expandHeader}`]: {\r\n        padding: 0,\r\n        width: theme.spacing(6),\r\n    },\r\n    [`& .${DatagridClasses.expandIconCell}`]: {\r\n        width: theme.spacing(6),\r\n    },\r\n    [`& .${DatagridClasses.expandIcon}`]: {\r\n        padding: theme.spacing(1),\r\n        transform: 'rotate(-90deg)',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    [`& .${DatagridClasses.expandIcon}.${DatagridClasses.expanded}`]: {\r\n        transform: 'rotate(0deg)',\r\n    },\r\n    [`& .${DatagridClasses.expandedPanel}`]: {},\r\n}));\r\n", "import React, {\r\n    isValidElement,\r\n    cloneElement,\r\n    createElement,\r\n    useState,\r\n    useEffect,\r\n    useCallback,\r\n    memo,\r\n    FC,\r\n    ReactElement,\r\n} from 'react';\r\nimport { isElement } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { TableCell, TableRow, TableRowProps, Checkbox } from '@mui/material';\r\nimport {\r\n    Identifier,\r\n    RaRecord,\r\n    RecordContextProvider,\r\n    shallowEqual,\r\n    useExpanded,\r\n    useResourceContext,\r\n    useTranslate,\r\n    useCreatePath,\r\n    useRecordContext,\r\n} from 'ra-core';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport DatagridCell from './DatagridCell';\r\nimport ExpandRowButton from './ExpandRowButton';\r\nimport { DatagridClasses } from './useDatagridStyles';\r\nimport { useDatagridContext } from './useDatagridContext';\r\n\r\nconst computeNbColumns = (expand, children, hasBulkActions) =>\r\n    expand\r\n        ? 1 + // show expand button\r\n          (hasBulkActions ? 1 : 0) + // checkbox column\r\n          React.Children.toArray(children).filter(child => !!child).length // non-null children\r\n        : 0; // we don't need to compute columns if there is no expand panel;\r\n\r\nconst DatagridRow: FC<DatagridRowProps> = React.forwardRef((props, ref) => {\r\n    const {\r\n        children,\r\n        className,\r\n        expand,\r\n        hasBulkActions = false,\r\n        hover = true,\r\n        id,\r\n        onToggleItem,\r\n        record: recordOverride,\r\n        rowClick,\r\n        selected = false,\r\n        style,\r\n        selectable = true,\r\n        ...rest\r\n    } = props;\r\n\r\n    const context = useDatagridContext();\r\n    const translate = useTranslate();\r\n    const record = useRecordContext(props);\r\n    const expandable =\r\n        (!context ||\r\n            !context.isRowExpandable ||\r\n            context.isRowExpandable(record)) &&\r\n        expand;\r\n    const resource = useResourceContext(props);\r\n    const createPath = useCreatePath();\r\n    const [expanded, toggleExpanded] = useExpanded(\r\n        resource,\r\n        id,\r\n        context && context.expandSingle\r\n    );\r\n    const [nbColumns, setNbColumns] = useState(() =>\r\n        computeNbColumns(expandable, children, hasBulkActions)\r\n    );\r\n    useEffect(() => {\r\n        // Fields can be hidden dynamically based on permissions;\r\n        // The expand panel must span over the remaining columns\r\n        // So we must recompute the number of columns to span on\r\n        const newNbColumns = computeNbColumns(\r\n            expandable,\r\n            children,\r\n            hasBulkActions\r\n        );\r\n        if (newNbColumns !== nbColumns) {\r\n            setNbColumns(newNbColumns);\r\n        }\r\n    }, [expandable, nbColumns, children, hasBulkActions]);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleToggleExpand = useCallback(\r\n        event => {\r\n            toggleExpanded();\r\n            event.stopPropagation();\r\n        },\r\n        [toggleExpanded]\r\n    );\r\n    const handleToggleSelection = useCallback(\r\n        event => {\r\n            if (!selectable) return;\r\n            onToggleItem(id, event);\r\n            event.stopPropagation();\r\n        },\r\n        [id, onToggleItem, selectable]\r\n    );\r\n    const handleClick = useCallback(\r\n        async event => {\r\n            event.persist();\r\n            const type =\r\n                typeof rowClick === 'function'\r\n                    ? await rowClick(id, resource, record)\r\n                    : rowClick;\r\n            if (type === false || type == null) {\r\n                return;\r\n            }\r\n            if (['edit', 'show'].includes(type)) {\r\n                navigate(createPath({ resource, id, type }));\r\n                return;\r\n            }\r\n            if (type === 'expand') {\r\n                handleToggleExpand(event);\r\n                return;\r\n            }\r\n            if (type === 'toggleSelection') {\r\n                handleToggleSelection(event);\r\n                return;\r\n            }\r\n            navigate(type);\r\n        },\r\n        [\r\n            rowClick,\r\n            id,\r\n            resource,\r\n            record,\r\n            navigate,\r\n            createPath,\r\n            handleToggleExpand,\r\n            handleToggleSelection,\r\n        ]\r\n    );\r\n\r\n    return (\r\n        <RecordContextProvider value={record}>\r\n            <TableRow\r\n                ref={ref}\r\n                className={clsx(className, {\r\n                    [DatagridClasses.expandable]: expandable,\r\n                    [DatagridClasses.selectable]: selectable,\r\n                    [DatagridClasses.clickableRow]:\r\n                        typeof rowClick === 'function' ? true : rowClick,\r\n                })}\r\n                key={id}\r\n                style={style}\r\n                hover={hover}\r\n                onClick={handleClick}\r\n                {...rest}\r\n            >\r\n                {expand && (\r\n                    <TableCell\r\n                        padding=\"none\"\r\n                        className={DatagridClasses.expandIconCell}\r\n                    >\r\n                        {expandable && (\r\n                            <ExpandRowButton\r\n                                className={clsx(DatagridClasses.expandIcon, {\r\n                                    [DatagridClasses.expanded]: expanded,\r\n                                })}\r\n                                expanded={expanded}\r\n                                onClick={handleToggleExpand}\r\n                                expandContentId={`${id}-expand`}\r\n                            />\r\n                        )}\r\n                    </TableCell>\r\n                )}\r\n                {hasBulkActions && (\r\n                    <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                            aria-label={translate('ra.action.select_row', {\r\n                                _: 'Select this row',\r\n                            })}\r\n                            color=\"primary\"\r\n                            className={`select-item ${DatagridClasses.checkbox}`}\r\n                            checked={selectable && selected}\r\n                            onClick={handleToggleSelection}\r\n                            disabled={!selectable}\r\n                        />\r\n                    </TableCell>\r\n                )}\r\n                {React.Children.map(children, (field, index) =>\r\n                    isValidElement(field) ? (\r\n                        <DatagridCell\r\n                            key={`${id}-${\r\n                                (field.props as any).source || index\r\n                            }`}\r\n                            className={clsx(\r\n                                `column-${(field.props as any).source}`,\r\n                                DatagridClasses.rowCell\r\n                            )}\r\n                            record={record}\r\n                            {...{ field, resource }}\r\n                        />\r\n                    ) : null\r\n                )}\r\n            </TableRow>\r\n            {expandable && expanded && (\r\n                <TableRow\r\n                    key={`${id}-expand`}\r\n                    id={`${id}-expand`}\r\n                    className={DatagridClasses.expandedPanel}\r\n                >\r\n                    <TableCell colSpan={nbColumns}>\r\n                        {isElement(expand)\r\n                            ? cloneElement(expand, {\r\n                                  // @ts-ignore\r\n                                  record,\r\n                                  resource,\r\n                                  id: String(id),\r\n                              })\r\n                            : createElement(expand, {\r\n                                  record,\r\n                                  resource,\r\n                                  id: String(id),\r\n                              })}\r\n                    </TableCell>\r\n                </TableRow>\r\n            )}\r\n        </RecordContextProvider>\r\n    );\r\n});\r\n\r\nDatagridRow.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    // @ts-ignore\r\n    expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\r\n    hasBulkActions: PropTypes.bool,\r\n    hover: PropTypes.bool,\r\n    id: PropTypes.any,\r\n    onToggleItem: PropTypes.func,\r\n    // @ts-ignore\r\n    record: PropTypes.object,\r\n    resource: PropTypes.string,\r\n    // @ts-ignore\r\n    rowClick: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.func,\r\n        PropTypes.bool,\r\n    ]),\r\n    selected: PropTypes.bool,\r\n    style: PropTypes.object,\r\n    selectable: PropTypes.bool,\r\n};\r\n\r\nexport interface DatagridRowProps\r\n    extends Omit<TableRowProps, 'id' | 'classes'> {\r\n    className?: string;\r\n    expand?:\r\n        | ReactElement\r\n        | FC<{\r\n              id: Identifier;\r\n              record: RaRecord;\r\n              resource: string;\r\n          }>;\r\n    hasBulkActions?: boolean;\r\n    hover?: boolean;\r\n    id?: Identifier;\r\n    onToggleItem?: (\r\n        id: Identifier,\r\n        event: React.TouchEvent | React.MouseEvent\r\n    ) => void;\r\n    record?: RaRecord;\r\n    resource?: string;\r\n    rowClick?: RowClickFunction | string | false;\r\n    selected?: boolean;\r\n    style?: any;\r\n    selectable?: boolean;\r\n}\r\n\r\nexport type RowClickFunction = (\r\n    id: Identifier,\r\n    resource: string,\r\n    record: RaRecord\r\n) => string | false | Promise<string | false>;\r\n\r\nconst areEqual = (prevProps, nextProps) => {\r\n    const { children: _1, expand: _2, ...prevPropsWithoutChildren } = prevProps;\r\n    const { children: _3, expand: _4, ...nextPropsWithoutChildren } = nextProps;\r\n    return shallowEqual(prevPropsWithoutChildren, nextPropsWithoutChildren);\r\n};\r\n\r\nexport const PureDatagridRow = memo(DatagridRow, areEqual);\r\n\r\nPureDatagridRow.displayName = 'PureDatagridRow';\r\n\r\nexport default DatagridRow;\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableCell, { TableCellProps } from '@mui/material/TableCell';\r\nimport clsx from 'clsx';\r\nimport { RaRecord } from 'ra-core';\r\n\r\nconst DatagridCell = React.forwardRef<HTMLTableCellElement, DatagridCellProps>(\r\n    ({ className, field, record, resource, ...rest }, ref) => (\r\n        <TableCell\r\n            className={clsx(className, field.props.cellClassName)}\r\n            align={field.props.textAlign}\r\n            ref={ref}\r\n            {...rest}\r\n        >\r\n            {field}\r\n        </TableCell>\r\n    )\r\n);\r\n\r\nDatagridCell.propTypes = {\r\n    className: PropTypes.string,\r\n    field: PropTypes.element,\r\n    // @ts-ignore\r\n    record: PropTypes.object, // eslint-disable-line react/forbid-prop-types\r\n    resource: PropTypes.string,\r\n};\r\n\r\nexport interface DatagridCellProps extends TableCellProps {\r\n    className?: string;\r\n    field?: JSX.Element;\r\n    record?: RaRecord;\r\n    resource?: string;\r\n}\r\n\r\n// What? TypeScript loses the displayName if we don't set it explicitly\r\nDatagridCell.displayName = 'DatagridCell';\r\n\r\nexport default DatagridCell;\r\n", "import * as React from 'react';\r\nimport { ElementType, memo } from 'react';\r\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { useTranslate } from 'ra-core';\r\n\r\nconst ExpandRowButton = ({\r\n    expanded,\r\n    expandContentId,\r\n    ...props\r\n}: ExpandRowButtonProps) => {\r\n    const translate = useTranslate();\r\n    return (\r\n        <IconButton\r\n            aria-label={translate(\r\n                expanded ? 'ra.action.close' : 'ra.action.expand'\r\n            )}\r\n            aria-expanded={expanded}\r\n            aria-controls={expandContentId}\r\n            tabIndex={-1}\r\n            aria-hidden=\"true\"\r\n            component=\"div\"\r\n            {...props}\r\n            size=\"small\"\r\n        >\r\n            <ExpandMoreIcon fontSize=\"inherit\" />\r\n        </IconButton>\r\n    );\r\n};\r\n\r\nexport interface ExpandRowButtonProps extends IconButtonProps {\r\n    component?: ElementType;\r\n    expanded: boolean;\r\n    expandContentId?: string;\r\n}\r\n\r\nexport default memo(ExpandRowButton);\r\n", "import { useContext, useMemo } from 'react';\r\nimport { DatagridProps } from './Datagrid';\r\nimport DatagridContext, { DatagridContextValue } from './DatagridContext';\r\nimport defaults from 'lodash/defaults';\r\n\r\nexport const useDatagridContext = (\r\n    props?: DatagridProps\r\n): DatagridContextValue => {\r\n    const context = useContext(DatagridContext);\r\n\r\n    return useMemo(\r\n        () =>\r\n            defaults(\r\n                {},\r\n                props != null ? { isRowExpandable: props.isRowExpandable } : {},\r\n                context\r\n            ),\r\n        [context, props]\r\n    );\r\n};\r\n", "import { createContext } from 'react';\r\nimport { RaRecord } from 'ra-core';\r\n\r\nconst DatagridContext = createContext<DatagridContextValue>({});\r\n\r\nDatagridContext.displayName = 'DatagridContext';\r\n\r\nexport type DatagridContextValue = {\r\n    isRowExpandable?: (record: RaRecord) => boolean;\r\n    expandSingle?: boolean;\r\n};\r\n\r\nexport default DatagridContext;\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { TableCell, TableSortLabel, Tooltip } from '@mui/material';\r\nimport { TableCellProps } from '@mui/material/TableCell';\r\nimport {\r\n    FieldTitle,\r\n    useTranslate,\r\n    SortPayload,\r\n    useResourceContext,\r\n} from 'ra-core';\r\n\r\nexport const DatagridHeaderCell = (\r\n    props: DatagridHeaderCellProps\r\n): JSX.Element => {\r\n    const { className, field, sort, updateSort, isSorting, ...rest } = props;\r\n    const resource = useResourceContext(props);\r\n\r\n    const translate = useTranslate();\r\n\r\n    return (\r\n        <StyledTableCell\r\n            className={clsx(className, field.props.headerClassName)}\r\n            align={field.props.textAlign}\r\n            variant=\"head\"\r\n            {...rest}\r\n        >\r\n            {updateSort &&\r\n            field.props.sortable !== false &&\r\n            (field.props.sortBy || field.props.source) ? (\r\n                <Tooltip\r\n                    title={translate('ra.action.sort')}\r\n                    placement={\r\n                        field.props.textAlign === 'right'\r\n                            ? 'bottom-end'\r\n                            : 'bottom-start'\r\n                    }\r\n                    enterDelay={300}\r\n                >\r\n                    <TableSortLabel\r\n                        active={\r\n                            sort.field ===\r\n                            (field.props.sortBy || field.props.source)\r\n                        }\r\n                        direction={sort.order === 'ASC' ? 'asc' : 'desc'}\r\n                        data-field={field.props.sortBy || field.props.source}\r\n                        data-order={field.props.sortByOrder || 'ASC'}\r\n                        onClick={updateSort}\r\n                        classes={DatagridHeaderCellClasses}\r\n                    >\r\n                        <FieldTitle\r\n                            label={field.props.label}\r\n                            source={field.props.source}\r\n                            resource={resource}\r\n                        />\r\n                    </TableSortLabel>\r\n                </Tooltip>\r\n            ) : (\r\n                <FieldTitle\r\n                    label={field.props.label}\r\n                    source={field.props.source}\r\n                    resource={resource}\r\n                />\r\n            )}\r\n        </StyledTableCell>\r\n    );\r\n};\r\n\r\nDatagridHeaderCell.propTypes = {\r\n    className: PropTypes.string,\r\n    field: PropTypes.element,\r\n    sort: PropTypes.shape({\r\n        field: PropTypes.string,\r\n        order: PropTypes.string,\r\n    }).isRequired,\r\n    isSorting: PropTypes.bool,\r\n    resource: PropTypes.string,\r\n    updateSort: PropTypes.func,\r\n};\r\n\r\nexport interface DatagridHeaderCellProps\r\n    extends Omit<TableCellProps, 'classes'> {\r\n    className?: string;\r\n    field?: JSX.Element;\r\n    isSorting?: boolean;\r\n    resource: string;\r\n    sort: SortPayload;\r\n    updateSort?: (event: any) => void;\r\n}\r\n\r\nexport default memo(\r\n    DatagridHeaderCell,\r\n    (props, nextProps) =>\r\n        props.updateSort === nextProps.updateSort &&\r\n        props.sort.field === nextProps.sort.field &&\r\n        props.sort.order === nextProps.sort.order &&\r\n        props.isSorting === nextProps.isSorting &&\r\n        props.resource === nextProps.resource\r\n);\r\n\r\nconst PREFIX = 'RaDatagridHeaderCell';\r\n\r\nexport const DatagridHeaderCellClasses = {\r\n    icon: `${PREFIX}-icon`,\r\n};\r\n\r\n// Remove the sort icons when not active\r\nconst StyledTableCell = styled(TableCell, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})({\r\n    [`& .MuiTableSortLabel-icon`]: {\r\n        display: 'none',\r\n    },\r\n    [`& .Mui-active .MuiTableSortLabel-icon`]: {\r\n        display: 'inline',\r\n    },\r\n});\r\n", "import * as React from 'react';\r\nimport { ReactElement, FC, memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Table,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TableBody,\r\n    IconButton,\r\n    Checkbox,\r\n} from '@mui/material';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport clsx from 'clsx';\r\nimport { useTimeout, Identifier, RaRecord } from 'ra-core';\r\n\r\nimport { DatagridClasses } from './useDatagridStyles';\r\nimport { Placeholder } from '../Placeholder';\r\n\r\nconst times = (nbChildren, fn) =>\r\n    Array.from({ length: nbChildren }, (_, key) => fn(key));\r\n\r\nconst DatagridLoading = ({\r\n    className,\r\n    expand,\r\n    hasBulkActions,\r\n    nbChildren,\r\n    nbFakeLines = 5,\r\n    size,\r\n}: DatagridLoadingProps): JSX.Element => {\r\n    const oneSecondHasPassed = useTimeout(1000);\r\n\r\n    return oneSecondHasPassed ? (\r\n        <div className={DatagridClasses.root}>\r\n            <Table\r\n                className={clsx(DatagridClasses.table, className)}\r\n                size={size}\r\n            >\r\n                <TableHead>\r\n                    <TableRow className={DatagridClasses.row}>\r\n                        {expand && (\r\n                            <TableCell\r\n                                padding=\"none\"\r\n                                className={DatagridClasses.expandHeader}\r\n                            />\r\n                        )}\r\n                        {hasBulkActions && (\r\n                            <TableCell\r\n                                padding=\"checkbox\"\r\n                                className={DatagridClasses.expandIconCell}\r\n                            >\r\n                                <Checkbox\r\n                                    className=\"select-all\"\r\n                                    color=\"primary\"\r\n                                    checked={false}\r\n                                />\r\n                            </TableCell>\r\n                        )}\r\n                        {times(nbChildren, key => (\r\n                            <TableCell\r\n                                variant=\"head\"\r\n                                className={DatagridClasses.headerCell}\r\n                                key={key}\r\n                            >\r\n                                <Placeholder />\r\n                            </TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {times(nbFakeLines, key1 => (\r\n                        <TableRow\r\n                            key={key1}\r\n                            style={{ opacity: 1 / (key1 + 1) }}\r\n                        >\r\n                            {expand && (\r\n                                <TableCell\r\n                                    padding=\"none\"\r\n                                    className={DatagridClasses.expandIconCell}\r\n                                >\r\n                                    <IconButton\r\n                                        className={DatagridClasses.expandIcon}\r\n                                        component=\"div\"\r\n                                        aria-hidden=\"true\"\r\n                                        size=\"large\"\r\n                                    >\r\n                                        <ExpandMoreIcon />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            )}\r\n                            {hasBulkActions && (\r\n                                <TableCell\r\n                                    padding=\"checkbox\"\r\n                                    className={DatagridClasses.expandIconCell}\r\n                                >\r\n                                    <Checkbox\r\n                                        className=\"select-all\"\r\n                                        color=\"primary\"\r\n                                        checked={false}\r\n                                    />\r\n                                </TableCell>\r\n                            )}\r\n                            {times(nbChildren, key2 => (\r\n                                <TableCell\r\n                                    className={DatagridClasses.rowCell}\r\n                                    key={key2}\r\n                                >\r\n                                    <Placeholder />\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nDatagridLoading.propTypes = {\r\n    className: PropTypes.string,\r\n    expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\r\n    hasBulkActions: PropTypes.bool,\r\n    nbChildren: PropTypes.number,\r\n    nbFakeLines: PropTypes.number,\r\n    size: PropTypes.oneOf(['small', 'medium']),\r\n};\r\n\r\nexport interface DatagridLoadingProps {\r\n    className?: string;\r\n    expand?:\r\n        | ReactElement\r\n        | FC<{\r\n              id: Identifier;\r\n              record: RaRecord;\r\n              resource: string;\r\n          }>;\r\n    hasBulkActions?: boolean;\r\n    nbChildren: number;\r\n    nbFakeLines?: number;\r\n    size?: 'small' | 'medium';\r\n}\r\n\r\nexport default memo(DatagridLoading);\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\n\r\ninterface PlaceholderProps {\r\n    className?: string;\r\n}\r\n\r\nexport const Placeholder = (props: PlaceholderProps) => (\r\n    <Root className={props.className}>&nbsp;</Root>\r\n);\r\n\r\nconst PREFIX = 'RaPlaceholder';\r\n\r\nconst Root = styled('span', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    backgroundColor: theme.palette.grey[300],\r\n    display: 'flex',\r\n}));\r\n", "import * as React from 'react';\r\nimport {\r\n    cloneElement,\r\n    createElement,\r\n    isValidElement,\r\n    useCallback,\r\n    useRef,\r\n    useEffect,\r\n    FC,\r\n    ComponentType,\r\n    ReactElement,\r\n    useMemo,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    sanitizeListRestProps,\r\n    useListContext,\r\n    Identifier,\r\n    RaRecord,\r\n    SortPayload,\r\n} from 'ra-core';\r\nimport { Table, TableProps, SxProps } from '@mui/material';\r\nimport clsx from 'clsx';\r\nimport union from 'lodash/union';\r\nimport difference from 'lodash/difference';\r\n\r\nimport { DatagridHeader } from './DatagridHeader';\r\nimport DatagridLoading from './DatagridLoading';\r\nimport DatagridBody, { PureDatagridBody } from './DatagridBody';\r\nimport { RowClickFunction } from './DatagridRow';\r\nimport DatagridContextProvider from './DatagridContextProvider';\r\nimport { DatagridClasses, DatagridRoot } from './useDatagridStyles';\r\nimport { BulkActionsToolbar } from '../BulkActionsToolbar';\r\nimport { BulkDeleteButton } from '../../button';\r\nimport { ListNoResults } from '../ListNoResults';\r\n\r\nconst defaultBulkActionButtons = <BulkDeleteButton />;\r\n\r\n/**\r\n * The Datagrid component renders a list of records as a table.\r\n * It is usually used as a child of the <List> and <ReferenceManyField> components.\r\n *\r\n * Props:\r\n *  - body\r\n *  - bulkActionButtons\r\n *  - children\r\n *  - empty\r\n *  - expand\r\n *  - header\r\n *  - hover\r\n *  - isRowExpandable\r\n *  - isRowSelectable\r\n *  - optimized\r\n *  - rowClick\r\n *  - rowSx\r\n *  - size\r\n *  - sx\r\n *\r\n * @example // Display all posts as a datagrid\r\n * const postRowSx = (record, index) => ({\r\n *     backgroundColor: record.nb_views >= 500 ? '#efe' : 'white',\r\n * });\r\n * export const PostList = () => (\r\n *     <List>\r\n *         <Datagrid rowSx={postRowSx}>\r\n *             <TextField source=\"id\" />\r\n *             <TextField source=\"title\" />\r\n *             <TextField source=\"body\" />\r\n *             <EditButton />\r\n *         </Datagrid>\r\n *     </List>\r\n * );\r\n *\r\n * @example // Display all the comments of the current post as a datagrid\r\n * <ReferenceManyField reference=\"comments\" target=\"post_id\">\r\n *     <Datagrid>\r\n *         <TextField source=\"id\" />\r\n *         <TextField source=\"body\" />\r\n *         <DateField source=\"created_at\" />\r\n *         <EditButton />\r\n *     </Datagrid>\r\n * </ReferenceManyField>\r\n *\r\n * @example // Usage outside of a <List> or a <ReferenceManyField>.\r\n *\r\n * const sort = { field: 'published_at', order: 'DESC' };\r\n *\r\n * export const MyCustomList = (props) => {\r\n *     const { data, total, isLoading } = useGetList(\r\n *         'posts',\r\n *         { pagination: { page: 1, perPage: 10 }, sort: sort }\r\n *     );\r\n *\r\n *     return (\r\n *         <Datagrid\r\n *             data={data}\r\n *             total={total}\r\n *             isLoading={isLoading}\r\n *             sort={sort}\r\n *             selectedIds={[]}\r\n *             setSort={() => {\r\n *                 console.log('set sort');\r\n *             }}\r\n *             onSelect={() => {\r\n *                 console.log('on select');\r\n *             }}\r\n *             onToggleItem={() => {\r\n *                 console.log('on toggle item');\r\n *             }}\r\n *         >\r\n *             <TextField source=\"id\" />\r\n *             <TextField source=\"title\" />\r\n *         </Datagrid>\r\n *     );\r\n * }\r\n */\r\nexport const Datagrid: FC<DatagridProps> = React.forwardRef((props, ref) => {\r\n    const {\r\n        optimized = false,\r\n        body = optimized ? PureDatagridBody : DatagridBody,\r\n        header = DatagridHeader,\r\n        children,\r\n        className,\r\n        empty = DefaultEmpty,\r\n        expand,\r\n        bulkActionButtons = defaultBulkActionButtons,\r\n        hover,\r\n        isRowSelectable,\r\n        isRowExpandable,\r\n        resource,\r\n        rowClick,\r\n        rowSx,\r\n        rowStyle,\r\n        size = 'small',\r\n        sx,\r\n        expandSingle = false,\r\n        ...rest\r\n    } = props;\r\n\r\n    const {\r\n        sort,\r\n        data,\r\n        isLoading,\r\n        onSelect,\r\n        onToggleItem,\r\n        selectedIds,\r\n        setSort,\r\n        total,\r\n    } = useListContext(props);\r\n\r\n    const hasBulkActions = !!bulkActionButtons !== false;\r\n\r\n    const contextValue = useMemo(() => ({ isRowExpandable, expandSingle }), [\r\n        isRowExpandable,\r\n        expandSingle,\r\n    ]);\r\n\r\n    const lastSelected = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!selectedIds || selectedIds.length === 0) {\r\n            lastSelected.current = null;\r\n        }\r\n    }, [JSON.stringify(selectedIds)]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    // we manage row selection at the datagrid level to allow shift+click to select an array of rows\r\n    const handleToggleItem = useCallback(\r\n        (id, event) => {\r\n            const ids = data.map(record => record.id);\r\n            const lastSelectedIndex = ids.indexOf(lastSelected.current);\r\n            lastSelected.current = event.target.checked ? id : null;\r\n\r\n            if (event.shiftKey && lastSelectedIndex !== -1) {\r\n                const index = ids.indexOf(id);\r\n                const idsBetweenSelections = ids.slice(\r\n                    Math.min(lastSelectedIndex, index),\r\n                    Math.max(lastSelectedIndex, index) + 1\r\n                );\r\n\r\n                const newSelectedIds = event.target.checked\r\n                    ? union(selectedIds, idsBetweenSelections)\r\n                    : difference(selectedIds, idsBetweenSelections);\r\n\r\n                onSelect(\r\n                    isRowSelectable\r\n                        ? newSelectedIds.filter((id: Identifier) =>\r\n                              isRowSelectable(\r\n                                  data.find(record => record.id === id)\r\n                              )\r\n                          )\r\n                        : newSelectedIds\r\n                );\r\n            } else {\r\n                onToggleItem(id);\r\n            }\r\n        },\r\n        [data, isRowSelectable, onSelect, onToggleItem, selectedIds]\r\n    );\r\n\r\n    if (isLoading === true) {\r\n        return (\r\n            <DatagridLoading\r\n                className={className}\r\n                expand={expand}\r\n                hasBulkActions={hasBulkActions}\r\n                nbChildren={React.Children.count(children)}\r\n                size={size}\r\n            />\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Once loaded, the data for the list may be empty. Instead of\r\n     * displaying the table header with zero data rows,\r\n     * the Datagrid displays the empty component.\r\n     */\r\n    if (data == null || data.length === 0 || total === 0) {\r\n        if (empty) {\r\n            return empty;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * After the initial load, if the data for the list isn't empty,\r\n     * and even if the data is refreshing (e.g. after a filter change),\r\n     * the datagrid displays the current data.\r\n     */\r\n    return (\r\n        <DatagridContextProvider value={contextValue}>\r\n            <DatagridRoot\r\n                sx={sx}\r\n                className={clsx(DatagridClasses.root, className)}\r\n            >\r\n                {bulkActionButtons !== false ? (\r\n                    <BulkActionsToolbar selectedIds={selectedIds}>\r\n                        {isValidElement(bulkActionButtons)\r\n                            ? bulkActionButtons\r\n                            : defaultBulkActionButtons}\r\n                    </BulkActionsToolbar>\r\n                ) : null}\r\n                <div className={DatagridClasses.tableWrapper}>\r\n                    <Table\r\n                        ref={ref}\r\n                        className={DatagridClasses.table}\r\n                        size={size}\r\n                        {...sanitizeRestProps(rest)}\r\n                    >\r\n                        {createOrCloneElement(\r\n                            header,\r\n                            {\r\n                                children,\r\n                                sort,\r\n                                data,\r\n                                hasExpand: !!expand,\r\n                                hasBulkActions,\r\n                                isRowSelectable,\r\n                                onSelect,\r\n                                resource,\r\n                                selectedIds,\r\n                                setSort,\r\n                            },\r\n                            children\r\n                        )}\r\n                        {createOrCloneElement(\r\n                            body,\r\n                            {\r\n                                expand,\r\n                                rowClick,\r\n                                data,\r\n                                hasBulkActions,\r\n                                hover,\r\n                                onToggleItem: handleToggleItem,\r\n                                resource,\r\n                                rowSx,\r\n                                rowStyle,\r\n                                selectedIds,\r\n                                isRowSelectable,\r\n                            },\r\n                            children\r\n                        )}\r\n                    </Table>\r\n                </div>\r\n            </DatagridRoot>\r\n        </DatagridContextProvider>\r\n    );\r\n});\r\n\r\nconst createOrCloneElement = (element, props, children) =>\r\n    isValidElement(element)\r\n        ? cloneElement(element, props, children)\r\n        : createElement(element, props, children);\r\n\r\nDatagrid.propTypes = {\r\n    // @ts-ignore\r\n    body: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\r\n    // @ts-ignore-line\r\n    bulkActionButtons: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\r\n    children: PropTypes.node.isRequired,\r\n    className: PropTypes.string,\r\n    sort: PropTypes.exact({\r\n        field: PropTypes.string,\r\n        order: PropTypes.string,\r\n    }),\r\n    data: PropTypes.arrayOf(PropTypes.any),\r\n    empty: PropTypes.element,\r\n    // @ts-ignore\r\n    expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\r\n    // @ts-ignore\r\n    header: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\r\n    hover: PropTypes.bool,\r\n    isLoading: PropTypes.bool,\r\n    onSelect: PropTypes.func,\r\n    onToggleItem: PropTypes.func,\r\n    resource: PropTypes.string,\r\n    // @ts-ignore\r\n    rowClick: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.func,\r\n        PropTypes.bool,\r\n    ]),\r\n    rowSx: PropTypes.func,\r\n    rowStyle: PropTypes.func,\r\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\r\n    setSort: PropTypes.func,\r\n    total: PropTypes.number,\r\n    isRowSelectable: PropTypes.func,\r\n    isRowExpandable: PropTypes.func,\r\n    expandSingle: PropTypes.bool,\r\n};\r\n\r\nexport interface DatagridProps<RecordType extends RaRecord = any>\r\n    extends Omit<TableProps, 'size' | 'classes' | 'onSelect'> {\r\n    body?: ReactElement | ComponentType;\r\n    className?: string;\r\n    bulkActionButtons?: ReactElement | false;\r\n    expand?:\r\n        | ReactElement\r\n        | FC<{\r\n              id: Identifier;\r\n              record: RecordType;\r\n              resource: string;\r\n          }>;\r\n    header?: ReactElement | ComponentType;\r\n    hover?: boolean;\r\n    empty?: ReactElement;\r\n    isRowSelectable?: (record: RecordType) => boolean;\r\n    isRowExpandable?: (record: RecordType) => boolean;\r\n    optimized?: boolean;\r\n    rowClick?: string | RowClickFunction | false;\r\n    rowSx?: (record: RecordType, index: number) => SxProps;\r\n    /**\r\n     * @deprecated use rowStyle instead\r\n     */\r\n    rowStyle?: (record: RecordType, index: number) => any;\r\n    size?: 'medium' | 'small';\r\n    // can be injected when using the component without context\r\n    sort?: SortPayload;\r\n    data?: RecordType[];\r\n    isLoading?: boolean;\r\n    onSelect?: (ids: Identifier[]) => void;\r\n    onToggleItem?: (id: Identifier) => void;\r\n    setSort?: (sort: SortPayload) => void;\r\n    selectedIds?: Identifier[];\r\n    expandSingle?: boolean;\r\n    total?: number;\r\n}\r\n\r\nconst injectedProps = [\r\n    'isRequired',\r\n    'setFilter',\r\n    'setPagination',\r\n    'limitChoicesToValue',\r\n    'translateChoice',\r\n    // Datagrid may be used as an alternative to SelectInput\r\n    'field',\r\n    'fieldState',\r\n    'formState',\r\n];\r\n\r\nconst sanitizeRestProps = props =>\r\n    Object.keys(sanitizeListRestProps(props))\r\n        .filter(propName => !injectedProps.includes(propName))\r\n        .reduce((acc, key) => ({ ...acc, [key]: props[key] }), {});\r\n\r\nDatagrid.displayName = 'Datagrid';\r\n\r\nconst DefaultEmpty = <ListNoResults />;\r\n", "import * as React from 'react';\r\nimport { Children, isValidElement, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    useListContext,\r\n    useResourceContext,\r\n    Identifier,\r\n    RaRecord,\r\n    SortPayload,\r\n    useTranslate,\r\n} from 'ra-core';\r\nimport { Checkbox, TableCell, TableHead, TableRow } from '@mui/material';\r\nimport clsx from 'clsx';\r\n\r\nimport DatagridHeaderCell from './DatagridHeaderCell';\r\nimport { DatagridClasses } from './useDatagridStyles';\r\nimport ExpandAllButton from './ExpandAllButton';\r\nimport { useDatagridContext } from './useDatagridContext';\r\n\r\n/**\r\n * The default Datagrid Header component.\r\n *\r\n * Renders select all checkbox as well as column header buttons used for sorting.\r\n */\r\nexport const DatagridHeader = (props: DatagridHeaderProps) => {\r\n    const {\r\n        children,\r\n        className,\r\n        hasExpand = false,\r\n        hasBulkActions = false,\r\n        isRowSelectable,\r\n    } = props;\r\n    const resource = useResourceContext(props);\r\n    const translate = useTranslate();\r\n    const { sort, data, onSelect, selectedIds, setSort } = useListContext(\r\n        props\r\n    );\r\n    const { expandSingle } = useDatagridContext();\r\n\r\n    const updateSortCallback = useCallback(\r\n        event => {\r\n            event.stopPropagation();\r\n            const newField = event.currentTarget.dataset.field;\r\n            const newOrder =\r\n                sort.field === newField\r\n                    ? sort.order === 'ASC'\r\n                        ? 'DESC'\r\n                        : 'ASC'\r\n                    : event.currentTarget.dataset.order;\r\n\r\n            setSort({ field: newField, order: newOrder });\r\n        },\r\n        [sort.field, sort.order, setSort]\r\n    );\r\n\r\n    const updateSort = setSort ? updateSortCallback : null;\r\n\r\n    const handleSelectAll = useCallback(\r\n        event =>\r\n            onSelect(\r\n                event.target.checked\r\n                    ? selectedIds.concat(\r\n                          data\r\n                              .filter(\r\n                                  record => !selectedIds.includes(record.id)\r\n                              )\r\n                              .filter(record =>\r\n                                  isRowSelectable\r\n                                      ? isRowSelectable(record)\r\n                                      : true\r\n                              )\r\n                              .map(record => record.id)\r\n                      )\r\n                    : []\r\n            ),\r\n        [data, onSelect, isRowSelectable, selectedIds]\r\n    );\r\n\r\n    const selectableIds = Array.isArray(data)\r\n        ? isRowSelectable\r\n            ? data\r\n                  .filter(record => isRowSelectable(record))\r\n                  .map(record => record.id)\r\n            : data.map(record => record.id)\r\n        : [];\r\n\r\n    return (\r\n        <TableHead className={clsx(className, DatagridClasses.thead)}>\r\n            <TableRow\r\n                className={clsx(DatagridClasses.row, DatagridClasses.headerRow)}\r\n            >\r\n                {hasExpand && (\r\n                    <TableCell\r\n                        padding=\"none\"\r\n                        className={clsx(\r\n                            DatagridClasses.headerCell,\r\n                            DatagridClasses.expandHeader\r\n                        )}\r\n                    >\r\n                        {!expandSingle ? (\r\n                            <ExpandAllButton\r\n                                resource={resource}\r\n                                ids={data.map(record => record.id)}\r\n                            />\r\n                        ) : null}\r\n                    </TableCell>\r\n                )}\r\n                {hasBulkActions && selectedIds && (\r\n                    <TableCell\r\n                        padding=\"checkbox\"\r\n                        className={DatagridClasses.headerCell}\r\n                    >\r\n                        <Checkbox\r\n                            aria-label={translate('ra.action.select_all', {\r\n                                _: 'Select all',\r\n                            })}\r\n                            className=\"select-all\"\r\n                            color=\"primary\"\r\n                            checked={\r\n                                selectedIds.length > 0 &&\r\n                                selectableIds.length > 0 &&\r\n                                selectableIds.every(id =>\r\n                                    selectedIds.includes(id)\r\n                                )\r\n                            }\r\n                            onChange={handleSelectAll}\r\n                        />\r\n                    </TableCell>\r\n                )}\r\n                {Children.map(children, (field, index) =>\r\n                    isValidElement(field) ? (\r\n                        <DatagridHeaderCell\r\n                            className={clsx(\r\n                                DatagridClasses.headerCell,\r\n                                `column-${(field.props as any).source}`\r\n                            )}\r\n                            sort={sort}\r\n                            field={field}\r\n                            isSorting={\r\n                                sort.field ===\r\n                                ((field.props as any).sortBy ||\r\n                                    (field.props as any).source)\r\n                            }\r\n                            key={(field.props as any).source || index}\r\n                            resource={resource}\r\n                            updateSort={updateSort}\r\n                        />\r\n                    ) : null\r\n                )}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n};\r\n\r\nDatagridHeader.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    sort: PropTypes.exact({\r\n        field: PropTypes.string,\r\n        order: PropTypes.string,\r\n    }),\r\n    data: PropTypes.arrayOf(PropTypes.any),\r\n    hasExpand: PropTypes.bool,\r\n    hasBulkActions: PropTypes.bool,\r\n    isRowSelectable: PropTypes.func,\r\n    isRowExpandable: PropTypes.func,\r\n    onSelect: PropTypes.func,\r\n    onToggleItem: PropTypes.func,\r\n    resource: PropTypes.string,\r\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\r\n    setSort: PropTypes.func,\r\n};\r\n\r\nexport interface DatagridHeaderProps<RecordType extends RaRecord = any> {\r\n    children?: React.ReactNode;\r\n    className?: string;\r\n    hasExpand?: boolean;\r\n    hasBulkActions?: boolean;\r\n    isRowSelectable?: (record: RecordType) => boolean;\r\n    isRowExpandable?: (record: RecordType) => boolean;\r\n    size?: 'medium' | 'small';\r\n    // can be injected when using the component without context\r\n    sort?: SortPayload;\r\n    data?: RecordType[];\r\n    onSelect?: (ids: Identifier[]) => void;\r\n    onToggleItem?: (id: Identifier) => void;\r\n    resource?: string;\r\n    selectedIds?: Identifier[];\r\n    setSort?: (sort: SortPayload) => void;\r\n}\r\n\r\nDatagridHeader.displayName = 'DatagridHeader';\r\n", "import * as React from 'react';\r\nimport { memo } from 'react';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { useTranslate, useExpandAll } from 'ra-core';\r\nimport { DatagridClasses } from './useDatagridStyles';\r\nimport clsx from 'clsx';\r\n\r\ninterface ExpandAllButtonProps {\r\n    resource: string;\r\n    ids: string[] | number[];\r\n}\r\n\r\nconst ExpandAllButton = ({ resource, ids }: ExpandAllButtonProps) => {\r\n    const translate = useTranslate();\r\n    const [expanded, toggleExpanded] = useExpandAll(resource, ids);\r\n\r\n    return (\r\n        <IconButton\r\n            className={clsx(DatagridClasses.expandIcon, {\r\n                [DatagridClasses.expanded]: expanded,\r\n            })}\r\n            aria-label={translate(\r\n                expanded ? 'ra.action.close' : 'ra.action.expand'\r\n            )}\r\n            aria-expanded={expanded}\r\n            tabIndex={-1}\r\n            aria-hidden=\"true\"\r\n            onClick={toggleExpanded}\r\n            size=\"small\"\r\n        >\r\n            <ExpandMoreIcon fontSize=\"inherit\" />\r\n        </IconButton>\r\n    );\r\n};\r\n\r\nexport default memo(ExpandAllButton);\r\n", "import React, { ReactElement, ReactNode } from 'react';\r\nimport DatagridContext, { DatagridContextValue } from './DatagridContext';\r\n\r\nconst DatagridContextProvider = ({\r\n    children,\r\n    value,\r\n}: {\r\n    children: ReactNode;\r\n    value: DatagridContextValue;\r\n}): ReactElement => (\r\n    <DatagridContext.Provider value={value}>\r\n        {children}\r\n    </DatagridContext.Provider>\r\n);\r\n\r\nexport default DatagridContextProvider;\r\n", "import * as React from 'react';\r\nimport {\r\n    Children,\r\n    ReactNode,\r\n    cloneElement,\r\n    isValidElement,\r\n    useCallback,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\nimport clsx from 'clsx';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport { lighten } from '@mui/material/styles';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {\r\n    useTranslate,\r\n    sanitizeListRestProps,\r\n    useListContext,\r\n    Identifier,\r\n} from 'ra-core';\r\n\r\nimport TopToolbar from '../layout/TopToolbar';\r\n\r\nexport const BulkActionsToolbar = (props: BulkActionsToolbarProps) => {\r\n    const {\r\n        label = 'ra.action.bulk_actions',\r\n        children,\r\n        className,\r\n        ...rest\r\n    } = props;\r\n    const {\r\n        filterValues,\r\n        resource,\r\n        selectedIds = [],\r\n        onUnselectItems,\r\n    } = useListContext(props);\r\n\r\n    const translate = useTranslate();\r\n\r\n    const handleUnselectAllClick = useCallback(() => {\r\n        onUnselectItems();\r\n    }, [onUnselectItems]);\r\n\r\n    return (\r\n        <Root className={className}>\r\n            <Toolbar\r\n                data-test=\"bulk-actions-toolbar\"\r\n                className={clsx(BulkActionsToolbarClasses.toolbar, {\r\n                    [BulkActionsToolbarClasses.collapsed]:\r\n                        selectedIds.length === 0,\r\n                })}\r\n                {...sanitizeListRestProps(rest)}\r\n            >\r\n                <div className={BulkActionsToolbarClasses.title}>\r\n                    <IconButton\r\n                        className={BulkActionsToolbarClasses.icon}\r\n                        aria-label={translate('ra.action.unselect')}\r\n                        title={translate('ra.action.unselect')}\r\n                        onClick={handleUnselectAllClick}\r\n                        size=\"small\"\r\n                    >\r\n                        <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                    <Typography color=\"inherit\" variant=\"subtitle1\">\r\n                        {translate(label, {\r\n                            _: label,\r\n                            smart_count: selectedIds.length,\r\n                        })}\r\n                    </Typography>\r\n                </div>\r\n                <TopToolbar className={BulkActionsToolbarClasses.topToolbar}>\r\n                    {Children.map(children, child =>\r\n                        isValidElement<any>(child)\r\n                            ? cloneElement(child, {\r\n                                  filterValues,\r\n                                  resource,\r\n                                  selectedIds,\r\n                              })\r\n                            : null\r\n                    )}\r\n                </TopToolbar>\r\n            </Toolbar>\r\n        </Root>\r\n    );\r\n};\r\n\r\nBulkActionsToolbar.propTypes = {\r\n    children: PropTypes.node,\r\n    label: PropTypes.string,\r\n};\r\n\r\nexport interface BulkActionsToolbarProps {\r\n    children?: ReactNode;\r\n    label?: string;\r\n    selectedIds?: Identifier[];\r\n    className?: string;\r\n}\r\n\r\nconst PREFIX = 'RaBulkActionsToolbar';\r\n\r\nexport const BulkActionsToolbarClasses = {\r\n    toolbar: `${PREFIX}-toolbar`,\r\n    topToolbar: `${PREFIX}-topToolbar`,\r\n    buttons: `${PREFIX}-buttons`,\r\n    collapsed: `${PREFIX}-collapsed`,\r\n    title: `${PREFIX}-title`,\r\n    icon: `${PREFIX}-icon`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    position: 'relative',\r\n    [`& .${BulkActionsToolbarClasses.toolbar}`]: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        zIndex: 3,\r\n        color:\r\n            theme.palette.mode === 'light'\r\n                ? theme.palette.primary.main\r\n                : theme.palette.text.primary,\r\n        justifyContent: 'space-between',\r\n        backgroundColor:\r\n            theme.palette.mode === 'light'\r\n                ? lighten(theme.palette.primary.light, 0.8)\r\n                : theme.palette.primary.dark,\r\n        minHeight: theme.spacing(6),\r\n        height: theme.spacing(6),\r\n        transform: `translateY(-${theme.spacing(6)})`,\r\n        transition: `${theme.transitions.create(\r\n            'height'\r\n        )}, ${theme.transitions.create(\r\n            'min-height'\r\n        )}, ${theme.transitions.create('transform')}`,\r\n        borderTopLeftRadius: theme.shape.borderRadius,\r\n        borderTopRightRadius: theme.shape.borderRadius,\r\n    },\r\n\r\n    [`& .${BulkActionsToolbarClasses.topToolbar}`]: {\r\n        paddingBottom: theme.spacing(1),\r\n        minHeight: 'auto',\r\n    },\r\n\r\n    [`& .${BulkActionsToolbarClasses.buttons}`]: {},\r\n\r\n    [`& .${BulkActionsToolbarClasses.collapsed}`]: {\r\n        minHeight: 0,\r\n        height: 0,\r\n        transform: `translateY(0)`,\r\n        overflowY: 'hidden',\r\n    },\r\n\r\n    [`& .${BulkActionsToolbarClasses.title}`]: {\r\n        display: 'flex',\r\n        flex: '0 0 auto',\r\n    },\r\n\r\n    [`& .${BulkActionsToolbarClasses.icon}`]: {\r\n        marginLeft: '-0.5em',\r\n        marginRight: '0.5em',\r\n    },\r\n}));\r\n", "import * as React from 'react';\r\nimport { memo } from 'react';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useResourceContext, useTranslate } from 'ra-core';\r\n\r\nexport const ListNoResults = memo(() => {\r\n    const translate = useTranslate();\r\n    const resource = useResourceContext();\r\n    return (\r\n        <CardContent>\r\n            <Typography variant=\"body2\">\r\n                {translate('ra.navigation.no_results', { resource })}\r\n            </Typography>\r\n        </CardContent>\r\n    );\r\n});\r\n", "import * as React from 'react';\r\nimport {\r\n    useResourceContext,\r\n    usePreference,\r\n    useStore,\r\n    useTranslate,\r\n} from 'ra-core';\r\n\r\nimport { Configurable } from '../../preferences';\r\nimport { Datagrid, DatagridProps } from './Datagrid';\r\nimport { DatagridEditor } from './DatagridEditor';\r\n\r\n/**\r\n * A Datagrid that users can customize in configuration mode\r\n *\r\n * @example\r\n * import {\r\n *     List,\r\n *     DatagridConfigurable,\r\n *     TextField,\r\n * } from 'react-admin';\r\n *\r\n * export const PostList = () => (\r\n *     <List>\r\n *         <DatagridConfigurable>\r\n *             <TextField source=\"id\" />\r\n *             <TextField source=\"title\" />\r\n *             <TextField source=\"author\" />\r\n *             <TextField source=\"year\" />\r\n *         </DatagridConfigurable>\r\n *     </List>\r\n * );\r\n */\r\nexport const DatagridConfigurable = ({\r\n    preferenceKey,\r\n    omit,\r\n    ...props\r\n}: DatagridConfigurableProps) => {\r\n    if (props.optimized) {\r\n        throw new Error(\r\n            'DatagridConfigurable does not support the optimized prop'\r\n        );\r\n    }\r\n\r\n    const translate = useTranslate();\r\n    const resource = useResourceContext(props);\r\n    const finalPreferenceKey = preferenceKey || `${resource}.datagrid`;\r\n\r\n    const [availableColumns, setAvailableColumns] = useStore<\r\n        ConfigurableDatagridColumn[]\r\n    >(`preferences.${finalPreferenceKey}.availableColumns`, []);\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [_, setOmit] = useStore<string[]>(\r\n        `preferences.${finalPreferenceKey}.omit`,\r\n        omit\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        // first render, or the preference have been cleared\r\n        const columns = React.Children.toArray(props.children)\r\n            .filter(child => React.isValidElement(child))\r\n            .map((child: React.ReactElement, index) => ({\r\n                index: String(index),\r\n                source: child.props.source,\r\n                label:\r\n                    child.props.label && typeof child.props.label === 'string' // this list is serializable, so we can't store ReactElement in it\r\n                        ? child.props.label\r\n                        : child.props.source\r\n                        ? //  force the label to be the source\r\n                          undefined\r\n                        : // no source or label, generate a label\r\n                          translate('ra.configurable.Datagrid.unlabeled', {\r\n                              column: index,\r\n                              _: `Unlabeled column #%{column}`,\r\n                          }),\r\n            }));\r\n        if (columns.length !== availableColumns.length) {\r\n            setAvailableColumns(columns);\r\n            setOmit(omit);\r\n        }\r\n    }, [availableColumns]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <Configurable\r\n            editor={<DatagridEditor />}\r\n            preferenceKey={finalPreferenceKey}\r\n            sx={{ display: 'block', minHeight: 2 }}\r\n        >\r\n            <DatagridWithPreferences {...props} />\r\n        </Configurable>\r\n    );\r\n};\r\n\r\nexport interface DatagridConfigurableProps extends DatagridProps {\r\n    /**\r\n     * Key to use to store the user's preferences for this datagrid.\r\n     *\r\n     * Set to '[resource].datagrid' by default. Pass a custom key if you need\r\n     * to display more than one ConfigurableDatagrid per resource.\r\n     */\r\n    preferenceKey?: string;\r\n    /**\r\n     * columns to hide by default\r\n     *\r\n     * @example\r\n     * // by default, hide the id and author columns\r\n     * // users can choose to show show them in configuration mode\r\n     * const PostList = () => (\r\n     *     <List>\r\n     *         <DatagridConfigurable omit={['id', 'author']}>\r\n     *             <TextField source=\"id\" />\r\n     *             <TextField source=\"title\" />\r\n     *             <TextField source=\"author\" />\r\n     *             <TextField source=\"year\" />\r\n     *         </DatagridConfigurable>\r\n     *     </List>\r\n     * );\r\n     */\r\n    omit?: string[];\r\n}\r\n\r\nexport interface ConfigurableDatagridColumn {\r\n    index: string;\r\n    source?: string;\r\n    label?: string;\r\n}\r\n\r\nDatagridConfigurable.propTypes = Datagrid.propTypes;\r\n\r\n/**\r\n * This Datagrid filters its children depending on preferences\r\n */\r\nconst DatagridWithPreferences = ({ children, ...props }: DatagridProps) => {\r\n    const [availableColumns] = usePreference('availableColumns', []);\r\n    const [omit] = usePreference('omit', []);\r\n    const [columns] = usePreference(\r\n        'columns',\r\n        availableColumns\r\n            .filter(column => !omit?.includes(column.source))\r\n            .map(column => column.index)\r\n    );\r\n    const childrenArray = React.Children.toArray(children);\r\n    return (\r\n        <Datagrid {...props}>\r\n            {columns === undefined\r\n                ? children\r\n                : columns.map(index => childrenArray[index])}\r\n        </Datagrid>\r\n    );\r\n};\r\n", "import * as React from 'react';\r\nimport { useSetInspectorTitle } from 'ra-core';\r\n\r\nimport { FieldsSelector } from '../../preferences';\r\n\r\nexport const DatagridEditor = () => {\r\n    useSetInspectorTitle('ra.inspector.Datagrid.title', { _: 'Datagrid' });\r\n\r\n    return <FieldsSelector name=\"columns\" availableName=\"availableColumns\" />;\r\n};\r\n", "import * as React from 'react';\r\nimport { useStore, useTranslate, useResourceContext } from 'ra-core';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Popover,\r\n    useMediaQuery,\r\n    Theme,\r\n    Tooltip,\r\n    IconButton,\r\n} from '@mui/material';\r\nimport ViewWeekIcon from '@mui/icons-material/ViewWeek';\r\n\r\nimport { FieldToggle } from '../../preferences';\r\nimport { ConfigurableDatagridColumn } from './DatagridConfigurable';\r\nimport { styled } from '@mui/material/styles';\r\n\r\n/**\r\n * Renders a button that lets users show / hide columns in a configurable datagrid\r\n *\r\n * @example\r\n * import { SelectColumnsButton, DatagridConfigurable } from 'react-admin';\r\n *\r\n * const PostListActions = () => (\r\n *   <TopToolbar>\r\n        <SelectColumnsButton />\r\n        <FilterButton />\r\n *   </TopToolbar>\r\n * );\r\n *\r\n * const PostList = () => (\r\n *   <List actions={<PostListActions />}>\r\n *     <DatagridConfigurable>\r\n *       <TextField source=\"title\" />\r\n *       <TextField source=\"author\" />\r\n         ...\r\n *     </DatagridConfigurable>\r\n *   </List>\r\n * );\r\n */\r\nexport const SelectColumnsButton = (props: SelectColumnsButtonProps) => {\r\n    const { preferenceKey } = props;\r\n\r\n    const resource = useResourceContext(props);\r\n    const finalPreferenceKey = preferenceKey || `${resource}.datagrid`;\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [availableColumns, setAvailableColumns] = useStore<\r\n        ConfigurableDatagridColumn[]\r\n    >(`preferences.${finalPreferenceKey}.availableColumns`, []);\r\n    const [omit] = useStore<string[]>(\r\n        `preferences.${finalPreferenceKey}.omit`,\r\n        []\r\n    );\r\n    const [columns, setColumns] = useStore<string[]>(\r\n        `preferences.${finalPreferenceKey}.columns`,\r\n        availableColumns\r\n            .filter(column => !omit?.includes(column.source))\r\n            .map(column => column.index)\r\n    );\r\n    const translate = useTranslate();\r\n    const isXSmall = useMediaQuery((theme: Theme) =>\r\n        theme.breakpoints.down('sm')\r\n    );\r\n\r\n    const title = translate('ra.action.select_columns', { _: 'Columns' });\r\n\r\n    const handleClick = (event): void => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (): void => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleToggle = event => {\r\n        if (event.target.checked) {\r\n            // add the column at the right position\r\n            setColumns(\r\n                availableColumns\r\n                    .filter(\r\n                        column =>\r\n                            column.index === event.target.name ||\r\n                            columns.includes(column.index)\r\n                    )\r\n                    .map(column => column.index)\r\n            );\r\n        } else {\r\n            setColumns(columns.filter(index => index !== event.target.name));\r\n        }\r\n    };\r\n\r\n    const handleMove = (index1, index2) => {\r\n        const index1Pos = availableColumns.findIndex(\r\n            // eslint-disable-next-line eqeqeq\r\n            field => field.index == index1\r\n        );\r\n        const index2Pos = availableColumns.findIndex(\r\n            // eslint-disable-next-line eqeqeq\r\n            field => field.index == index2\r\n        );\r\n        if (index1Pos === -1 || index2Pos === -1) {\r\n            return;\r\n        }\r\n        let newAvailableColumns;\r\n        if (index1Pos > index2Pos) {\r\n            newAvailableColumns = [\r\n                ...availableColumns.slice(0, index2Pos),\r\n                availableColumns[index1Pos],\r\n                ...availableColumns.slice(index2Pos, index1Pos),\r\n                ...availableColumns.slice(index1Pos + 1),\r\n            ];\r\n        } else {\r\n            newAvailableColumns = [\r\n                ...availableColumns.slice(0, index1Pos),\r\n                ...availableColumns.slice(index1Pos + 1, index2Pos + 1),\r\n                availableColumns[index1Pos],\r\n                ...availableColumns.slice(index2Pos + 1),\r\n            ];\r\n        }\r\n        setAvailableColumns(newAvailableColumns);\r\n        setColumns(columns =>\r\n            newAvailableColumns\r\n                .filter(column => columns.includes(column.index))\r\n                .map(column => column.index)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isXSmall ? (\r\n                <Tooltip title={title}>\r\n                    <IconButton\r\n                        aria-label={title}\r\n                        color=\"primary\"\r\n                        onClick={handleClick}\r\n                        size=\"large\"\r\n                        {...sanitizeRestProps(props)}\r\n                    >\r\n                        <ViewWeekIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : (\r\n                <StyledButton\r\n                    size=\"small\"\r\n                    onClick={handleClick}\r\n                    startIcon={<ViewWeekIcon />}\r\n                    {...sanitizeRestProps(props)}\r\n                >\r\n                    {title}\r\n                </StyledButton>\r\n            )}\r\n            <Popover\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <Box p={1}>\r\n                    {availableColumns.map(column => (\r\n                        <FieldToggle\r\n                            key={column.index}\r\n                            source={column.source}\r\n                            label={column.label}\r\n                            index={column.index}\r\n                            selected={columns.includes(column.index)}\r\n                            onToggle={handleToggle}\r\n                            onMove={handleMove}\r\n                        />\r\n                    ))}\r\n                </Box>\r\n            </Popover>\r\n        </>\r\n    );\r\n};\r\n\r\nconst StyledButton = styled(Button, {\r\n    name: 'RaSelectColumnsButton',\r\n    overridesResolver: (props, styles) => styles.root,\r\n})({\r\n    '&.MuiButton-sizeSmall': {\r\n        // fix for icon misalignment on small buttons, see https://github.com/mui/material-ui/pull/30240\r\n        lineHeight: 1.5,\r\n    },\r\n});\r\n\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nconst sanitizeRestProps = ({\r\n    resource = null,\r\n    preferenceKey = null,\r\n    ...rest\r\n}) => rest;\r\n/* eslint-enable @typescript-eslint/no-unused-vars */\r\n\r\nexport interface SelectColumnsButtonProps\r\n    extends React.HtmlHTMLAttributes<HTMLDivElement> {\r\n    resource?: string;\r\n    preferenceKey?: string;\r\n}\r\n", "import * as React from 'react';\r\nimport { Children, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { FilterForm } from './FilterForm';\r\nimport { FilterButton } from './FilterButton';\r\nimport { FilterContext } from '../FilterContext';\r\n\r\n/**\r\n * Filter button/form combo\r\n *\r\n * @example\r\n *\r\n * const PostFilter = (props) => (\r\n *     <Filter {...props}>\r\n *         <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n *         <TextInput label=\"Title\" source=\"title\" defaultValue=\"Hello, World!\" />\r\n *     </Filter>\r\n * );\r\n *\r\n * export const PostList = () => (\r\n *     <List filters={<PostFilter />}>\r\n *         ...\r\n *     </List>\r\n * );\r\n *\r\n */\r\nexport const Filter = (props: FilterProps) => {\r\n    const { children } = props;\r\n    const renderButton = () => {\r\n        return <FilterButton className={FilterClasses.button} />;\r\n    };\r\n\r\n    const renderForm = () => {\r\n        return <FilterForm className={FilterClasses.form} />;\r\n    };\r\n\r\n    return (\r\n        <FilterContext.Provider value={Children.toArray(children)}>\r\n            {props.context === 'button' ? renderButton() : renderForm()}\r\n        </FilterContext.Provider>\r\n    );\r\n};\r\n\r\nFilter.propTypes = {\r\n    children: PropTypes.node,\r\n    classes: PropTypes.object,\r\n    context: PropTypes.oneOf(['form', 'button']),\r\n};\r\n\r\nconst PREFIX = 'RaFilter';\r\n\r\nexport const FilterClasses = {\r\n    button: `${PREFIX}-button`,\r\n    form: `${PREFIX}-form`,\r\n};\r\n\r\nexport interface FilterProps {\r\n    children: ReactNode;\r\n    context?: 'form' | 'button';\r\n    variant?: string;\r\n}\r\n", "import * as React from 'react';\r\nimport {\r\n    HtmlHTMLAttributes,\r\n    ReactNode,\r\n    useEffect,\r\n    useCallback,\r\n    useContext,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n    LabelPrefixContextProvider,\r\n    ListFilterContextValue,\r\n    useListContext,\r\n    useResourceContext,\r\n} from 'ra-core';\r\nimport {\r\n    FieldValues,\r\n    FormProvider,\r\n    useForm,\r\n    useFormContext,\r\n} from 'react-hook-form';\r\nimport set from 'lodash/set';\r\nimport unset from 'lodash/unset';\r\nimport get from 'lodash/get';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport isEqual from 'lodash/isEqual';\r\n\r\nimport { FilterFormInput } from './FilterFormInput';\r\nimport { FilterContext } from '../FilterContext';\r\n\r\nexport const FilterForm = (props: FilterFormProps) => {\r\n    const { defaultValues, filters: filtersProps, ...rest } = props;\r\n\r\n    const { setFilters, displayedFilters, filterValues } = useListContext(\r\n        props\r\n    );\r\n    const filters = useContext(FilterContext) || filtersProps;\r\n\r\n    const mergedInitialValuesWithDefaultValues = mergeInitialValuesWithDefaultValues(\r\n        defaultValues || filterValues,\r\n        filters\r\n    );\r\n\r\n    const form = useForm({\r\n        defaultValues: mergedInitialValuesWithDefaultValues,\r\n    });\r\n\r\n    // Reapply filterValues when the URL changes or a user removes a filter\r\n    useEffect(() => {\r\n        const newValues = getFilterFormValues(form.getValues(), filterValues);\r\n        if (!isEqual(newValues, form.getValues())) {\r\n            form.reset(newValues);\r\n        }\r\n    }, [filterValues, form]);\r\n\r\n    useEffect(() => {\r\n        const subscription = form.watch(async (values, { name }) => {\r\n            // We must check whether the form is valid as watch will not check that for us.\r\n            // We can't rely on form state as it might not be synchronized yet\r\n            const isFormValid = await form.trigger();\r\n\r\n            if (isFormValid) {\r\n                if (get(values, name) === '') {\r\n                    const newValues = cloneDeep(values);\r\n                    unset(newValues, name);\r\n                    setFilters(newValues, displayedFilters);\r\n                } else {\r\n                    setFilters(values, displayedFilters);\r\n                }\r\n            }\r\n        });\r\n        return () => subscription.unsubscribe();\r\n    }, [displayedFilters, form, setFilters]);\r\n\r\n    return (\r\n        <FormProvider {...form}>\r\n            <FilterFormBase\r\n                onSubmit={handleFormSubmit}\r\n                filters={filters}\r\n                {...rest}\r\n            />\r\n        </FormProvider>\r\n    );\r\n};\r\n\r\nexport type FilterFormProps = FilterFormBaseProps & {\r\n    defaultValues?: FieldValues;\r\n};\r\n\r\nexport const FilterFormBase = (props: FilterFormBaseProps) => {\r\n    const { className, filters, ...rest } = props;\r\n    const resource = useResourceContext(props);\r\n    const form = useFormContext();\r\n    const { displayedFilters = {}, hideFilter } = useListContext(props);\r\n\r\n    useEffect(() => {\r\n        filters.forEach((filter: JSX.Element) => {\r\n            if (filter.props.alwaysOn && filter.props.defaultValue) {\r\n                throw new Error(\r\n                    'Cannot use alwaysOn and defaultValue on a filter input. Please set the filterDefaultValues props on the <List> element instead.'\r\n                );\r\n            }\r\n        });\r\n    }, [filters]);\r\n\r\n    const getShownFilters = () => {\r\n        const values = form.getValues();\r\n        return filters.filter((filterElement: JSX.Element) => {\r\n            const filterValue = get(values, filterElement.props.source);\r\n            return (\r\n                filterElement.props.alwaysOn ||\r\n                displayedFilters[filterElement.props.source] ||\r\n                (filterValue !== '' && typeof filterValue !== 'undefined')\r\n            );\r\n        });\r\n    };\r\n\r\n    const handleHide = useCallback(\r\n        event => hideFilter(event.currentTarget.dataset.key),\r\n        [hideFilter]\r\n    );\r\n\r\n    return (\r\n        <LabelPrefixContextProvider prefix={`resources.${resource}.fields`}>\r\n            <StyledForm\r\n                className={className}\r\n                {...sanitizeRestProps(rest)}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                {getShownFilters().map((filterElement: JSX.Element) => (\r\n                    <FilterFormInput\r\n                        key={filterElement.props.source}\r\n                        filterElement={filterElement}\r\n                        handleHide={handleHide}\r\n                        resource={resource}\r\n                        className={FilterFormClasses.filterFormInput}\r\n                    />\r\n                ))}\r\n                <div className={FilterFormClasses.clearFix} />\r\n            </StyledForm>\r\n        </LabelPrefixContextProvider>\r\n    );\r\n};\r\n\r\nconst handleSubmit = event => {\r\n    event.preventDefault();\r\n    return false;\r\n};\r\n\r\nFilterFormBase.propTypes = {\r\n    resource: PropTypes.string,\r\n    filters: PropTypes.arrayOf(PropTypes.node).isRequired,\r\n    displayedFilters: PropTypes.object,\r\n    hideFilter: PropTypes.func,\r\n    initialValues: PropTypes.object,\r\n    className: PropTypes.string,\r\n};\r\n\r\nconst sanitizeRestProps = ({\r\n    displayedFilters,\r\n    filterValues,\r\n    hasCreate,\r\n    hideFilter,\r\n    setFilters,\r\n    resource,\r\n    ...props\r\n}: Partial<FilterFormBaseProps> & { hasCreate?: boolean }) => props;\r\n\r\nexport type FilterFormBaseProps = Omit<\r\n    HtmlHTMLAttributes<HTMLFormElement>,\r\n    'children'\r\n> &\r\n    Partial<ListFilterContextValue> & {\r\n        className?: string;\r\n        resource?: string;\r\n        filters?: ReactNode[];\r\n    };\r\n\r\nexport const mergeInitialValuesWithDefaultValues = (\r\n    initialValues,\r\n    filters\r\n) => ({\r\n    ...filters\r\n        .filter(\r\n            (filterElement: JSX.Element) =>\r\n                filterElement.props.alwaysOn && filterElement.props.defaultValue\r\n        )\r\n        .reduce(\r\n            (acc, filterElement: JSX.Element) =>\r\n                set(\r\n                    { ...acc },\r\n                    filterElement.props.source,\r\n                    filterElement.props.defaultValue\r\n                ),\r\n            {} as any\r\n        ),\r\n    ...initialValues,\r\n});\r\n\r\nconst handleFormSubmit = () => {};\r\n\r\nconst PREFIX = 'RaFilterForm';\r\n\r\nexport const FilterFormClasses = {\r\n    clearFix: `${PREFIX}-clearFix`,\r\n    filterFormInput: `${PREFIX}-filterFormInput`,\r\n};\r\n\r\nconst StyledForm = styled('form', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    display: 'flex',\r\n    flex: '0 1 auto',\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: '100%',\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n        flex: '0 1 100%',\r\n    },\r\n    flexWrap: 'wrap',\r\n    alignItems: 'flex-end',\r\n    pointerEvents: 'none',\r\n    padding: `0 0 ${theme.spacing(0.5)} 0`,\r\n    '& .MuiFormHelperText-root': { display: 'none' },\r\n    [`& .${FilterFormClasses.clearFix}`]: { clear: 'right' },\r\n    [`& .${FilterFormClasses.filterFormInput} .MuiFormControl-root`]: {\r\n        marginTop: `${theme.spacing(1)}`,\r\n    },\r\n}));\r\n\r\n/**\r\n * Because we are using controlled inputs with react-hook-form, we must provide a default value\r\n * for each input when resetting the form. (see https://react-hook-form.com/docs/useform/reset).\r\n * To ensure we don't provide undefined which will result to the current input value being reapplied\r\n * and due to the dynamic nature of the filter form, we rebuild the filter form values from its current\r\n * values and make sure to pass at least an empty string for each input.\r\n */\r\nexport const getFilterFormValues = (\r\n    formValues: Record<string, any>,\r\n    filterValues: Record<string, any>\r\n) => {\r\n    return Object.keys(formValues).reduce((acc, key) => {\r\n        acc[key] = getInputValue(formValues, key, filterValues);\r\n        return acc;\r\n    }, cloneDeep(filterValues) ?? {});\r\n};\r\n\r\nconst getInputValue = (\r\n    formValues: Record<string, any>,\r\n    key: string,\r\n    filterValues: Record<string, any>\r\n) => {\r\n    if (formValues[key] === undefined || formValues[key] === null) {\r\n        return '';\r\n    }\r\n    if (Array.isArray(formValues[key])) {\r\n        return get(filterValues, key, '');\r\n    }\r\n    if (formValues[key] instanceof Date) {\r\n        return get(filterValues, key, '');\r\n    }\r\n    if (typeof formValues[key] === 'object') {\r\n        const inputValues = Object.keys(formValues[key]).reduce(\r\n            (acc, innerKey) => {\r\n                const nestedInputValue = getInputValue(\r\n                    formValues[key],\r\n                    innerKey,\r\n                    (filterValues || {})[key] ?? {}\r\n                );\r\n                if (nestedInputValue === '') {\r\n                    return acc;\r\n                }\r\n                acc[innerKey] = nestedInputValue;\r\n                return acc;\r\n            },\r\n            {}\r\n        );\r\n        if (!Object.keys(inputValues).length) return '';\r\n        return inputValues;\r\n    }\r\n    return get(filterValues, key, '');\r\n};\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { IconButton } from '@mui/material';\r\nimport ActionHide from '@mui/icons-material/HighlightOff';\r\nimport clsx from 'clsx';\r\nimport { useResourceContext, useTranslate } from 'ra-core';\r\n\r\nexport const FilterFormInput = props => {\r\n    const { filterElement, handleHide, className } = props;\r\n    const resource = useResourceContext(props);\r\n    const translate = useTranslate();\r\n\r\n    return (\r\n        <Root\r\n            data-source={filterElement.props.source}\r\n            className={clsx('filter-field', className)}\r\n        >\r\n            {!filterElement.props.alwaysOn && (\r\n                <IconButton\r\n                    className={clsx(\r\n                        'hide-filter',\r\n                        FilterFormInputClasses.hideButton\r\n                    )}\r\n                    onClick={handleHide}\r\n                    data-key={filterElement.props.source}\r\n                    title={translate('ra.action.remove_filter')}\r\n                    size=\"small\"\r\n                >\r\n                    <ActionHide />\r\n                </IconButton>\r\n            )}\r\n            {React.cloneElement(filterElement, {\r\n                resource,\r\n                record: emptyRecord,\r\n                size: filterElement.props.size ?? 'small',\r\n                helperText: false,\r\n                // ignore defaultValue in Field because it was already set in Form (via mergedInitialValuesWithDefaultValues)\r\n                defaultValue: undefined,\r\n            })}\r\n            <div className={FilterFormInputClasses.spacer}>&nbsp;</div>\r\n        </Root>\r\n    );\r\n};\r\n\r\nFilterFormInput.propTypes = {\r\n    filterElement: PropTypes.node,\r\n    handleHide: PropTypes.func,\r\n    resource: PropTypes.string,\r\n    className: PropTypes.string,\r\n};\r\n\r\nconst PREFIX = 'RaFilterFormInput';\r\n\r\nexport const FilterFormInputClasses = {\r\n    spacer: `${PREFIX}-spacer`,\r\n    hideButton: `${PREFIX}-hideButton`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'flex-end',\r\n    pointerEvents: 'auto',\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: '100%',\r\n    },\r\n\r\n    [`& .${FilterFormInputClasses.spacer}`]: { width: theme.spacing(2) },\r\n    [`& .${FilterFormInputClasses.hideButton}`]: {\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst emptyRecord = {};\r\n", "import * as React from 'react';\r\n\r\nexport type FilterContextType = React.ReactNode[];\r\n\r\n/**\r\n * Make filters accessible to sub components\r\n */\r\nexport const FilterContext = React.createContext<FilterContextType>(undefined);\r\n", "import * as React from 'react';\r\nimport {\r\n    useState,\r\n    useCallback,\r\n    useRef,\r\n    ReactNode,\r\n    HtmlHTMLAttributes,\r\n    useContext,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Menu, MenuItem, styled } from '@mui/material';\r\nimport ContentFilter from '@mui/icons-material/FilterList';\r\nimport lodashGet from 'lodash/get';\r\nimport isEqual from 'lodash/isEqual';\r\nimport { useListContext, useResourceContext, useTranslate } from 'ra-core';\r\nimport { stringify } from 'query-string';\r\nimport { useNavigate } from 'react-router';\r\n\r\nimport { FilterButtonMenuItem } from './FilterButtonMenuItem';\r\nimport { Button } from '../../button';\r\nimport { FilterContext } from '../FilterContext';\r\nimport { extractValidSavedQueries, useSavedQueries } from './useSavedQueries';\r\nimport { AddSavedQueryDialog } from './AddSavedQueryDialog';\r\nimport { RemoveSavedQueryDialog } from './RemoveSavedQueryDialog';\r\n\r\nexport const FilterButton = (props: FilterButtonProps): JSX.Element => {\r\n    const {\r\n        filters: filtersProp,\r\n        className,\r\n        disableSaveQuery,\r\n        ...rest\r\n    } = props;\r\n    const filters = useContext(FilterContext) || filtersProp;\r\n    const resource = useResourceContext(props);\r\n    const translate = useTranslate();\r\n    const [savedQueries] = useSavedQueries(resource);\r\n    const navigate = useNavigate();\r\n    const {\r\n        displayedFilters = {},\r\n        filterValues,\r\n        perPage,\r\n        setFilters,\r\n        showFilter,\r\n        sort,\r\n    } = useListContext(props);\r\n    const hasFilterValues = !isEqual(filterValues, {});\r\n    const validSavedQueries = extractValidSavedQueries(savedQueries);\r\n    const hasSavedCurrentQuery = validSavedQueries.some(savedQuery =>\r\n        isEqual(savedQuery.value, {\r\n            filter: filterValues,\r\n            sort,\r\n            perPage,\r\n            displayedFilters,\r\n        })\r\n    );\r\n    const [open, setOpen] = useState(false);\r\n    const anchorEl = useRef();\r\n\r\n    if (filters === undefined) {\r\n        throw new Error('FilterButton requires filters prop to be set');\r\n    }\r\n\r\n    const hiddenFilters = filters.filter(\r\n        (filterElement: JSX.Element) =>\r\n            !filterElement.props.alwaysOn &&\r\n            !displayedFilters[filterElement.props.source] &&\r\n            typeof lodashGet(filterValues, filterElement.props.source) ===\r\n                'undefined'\r\n    );\r\n\r\n    const handleClickButton = useCallback(\r\n        event => {\r\n            // This prevents ghost click.\r\n            event.preventDefault();\r\n            setOpen(true);\r\n            anchorEl.current = event.currentTarget;\r\n        },\r\n        [anchorEl, setOpen]\r\n    );\r\n\r\n    const handleRequestClose = useCallback(() => {\r\n        setOpen(false);\r\n    }, [setOpen]);\r\n\r\n    const handleShow = useCallback(\r\n        ({ source, defaultValue }) => {\r\n            showFilter(source, defaultValue === '' ? undefined : defaultValue);\r\n            setOpen(false);\r\n        },\r\n        [showFilter, setOpen]\r\n    );\r\n\r\n    // add query dialog state\r\n    const [addSavedQueryDialogOpen, setAddSavedQueryDialogOpen] = useState(\r\n        false\r\n    );\r\n    const hideAddSavedQueryDialog = (): void => {\r\n        setAddSavedQueryDialogOpen(false);\r\n    };\r\n    const showAddSavedQueryDialog = (): void => {\r\n        setOpen(false);\r\n        setAddSavedQueryDialogOpen(true);\r\n    };\r\n\r\n    // remove query dialog state\r\n    const [\r\n        removeSavedQueryDialogOpen,\r\n        setRemoveSavedQueryDialogOpen,\r\n    ] = useState(false);\r\n    const hideRemoveSavedQueryDialog = (): void => {\r\n        setRemoveSavedQueryDialogOpen(false);\r\n    };\r\n    const showRemoveSavedQueryDialog = (): void => {\r\n        setOpen(false);\r\n        setRemoveSavedQueryDialogOpen(true);\r\n    };\r\n\r\n    if (\r\n        hiddenFilters.length === 0 &&\r\n        validSavedQueries.length === 0 &&\r\n        !hasFilterValues\r\n    ) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Root className={className} {...sanitizeRestProps(rest)}>\r\n            <Button\r\n                className=\"add-filter\"\r\n                label=\"ra.action.add_filter\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClickButton}\r\n            >\r\n                <ContentFilter />\r\n            </Button>\r\n            <Menu\r\n                open={open}\r\n                anchorEl={anchorEl.current}\r\n                onClose={handleRequestClose}\r\n            >\r\n                {hiddenFilters.map((filterElement: JSX.Element, index) => (\r\n                    <FilterButtonMenuItem\r\n                        key={filterElement.props.source}\r\n                        filter={filterElement}\r\n                        resource={resource}\r\n                        onShow={handleShow}\r\n                        autoFocus={index === 0}\r\n                    />\r\n                ))}\r\n                {validSavedQueries.map((savedQuery, index) =>\r\n                    isEqual(savedQuery.value, {\r\n                        filter: filterValues,\r\n                        sort,\r\n                        perPage,\r\n                        displayedFilters,\r\n                    }) ? (\r\n                        <MenuItem\r\n                            onClick={showRemoveSavedQueryDialog}\r\n                            key={index}\r\n                        >\r\n                            {translate(\r\n                                'ra.saved_queries.remove_label_with_name',\r\n                                {\r\n                                    _: 'Remove query \"%{name}\"',\r\n                                    name: savedQuery.label,\r\n                                }\r\n                            )}\r\n                        </MenuItem>\r\n                    ) : (\r\n                        <MenuItem\r\n                            onClick={(): void => {\r\n                                navigate({\r\n                                    search: stringify({\r\n                                        filter: JSON.stringify(\r\n                                            savedQuery.value.filter\r\n                                        ),\r\n                                        sort: savedQuery.value.sort.field,\r\n                                        order: savedQuery.value.sort.order,\r\n                                        page: 1,\r\n                                        perPage: savedQuery.value.perPage,\r\n                                        displayedFilters: JSON.stringify(\r\n                                            savedQuery.value.displayedFilters\r\n                                        ),\r\n                                    }),\r\n                                });\r\n                                setOpen(false);\r\n                            }}\r\n                            key={index}\r\n                        >\r\n                            {savedQuery.label}\r\n                        </MenuItem>\r\n                    )\r\n                )}\r\n                {hasFilterValues && !hasSavedCurrentQuery && !disableSaveQuery && (\r\n                    <MenuItem onClick={showAddSavedQueryDialog}>\r\n                        {translate('ra.saved_queries.new_label', {\r\n                            _: 'Save current query...',\r\n                        })}\r\n                    </MenuItem>\r\n                )}\r\n                {hasFilterValues && (\r\n                    <MenuItem onClick={() => setFilters({}, {}, false)}>\r\n                        {translate('ra.action.remove_all_filters', {\r\n                            _: 'Remove all filters',\r\n                        })}\r\n                    </MenuItem>\r\n                )}\r\n            </Menu>\r\n            {!disableSaveQuery && (\r\n                <>\r\n                    <AddSavedQueryDialog\r\n                        open={addSavedQueryDialogOpen}\r\n                        onClose={hideAddSavedQueryDialog}\r\n                    />\r\n                    <RemoveSavedQueryDialog\r\n                        open={removeSavedQueryDialogOpen}\r\n                        onClose={hideRemoveSavedQueryDialog}\r\n                    />\r\n                </>\r\n            )}\r\n        </Root>\r\n    );\r\n};\r\n\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nconst sanitizeRestProps = ({\r\n    displayedFilters = null,\r\n    filterValues = null,\r\n    showFilter = null,\r\n    ...rest\r\n}) => rest;\r\n/* eslint-enable @typescript-eslint/no-unused-vars */\r\n\r\nFilterButton.propTypes = {\r\n    resource: PropTypes.string,\r\n    filters: PropTypes.arrayOf(PropTypes.node),\r\n    displayedFilters: PropTypes.object,\r\n    filterValues: PropTypes.object,\r\n    showFilter: PropTypes.func,\r\n    className: PropTypes.string,\r\n};\r\n\r\nexport interface FilterButtonProps extends HtmlHTMLAttributes<HTMLDivElement> {\r\n    className?: string;\r\n    resource?: string;\r\n    filterValues?: any;\r\n    showFilter?: (filterName: string, defaultValue: any) => void;\r\n    displayedFilters?: any;\r\n    filters?: ReactNode[];\r\n    disableSaveQuery?: boolean;\r\n}\r\n\r\nconst PREFIX = 'RaFilterButton';\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})({\r\n    display: 'inline-block',\r\n});\r\n", "import * as React from 'react';\r\nimport { forwardRef, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { FieldTitle, useResourceContext } from 'ra-core';\r\n\r\nexport const FilterButtonMenuItem = forwardRef<any, FilterButtonMenuItemProps>(\r\n    (props, ref) => {\r\n        const { filter, onShow, autoFocus } = props;\r\n        const resource = useResourceContext(props);\r\n        const handleShow = useCallback(() => {\r\n            onShow({\r\n                source: filter.props.source,\r\n                defaultValue: filter.props.defaultValue,\r\n            });\r\n        }, [filter.props.defaultValue, filter.props.source, onShow]);\r\n\r\n        return (\r\n            <MenuItem\r\n                className=\"new-filter-item\"\r\n                data-key={filter.props.source}\r\n                data-default-value={filter.props.defaultValue}\r\n                key={filter.props.source}\r\n                onClick={handleShow}\r\n                autoFocus={autoFocus}\r\n                ref={ref}\r\n                disabled={filter.props.disabled}\r\n            >\r\n                <FieldTitle\r\n                    label={filter.props.label}\r\n                    source={filter.props.source}\r\n                    resource={resource}\r\n                />\r\n            </MenuItem>\r\n        );\r\n    }\r\n);\r\n\r\nFilterButtonMenuItem.propTypes = {\r\n    filter: PropTypes.element.isRequired,\r\n    onShow: PropTypes.func.isRequired,\r\n    resource: PropTypes.string,\r\n    autoFocus: PropTypes.bool,\r\n};\r\n\r\nexport interface FilterButtonMenuItemProps {\r\n    filter: JSX.Element;\r\n    onShow: (params: { source: string; defaultValue: any }) => void;\r\n    resource: string;\r\n    autoFocus?: boolean;\r\n}\r\n", "import { SortPayload, useStore } from 'ra-core';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useSavedQueries = (resource: string) => {\r\n    return useStore<SavedQuery[]>(`${resource}.savedQueries`, []);\r\n};\r\n\r\nexport interface SavedQuery {\r\n    label: string;\r\n    value: {\r\n        filter?: any;\r\n        displayedFilters?: any[];\r\n        sort?: SortPayload;\r\n        perPage?: number;\r\n    };\r\n}\r\n\r\nexport const extractValidSavedQueries = (savedQueries: SavedQuery[]) => {\r\n    if (Array.isArray(savedQueries)) {\r\n        return savedQueries.filter(query => isValidSavedQuery(query));\r\n    }\r\n\r\n    return [];\r\n};\r\n\r\nexport const areValidSavedQueries = (savedQueries: SavedQuery[]) => {\r\n    if (\r\n        Array.isArray(savedQueries) &&\r\n        savedQueries.every(query => isValidSavedQuery(query))\r\n    ) {\r\n        return true;\r\n    }\r\n};\r\n\r\nexport const isValidSavedQuery = (savedQuery: SavedQuery) => {\r\n    if (\r\n        savedQuery.label &&\r\n        typeof savedQuery.label === 'string' &&\r\n        savedQuery.value &&\r\n        typeof Array.isArray(savedQuery.value.displayedFilters) &&\r\n        typeof savedQuery.value.perPage === 'number' &&\r\n        typeof savedQuery.value.sort?.field === 'string' &&\r\n        typeof savedQuery.value.sort?.order === 'string' &&\r\n        typeof savedQuery.value.filter === 'object'\r\n    ) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n", "import * as React from 'react';\r\nimport { ReactElement, ChangeEvent, FormEvent, useState } from 'react';\r\nimport { useListContext, useTranslate } from 'ra-core';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    TextField,\r\n} from '@mui/material';\r\n\r\nimport { extractValidSavedQueries, useSavedQueries } from './useSavedQueries';\r\n\r\nexport const AddSavedQueryDialog = ({\r\n    open,\r\n    onClose,\r\n}: AddSavedQueryDialogProps): ReactElement => {\r\n    const translate = useTranslate();\r\n    const {\r\n        resource,\r\n        filterValues,\r\n        displayedFilters,\r\n        sort,\r\n        perPage,\r\n    } = useListContext();\r\n\r\n    const [savedQueries, setSavedQueries] = useSavedQueries(resource);\r\n\r\n    // input state\r\n    const [queryName, setQueryName] = useState('');\r\n    const handleQueryNameChange = (\r\n        event: ChangeEvent<HTMLInputElement>\r\n    ): void => {\r\n        setQueryName(event.target.value);\r\n    };\r\n\r\n    const handleFormSubmit = (e: FormEvent<HTMLFormElement>): void => {\r\n        e.preventDefault();\r\n        addQuery();\r\n    };\r\n\r\n    const addQuery = (): void => {\r\n        const newSavedQuery = {\r\n            label: queryName,\r\n            value: {\r\n                filter: filterValues,\r\n                sort,\r\n                perPage,\r\n                displayedFilters,\r\n            },\r\n        };\r\n        const newSavedQueries = extractValidSavedQueries(savedQueries);\r\n        setSavedQueries(newSavedQueries.concat(newSavedQuery));\r\n        setQueryName('');\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                {translate('ra.saved_queries.new_dialog_title', {\r\n                    _: 'Save current query as',\r\n                })}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <form onSubmit={handleFormSubmit}>\r\n                    <TextField\r\n                        // eslint-disable-next-line jsx-a11y/no-autofocus\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label={translate('ra.saved_queries.query_name', {\r\n                            _: 'Query name',\r\n                        })}\r\n                        fullWidth\r\n                        value={queryName}\r\n                        onChange={handleQueryNameChange}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose}>\r\n                    {translate('ra.action.cancel')}\r\n                </Button>\r\n                <Button onClick={addQuery} color=\"primary\">\r\n                    {translate('ra.action.save')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport interface AddSavedQueryDialogProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\n", "import * as React from 'react';\r\nimport { ReactElement } from 'react';\r\nimport isEqual from 'lodash/isEqual';\r\nimport { useListContext, useTranslate } from 'ra-core';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n} from '@mui/material';\r\n\r\nimport { useSavedQueries, extractValidSavedQueries } from './useSavedQueries';\r\n\r\nexport interface RemoveSavedQueryDialogProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\n\r\nexport const RemoveSavedQueryDialog = ({\r\n    open,\r\n    onClose,\r\n}: RemoveSavedQueryDialogProps): ReactElement => {\r\n    const translate = useTranslate();\r\n    const {\r\n        resource,\r\n        filterValues,\r\n        sort,\r\n        perPage,\r\n        displayedFilters,\r\n    } = useListContext();\r\n\r\n    const [savedQueries, setSavedQueries] = useSavedQueries(resource);\r\n\r\n    const removeQuery = (): void => {\r\n        let savedQueryToRemove = {\r\n            filter: filterValues,\r\n            sort,\r\n            perPage,\r\n            displayedFilters,\r\n        };\r\n\r\n        const newSavedQueries = extractValidSavedQueries(savedQueries);\r\n        const index = newSavedQueries.findIndex(savedFilter =>\r\n            isEqual(savedFilter.value, savedQueryToRemove)\r\n        );\r\n        setSavedQueries([\r\n            ...newSavedQueries.slice(0, index),\r\n            ...newSavedQueries.slice(index + 1),\r\n        ]);\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {translate('ra.saved_queries.remove_dialog_title', {\r\n                    _: 'Remove saved query?',\r\n                })}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {translate('ra.saved_queries.remove_message', {\r\n                        _:\r\n                            'Are you sure you want to remove that item from your list of saved queries?',\r\n                    })}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose}>\r\n                    {translate('ra.action.cancel')}\r\n                </Button>\r\n                <Button\r\n                    onClick={removeQuery}\r\n                    color=\"primary\"\r\n                    // eslint-disable-next-line jsx-a11y/no-autofocus\r\n                    autoFocus\r\n                >\r\n                    {translate('ra.action.confirm')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n", "import * as React from 'react';\r\nimport { ReactNode } from 'react';\r\nimport { Box, BoxProps, List, Typography } from '@mui/material';\r\nimport { useTranslate } from 'ra-core';\r\n\r\n/**\r\n * Header and container for a list of filter list items\r\n *\r\n * Expects 2 props, and a list of <FilterListItem> as children:\r\n *\r\n * - label: The label for this filter section. Will be translated.\r\n * - icon: An icon react element\r\n *\r\n * @see FilterListItem\r\n *\r\n * @example\r\n *\r\n * import * as React from 'react';\r\n * import { Card, CardContent } from '@mui/material';\r\n * import MailIcon from '@mui/icons-material/MailOutline';\r\n * import { FilterList, FilterListItem } from 'react-admin';\r\n *\r\n * const FilterSidebar = () => (\r\n *     <Card>\r\n *         <CardContent>\r\n *             <FilterList\r\n *                 label=\"Subscribed to newsletter\"\r\n *                 icon={<MailIcon />}\r\n *             >\r\n *                 <FilterListItem\r\n *                     label=\"Yes\"\r\n *                     value={{ has_newsletter: true }}\r\n *                  />\r\n *                 <FilterListItem\r\n *                     label=\"No\"\r\n *                     value={{ has_newsletter: false }}\r\n *                  />\r\n *             </FilterList>\r\n *         </CardContent>\r\n *     </Card>\r\n * );\r\n */\r\nexport const FilterList = (props: FilterListProps) => {\r\n    const { label, icon, children, ...rest } = props;\r\n    const translate = useTranslate();\r\n    return (\r\n        <Box {...rest}>\r\n            <Box mt={2} display=\"flex\" alignItems=\"center\">\r\n                <Box mr={1}>{icon}</Box>\r\n                <Typography variant=\"overline\">\r\n                    {translate(label, { _: label })}\r\n                </Typography>\r\n            </Box>\r\n            <List dense disablePadding>\r\n                {children}\r\n            </List>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport interface FilterListProps extends BoxProps {\r\n    label: string;\r\n    icon: ReactNode;\r\n}\r\n", "import * as React from 'react';\r\nimport { isElement } from 'react-is';\r\nimport { styled } from '@mui/material/styles';\r\nimport { memo, ReactElement } from 'react';\r\nimport {\r\n    IconButton,\r\n    ListItem,\r\n    ListItemButton,\r\n    ListItemIcon,\r\n    ListItemProps,\r\n    ListItemText,\r\n    ListItemSecondaryAction,\r\n} from '@mui/material';\r\nimport CancelIcon from '@mui/icons-material/CancelOutlined';\r\nimport {\r\n    useTranslate,\r\n    useListFilterContext,\r\n    shallowEqual,\r\n    useEvent,\r\n} from 'ra-core';\r\nimport matches from 'lodash/matches';\r\nimport pickBy from 'lodash/pickBy';\r\n\r\nconst arePropsEqual = (prevProps, nextProps) =>\r\n    prevProps.label === nextProps.label &&\r\n    shallowEqual(prevProps.value, nextProps.value);\r\n\r\n/**\r\n * Button to enable/disable a list filter.\r\n *\r\n * Expects 2 props:\r\n *\r\n * - label: The text (or React element) to be displayed for this item.\r\n *   If it's a string, the component will translate it.\r\n * - value: An object to be merged into the filter value when enabling the filter\r\n *   (e.g. { is_published: true, published_at_gte: '2020-07-08' })\r\n *\r\n * @example\r\n *\r\n * import * as React from 'react';\r\n * import { Card, CardContent } from '@mui/material';\r\n * import MailIcon from '@mui/icons-material/MailOutline';\r\n * import { FilterList, FilterListItem } from 'react-admin';\r\n *\r\n * const FilterSidebar = () => (\r\n *     <Card>\r\n *         <CardContent>\r\n *             <FilterList\r\n *                 label=\"Subscribed to newsletter\"\r\n *                 icon={<MailIcon />}\r\n *             >\r\n *                 <FilterListItem\r\n *                     label=\"Yes\"\r\n *                     value={{ has_newsletter: true }}\r\n *                  />\r\n *                 <FilterListItem\r\n *                     label=\"No\"\r\n *                     value={{ has_newsletter: false }}\r\n *                  />\r\n *             </FilterList>\r\n *         </CardContent>\r\n *     </Card>\r\n * );\r\n *\r\n * @example // The value prop can contain multiple keys\r\n *\r\n * import * as React from 'react';\r\n * import {\r\n *     endOfYesterday,\r\n *     startOfWeek,\r\n *     subWeeks,\r\n *     startOfMonth,\r\n *     subMonths,\r\n * } from 'date-fns';\r\n * import { Card, CardContent } from '@mui/material';\r\n * import AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n * import { FilterList, FilterListItem } from 'react-admin';\r\n *\r\n * const FilterSidebar = () => (\r\n *     <Card>\r\n *         <CardContent>\r\n *             <FilterList\r\n *                 label=\"Last visited\"\r\n *                 icon={<AccessTimeIcon />}\r\n *             >\r\n *                 <FilterListItem\r\n *                     label=\"Today\"\r\n *                     value={{\r\n *                         last_seen_gte: endOfYesterday().toISOString(),\r\n *                         last_seen_lte: undefined,\r\n *                     }}\r\n *                 />\r\n *                 <FilterListItem\r\n *                     label=\"This week\"\r\n *                     value={{\r\n *                         last_seen_gte: startOfWeek(\r\n *                             new Date()\r\n *                         ).toISOString(),\r\n *                         last_seen_lte: undefined,\r\n *                     }}\r\n *                 />\r\n *                 <FilterListItem\r\n *                     label=\"Last week\"\r\n *                     value={{\r\n *                         last_seen_gte: subWeeks(\r\n *                             startOfWeek(new Date()),\r\n *                             1\r\n *                         ).toISOString(),\r\n *                         last_seen_lte: startOfWeek(\r\n *                             new Date()\r\n *                         ).toISOString(),\r\n *                     }}\r\n *                 />\r\n *                 <FilterListItem\r\n *                     label=\"This month\"\r\n *                     value={{\r\n *                         last_seen_gte: startOfMonth(\r\n *                             new Date()\r\n *                         ).toISOString(),\r\n *                         last_seen_lte: undefined,\r\n *                     }}\r\n *                 />\r\n *                 <FilterListItem\r\n *                     label=\"Last month\"\r\n *                     value={{\r\n *                         last_seen_gte: subMonths(\r\n *                             startOfMonth(new Date()),\r\n *                             1\r\n *                         ).toISOString(),\r\n *                         last_seen_lte: startOfMonth(\r\n *                             new Date()\r\n *                         ).toISOString(),\r\n *                     }}\r\n *                 />\r\n *                 <FilterListItem\r\n *                     label=\"Earlier\"\r\n *                     value={{\r\n *                         last_seen_gte: undefined,\r\n *                         last_seen_lte: subMonths(\r\n *                             startOfMonth(new Date()),\r\n *                             1\r\n *                         ).toISOString(),\r\n *                     }}\r\n *                 />\r\n *             </FilterList>\r\n *         </CardContent>\r\n *     </Card>\r\n * );\r\n */\r\nexport const FilterListItem = memo((props: FilterListItemProps) => {\r\n    const {\r\n        label,\r\n        value,\r\n        icon,\r\n        isSelected: getIsSelected = DefaultIsSelected,\r\n        toggleFilter: userToggleFilter = DefaultToggleFilter,\r\n        ...rest\r\n    } = props;\r\n    const { filterValues, setFilters } = useListFilterContext();\r\n    const translate = useTranslate();\r\n    const toggleFilter = useEvent(userToggleFilter);\r\n\r\n    // We can't wrap this function with useEvent as it is called in the render phase\r\n    const isSelected = getIsSelected(value, filterValues);\r\n\r\n    const handleClick = () =>\r\n        setFilters(toggleFilter(value, filterValues), null, false);\r\n\r\n    return (\r\n        <StyledListItem\r\n            onClick={handleClick}\r\n            selected={isSelected}\r\n            disablePadding\r\n            {...rest}\r\n        >\r\n            <ListItemButton\r\n                disableGutters\r\n                className={FilterListItemClasses.listItemButton}\r\n            >\r\n                {icon && (\r\n                    <ListItemIcon\r\n                        className={FilterListItemClasses.listItemIcon}\r\n                    >\r\n                        {icon}\r\n                    </ListItemIcon>\r\n                )}\r\n                <ListItemText\r\n                    primary={\r\n                        isElement(label)\r\n                            ? label\r\n                            : translate(label, { _: label })\r\n                    }\r\n                    className={FilterListItemClasses.listItemText}\r\n                    data-selected={isSelected ? 'true' : 'false'}\r\n                />\r\n                {isSelected && (\r\n                    <ListItemSecondaryAction\r\n                        onClick={event => {\r\n                            event.stopPropagation();\r\n                            handleClick();\r\n                        }}\r\n                    >\r\n                        <IconButton size=\"small\">\r\n                            <CancelIcon />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                )}\r\n            </ListItemButton>\r\n        </StyledListItem>\r\n    );\r\n}, arePropsEqual);\r\n\r\nconst DefaultIsSelected = (value, filters) =>\r\n    matches(pickBy(value, val => typeof val !== 'undefined'))(filters);\r\n\r\nconst DefaultToggleFilter = (value, filters) => {\r\n    const isSelected = matches(\r\n        pickBy(value, val => typeof val !== 'undefined')\r\n    )(filters);\r\n\r\n    if (isSelected) {\r\n        const keysToRemove = Object.keys(value);\r\n        return Object.keys(filters).reduce(\r\n            (acc, key) =>\r\n                keysToRemove.includes(key)\r\n                    ? acc\r\n                    : { ...acc, [key]: filters[key] },\r\n            {}\r\n        );\r\n    }\r\n\r\n    return { ...filters, ...value };\r\n};\r\n\r\nconst PREFIX = 'RaFilterListItem';\r\n\r\nexport const FilterListItemClasses = {\r\n    listItemButton: `${PREFIX}-listItemButton`,\r\n    listItemText: `${PREFIX}-listItemText`,\r\n    listItemIcon: `${PREFIX}-listItemIcon`,\r\n};\r\n\r\nconst StyledListItem = styled(ListItem, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})({\r\n    [`& .${FilterListItemClasses.listItemButton}`]: {\r\n        paddingRight: '2em',\r\n        paddingLeft: '2em',\r\n    },\r\n    [`& .${FilterListItemClasses.listItemText}`]: {\r\n        margin: 0,\r\n    },\r\n    [`& .${FilterListItemClasses.listItemIcon}`]: {\r\n        minWidth: 0,\r\n        marginRight: '0.5em',\r\n    },\r\n});\r\n\r\nexport interface FilterListItemProps extends Omit<ListItemProps, 'value'> {\r\n    label: string | ReactElement;\r\n    value: any;\r\n    icon?: ReactElement;\r\n    toggleFilter?: (value: any, filters: any) => any;\r\n    isSelected?: (value: any, filters: any) => boolean;\r\n}\r\n", "import * as React from 'react';\r\nimport { ChangeEvent, memo, useMemo } from 'react';\r\nimport { InputAdornment } from '@mui/material';\r\nimport { SxProps } from '@mui/system';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { useTranslate, useListFilterContext } from 'ra-core';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\n\r\nimport { TextInput, TextInputProps } from '../../input';\r\n\r\n/**\r\n * Form and search input for doing a full-text search filter.\r\n *\r\n * Triggers a search on change (with debounce).\r\n *\r\n * @example\r\n *\r\n * const FilterPanel = () => (\r\n *     <Card>\r\n *         <CardContent>\r\n *             <FilterLiveSearch source=\"title\" />\r\n *         </CardContent>\r\n *     </Card>\r\n * );\r\n */\r\nexport const FilterLiveSearch = memo((props: FilterLiveSearchProps) => {\r\n    const { filterValues, setFilters } = useListFilterContext();\r\n    const translate = useTranslate();\r\n\r\n    const {\r\n        source = 'q',\r\n        variant,\r\n        label = translate('ra.action.search'),\r\n        ...rest\r\n    } = props;\r\n\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target) {\r\n            setFilters({ ...filterValues, [source]: event.target.value }, null);\r\n        } else {\r\n            const { [source]: _, ...filters } = filterValues;\r\n            setFilters(filters, null, false);\r\n        }\r\n    };\r\n\r\n    const initialValues = useMemo(\r\n        () => ({\r\n            [source]: filterValues[source],\r\n        }),\r\n        [filterValues, source]\r\n    );\r\n\r\n    const form = useForm({ defaultValues: initialValues });\r\n\r\n    const onSubmit = () => undefined;\r\n    return (\r\n        <FormProvider {...form}>\r\n            <form onSubmit={onSubmit}>\r\n                <TextInput\r\n                    resettable\r\n                    helperText={false}\r\n                    source={source}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <SearchIcon color=\"disabled\" />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                    onChange={handleChange}\r\n                    size=\"small\"\r\n                    {...(variant === 'outlined'\r\n                        ? { variant: 'outlined', label }\r\n                        : {\r\n                              placeholder: label,\r\n                              label: false,\r\n                              hiddenLabel: true,\r\n                          })}\r\n                    {...rest}\r\n                />\r\n            </form>\r\n        </FormProvider>\r\n    );\r\n});\r\n\r\nexport interface FilterLiveSearchProps extends Omit<TextInputProps, 'source'> {\r\n    source?: string;\r\n    sx?: SxProps;\r\n    label?: string;\r\n    fullWidth?: boolean;\r\n    variant?: 'filled' | 'outlined';\r\n}\r\n", "import * as React from 'react';\r\nimport { ReactElement, useState } from 'react';\r\nimport { IconButton, IconButtonProps } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/AddCircleOutline';\r\nimport { useTranslate } from 'ra-core';\r\n\r\nimport { AddSavedQueryDialog } from './AddSavedQueryDialog';\r\n\r\nexport const AddSavedQueryIconButton = (\r\n    props: IconButtonProps\r\n): ReactElement => {\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = (): void => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = (): void => {\r\n        setOpen(false);\r\n    };\r\n    const translate = useTranslate();\r\n\r\n    return (\r\n        <>\r\n            <IconButton\r\n                aria-label={translate('ra.saved_queries.new_label', {\r\n                    _: 'Save current query...',\r\n                })}\r\n                size=\"small\"\r\n                onClick={handleOpen}\r\n                {...props}\r\n            >\r\n                <AddIcon />\r\n            </IconButton>\r\n\r\n            <AddSavedQueryDialog open={open} onClose={handleClose} />\r\n        </>\r\n    );\r\n};\r\n", "import * as React from 'react';\r\nimport { ReactElement, useState } from 'react';\r\nimport { IconButton, IconButtonProps } from '@mui/material';\r\nimport RemoveIcon from '@mui/icons-material/RemoveCircleOutline';\r\nimport { useTranslate } from 'ra-core';\r\n\r\nimport { RemoveSavedQueryDialog } from './RemoveSavedQueryDialog';\r\n\r\nexport const RemoveSavedQueryIconButton = (\r\n    props: IconButtonProps\r\n): ReactElement => {\r\n    const [confirmationOpen, setConfirmationOpen] = useState(false);\r\n    const handleConfirmationClose = (): void => {\r\n        setConfirmationOpen(false);\r\n    };\r\n\r\n    const handleRemoveQueryClick = (): void => {\r\n        setConfirmationOpen(true);\r\n    };\r\n    const translate = useTranslate();\r\n\r\n    return (\r\n        <>\r\n            <IconButton\r\n                aria-label={translate('ra.saved_queries.remove_label', {\r\n                    _: 'Remove saved query',\r\n                })}\r\n                size=\"small\"\r\n                onClick={handleRemoveQueryClick}\r\n                {...props}\r\n            >\r\n                <RemoveIcon />\r\n            </IconButton>\r\n\r\n            <RemoveSavedQueryDialog\r\n                open={confirmationOpen}\r\n                onClose={handleConfirmationClose}\r\n            />\r\n        </>\r\n    );\r\n};\r\n", "import * as React from 'react';\r\nimport { ReactNode } from 'react';\r\nimport { styled, Tooltip } from '@mui/material';\r\nimport BookmarkIcon from '@mui/icons-material/BookmarkBorder';\r\nimport HelpIcon from '@mui/icons-material/HelpOutline';\r\nimport { useListContext, useTranslate } from 'ra-core';\r\nimport isEqual from 'lodash/isEqual';\r\n\r\nimport { extractValidSavedQueries, useSavedQueries } from './useSavedQueries';\r\nimport { RemoveSavedQueryIconButton } from './RemoveSavedQueryIconButton';\r\nimport { AddSavedQueryIconButton } from './AddSavedQueryIconButton';\r\nimport { SavedQueryFilterListItem } from './SavedQueryFilterListItem';\r\nimport { FilterList } from './FilterList';\r\n\r\n/**\r\n * FilterList-like component allowing to save and restore a query (filters, sort, perPage).\r\n *\r\n * Use this component in a Filter sidebar to let users store custom queries\r\n * that they can reuse later. The saved queries will appear as FilterListItems,\r\n * and can be removed.\r\n *\r\n * This component uses useStore under the hood to store saved queries in\r\n * localStorage, one set of saved queries per resource.\r\n *\r\n * @example\r\n *\r\n * import { FilterList, FilterListItem, List, Datagrid, SavedQueriesList } from 'react-admin';\r\n * import { Card, CardContent } from '@mui/material';\r\n *\r\n * const PostFilterSidebar = () => (\r\n *     <Card>\r\n *         <CardContent>\r\n *             <SavedQueriesList />\r\n *             <FilterList label=\"Category\" icon={<CategoryIcon />}>\r\n *                 ...\r\n *             </FilterList>\r\n *             <FilterList label=\"Published\" icon={<DateRangeIcon />}>\r\n *                ...\r\n *             </FilterList>\r\n *             <FilterList label=\"Popularity\" icon={<DateRangeIcon />}>\r\n *                ...\r\n *             </FilterList>\r\n *         </CardContent>\r\n *     </Card>\r\n * );\r\n *\r\n * const PostList = () => (\r\n *     <List aside={<PostFilterSidebar />}>\r\n *         <Datagrid>\r\n *             ...\r\n *         </Datagrid>\r\n *     </List>\r\n * );\r\n *\r\n */\r\nexport const SavedQueriesList = ({\r\n    icon = defaultIcon,\r\n}: SavedQueriesListProps) => {\r\n    const translate = useTranslate();\r\n    const {\r\n        resource,\r\n        filterValues,\r\n        displayedFilters,\r\n        sort,\r\n        perPage,\r\n    } = useListContext();\r\n\r\n    const [savedQueries] = useSavedQueries(resource);\r\n    const validSavedQueries = extractValidSavedQueries(savedQueries);\r\n    const hasSavedCurrentFilterValue = validSavedQueries.some(savedQuery =>\r\n        isEqual(savedQuery.value, {\r\n            filter: filterValues,\r\n            sort,\r\n            perPage,\r\n            displayedFilters,\r\n        })\r\n    );\r\n    const hasFilterValues = !isEqual(filterValues, {});\r\n\r\n    return (\r\n        <Root label=\"ra.saved_queries.label\" icon={icon}>\r\n            {hasSavedCurrentFilterValue ? (\r\n                <RemoveSavedQueryIconButton\r\n                    className={SavedQueriesListClasses.floatingIcon}\r\n                />\r\n            ) : hasFilterValues ? (\r\n                <AddSavedQueryIconButton\r\n                    className={SavedQueriesListClasses.floatingIcon}\r\n                />\r\n            ) : (\r\n                <Tooltip\r\n                    title={translate('ra.saved_queries.help')}\r\n                    className={SavedQueriesListClasses.floatingTooltip}\r\n                >\r\n                    <HelpIcon />\r\n                </Tooltip>\r\n            )}\r\n            {validSavedQueries.map((savedQuery, index) => (\r\n                <SavedQueryFilterListItem\r\n                    label={savedQuery.label}\r\n                    value={savedQuery.value}\r\n                    key={index}\r\n                />\r\n            ))}\r\n        </Root>\r\n    );\r\n};\r\n\r\nconst PREFIX = 'RaSavedQueriesList';\r\n\r\nexport const SavedQueriesListClasses = {\r\n    floatingIcon: `${PREFIX}-floatingIcon`,\r\n    floatingTooltip: `${PREFIX}-floatingTooltip`,\r\n    titleContainer: `${PREFIX}-titleContainer`,\r\n    titleIcon: `${PREFIX}-titleIcon`,\r\n};\r\n\r\nconst Root = styled(FilterList, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    [`& .${SavedQueriesListClasses.floatingIcon}`]: {\r\n        position: 'absolute',\r\n        top: '-1.8em',\r\n        right: 0,\r\n    },\r\n    [`& .${SavedQueriesListClasses.floatingTooltip}`]: {\r\n        position: 'absolute',\r\n        top: '-1.2em',\r\n        right: 3,\r\n        color: theme.palette.action.disabled,\r\n    },\r\n}));\r\n\r\nconst defaultIcon = <BookmarkIcon />;\r\n\r\nexport interface SavedQueriesListProps {\r\n    icon?: ReactNode;\r\n}\r\n", "import * as React from 'react';\r\nimport { ReactElement, memo } from 'react';\r\nimport {\r\n    IconButton,\r\n    ListItem,\r\n    ListItemButton,\r\n    ListItemProps,\r\n    ListItemText,\r\n    ListItemSecondaryAction,\r\n    styled,\r\n} from '@mui/material';\r\nimport CancelIcon from '@mui/icons-material/CancelOutlined';\r\nimport isEqual from 'lodash/isEqual';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { stringify } from 'query-string';\r\nimport { useListContext } from 'ra-core';\r\n\r\nimport { SavedQuery } from './useSavedQueries';\r\n\r\nconst arePropsEqual = (\r\n    prevProps: SavedQueryFilterListItemProps,\r\n    nextProps: SavedQueryFilterListItemProps\r\n): boolean =>\r\n    prevProps.label === nextProps.label &&\r\n    isEqual(prevProps.value, nextProps.value);\r\n\r\nexport const SavedQueryFilterListItem = memo(\r\n    (props: SavedQueryFilterListItemProps): ReactElement => {\r\n        const { className, label, sx, value } = props;\r\n        const {\r\n            filterValues,\r\n            sort,\r\n            perPage,\r\n            displayedFilters,\r\n        } = useListContext();\r\n        const navigate = useNavigate();\r\n\r\n        const isSelected = isEqual(value, {\r\n            filter: filterValues,\r\n            sort,\r\n            perPage,\r\n            displayedFilters,\r\n        });\r\n\r\n        const addFilter = (): void => {\r\n            navigate({\r\n                search: stringify({\r\n                    filter: JSON.stringify(value.filter),\r\n                    sort: value.sort.field,\r\n                    order: value.sort.order,\r\n                    page: 1,\r\n                    perPage: value.perPage,\r\n                    displayedFilters: JSON.stringify(value.displayedFilters),\r\n                }),\r\n            });\r\n        };\r\n\r\n        const removeFilter = (): void => {\r\n            navigate({\r\n                search: stringify({\r\n                    filter: JSON.stringify({}),\r\n                }),\r\n            });\r\n        };\r\n\r\n        const toggleFilter = (): void =>\r\n            isSelected ? removeFilter() : addFilter();\r\n\r\n        return (\r\n            // @ts-ignore\r\n            <StyledListItem\r\n                onClick={toggleFilter}\r\n                selected={isSelected}\r\n                className={className}\r\n                sx={sx}\r\n                disablePadding\r\n            >\r\n                <ListItemButton\r\n                    disableGutters\r\n                    className={SavedQueryFilterListItemClasses.listItemButton}\r\n                >\r\n                    <ListItemText\r\n                        primary={label}\r\n                        className={SavedQueryFilterListItemClasses.listItemText}\r\n                    />\r\n                    {isSelected && (\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton size=\"small\" onClick={toggleFilter}>\r\n                                <CancelIcon />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    )}\r\n                </ListItemButton>\r\n            </StyledListItem>\r\n        );\r\n    },\r\n    arePropsEqual\r\n);\r\n\r\nconst PREFIX = 'RaSavedQueryFilterListItem';\r\nexport const SavedQueryFilterListItemClasses = {\r\n    listItemButton: `${PREFIX}-listItemButton`,\r\n    listItemText: `${PREFIX}-listItemText`,\r\n};\r\n\r\nconst StyledListItem = styled(ListItem, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(() => ({\r\n    [`& .${SavedQueryFilterListItemClasses.listItemButton}`]: {\r\n        paddingRight: '2em',\r\n        paddingLeft: '2em',\r\n    },\r\n    [`& .${SavedQueryFilterListItemClasses.listItemText}`]: {\r\n        margin: 0,\r\n    },\r\n}));\r\n\r\nexport interface SavedQueryFilterListItemProps\r\n    extends SavedQuery,\r\n        Omit<ListItemProps, 'value'> {}\r\n", "import * as React from 'react';\r\nimport { useEffect, useRef } from 'react';\r\nimport {\r\n    useInfinitePaginationContext,\r\n    useListContext,\r\n    useEvent,\r\n} from 'ra-core';\r\nimport { Box, CircularProgress, SxProps } from '@mui/material';\r\n\r\n/**\r\n * A pagination component that loads more results when the user scrolls to the bottom of the list.\r\n *\r\n * Used as the default pagination component in the <InfiniteList> component.\r\n *\r\n * @example\r\n * import { InfiniteList, InfinitePagination, Datagrid, TextField } from 'react-admin';\r\n *\r\n * const PostList = () => (\r\n *    <InfiniteList pagination={<InfinitePagination sx={{ py: 5 }} />}>\r\n *       <Datagrid>\r\n *          <TextField source=\"id\" />\r\n *         <TextField source=\"title\" />\r\n *      </Datagrid>\r\n *   </InfiniteList>\r\n * );\r\n */\r\nexport const InfinitePagination = ({\r\n    options = defaultOptions,\r\n    sx,\r\n}: InfinitePaginationProps) => {\r\n    const { isLoading } = useListContext();\r\n    const {\r\n        fetchNextPage,\r\n        hasNextPage,\r\n        isFetchingNextPage,\r\n    } = useInfinitePaginationContext();\r\n\r\n    if (!fetchNextPage) {\r\n        throw new Error(\r\n            'InfinitePagination must be used inside an InfinitePaginationContext, usually created by <InfiniteList>. You cannot use it as child of a <List> component.'\r\n        );\r\n    }\r\n\r\n    const observerElem = useRef(null);\r\n\r\n    const handleObserver = useEvent<[IntersectionObserverEntry[]], void>(\r\n        entries => {\r\n            const [target] = entries;\r\n            if (target.isIntersecting && hasNextPage && !isFetchingNextPage) {\r\n                fetchNextPage();\r\n            }\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        const element = observerElem.current;\r\n        if (!element) return;\r\n        const observer = new IntersectionObserver(handleObserver, options);\r\n        observer.observe(element);\r\n        return () => observer.unobserve(element);\r\n    }, [\r\n        fetchNextPage,\r\n        hasNextPage,\r\n        handleObserver,\r\n        options,\r\n        isLoading,\r\n        isFetchingNextPage,\r\n    ]);\r\n\r\n    if (isLoading) return null;\r\n\r\n    return (\r\n        <Box ref={observerElem} py={2} textAlign=\"center\" sx={sx}>\r\n            {isFetchingNextPage && hasNextPage && (\r\n                <CircularProgress size=\"1.5em\" />\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst defaultOptions = { threshold: 0 };\r\n\r\nexport interface InfinitePaginationProps {\r\n    options?: IntersectionObserverInit;\r\n    sx?: SxProps;\r\n}\r\n", "import * as React from 'react';\r\nimport { useCallback, useMemo, FC, memo, ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    TablePagination,\r\n    TablePaginationBaseProps,\r\n    Toolbar,\r\n    useMediaQuery,\r\n    Theme,\r\n} from '@mui/material';\r\nimport {\r\n    useTranslate,\r\n    useListPaginationContext,\r\n    sanitizeListRestProps,\r\n    ComponentPropType,\r\n    ListPaginationContextValue,\r\n} from 'ra-core';\r\n\r\nimport { PaginationActions } from './PaginationActions';\r\n\r\nexport const Pagination: FC<PaginationProps> = memo(props => {\r\n    const {\r\n        rowsPerPageOptions = DefaultRowsPerPageOptions,\r\n        actions,\r\n        limit = null,\r\n        ...rest\r\n    } = props;\r\n    const {\r\n        isLoading,\r\n        hasNextPage,\r\n        page,\r\n        perPage,\r\n        total,\r\n        setPage,\r\n        setPerPage,\r\n    } = useListPaginationContext(props);\r\n    const translate = useTranslate();\r\n    const isSmall = useMediaQuery((theme: Theme) =>\r\n        theme.breakpoints.down('md')\r\n    );\r\n\r\n    const totalPages = useMemo(() => {\r\n        return total != null ? Math.ceil(total / perPage) : undefined;\r\n    }, [perPage, total]);\r\n\r\n    /**\r\n     * Warning: Material UI's page is 0-based\r\n     */\r\n    const handlePageChange = useCallback(\r\n        (event, page) => {\r\n            event && event.stopPropagation();\r\n            if (page < 0 || page > totalPages - 1) {\r\n                throw new Error(\r\n                    translate('ra.navigation.page_out_of_boundaries', {\r\n                        page: page + 1,\r\n                    })\r\n                );\r\n            }\r\n            setPage(page + 1);\r\n        },\r\n        [totalPages, setPage, translate]\r\n    );\r\n\r\n    const handlePerPageChange = useCallback(\r\n        event => {\r\n            setPerPage(event.target.value);\r\n        },\r\n        [setPerPage]\r\n    );\r\n\r\n    const labelDisplayedRows = useCallback(\r\n        ({ from, to, count }) =>\r\n            count === -1 && hasNextPage\r\n                ? translate('ra.navigation.partial_page_range_info', {\r\n                      offsetBegin: from,\r\n                      offsetEnd: to,\r\n                      _: `%{from}-%{to} of more than %{to}`,\r\n                  })\r\n                : translate('ra.navigation.page_range_info', {\r\n                      offsetBegin: from,\r\n                      offsetEnd: to,\r\n                      total: count === -1 ? to : count,\r\n                      _: `%{from}-%{to} of %{count === -1 ? to : count}`,\r\n                  }),\r\n        [translate, hasNextPage]\r\n    );\r\n\r\n    const labelItem = useCallback(\r\n        type => translate(`ra.navigation.${type}`, { _: `Go to ${type} page` }),\r\n        [translate]\r\n    );\r\n\r\n    if (isLoading) {\r\n        return <Toolbar variant=\"dense\" />;\r\n    }\r\n\r\n    // Avoid rendering TablePagination if \"page\" value is invalid\r\n    if (total === 0 || page < 1 || (total != null && page > totalPages)) {\r\n        if (limit != null && process.env.NODE_ENV === 'development') {\r\n            console.warn(\r\n                'The Pagination limit prop is deprecated. Empty state should be handled by the component displaying data (Datagrid, SimpleList).'\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    if (isSmall) {\r\n        return (\r\n            <TablePagination\r\n                count={total == null ? -1 : total}\r\n                rowsPerPage={perPage}\r\n                page={page - 1}\r\n                onPageChange={handlePageChange}\r\n                rowsPerPageOptions={emptyArray}\r\n                component=\"span\"\r\n                labelDisplayedRows={labelDisplayedRows}\r\n                {...sanitizeListRestProps(rest)}\r\n            />\r\n        );\r\n    }\r\n\r\n    const ActionsComponent = actions\r\n        ? actions // overridden by caller\r\n        : !isLoading && total != null\r\n        ? PaginationActions // regular navigation\r\n        : undefined; // partial navigation (uses default TablePaginationActions)\r\n\r\n    return (\r\n        <TablePagination\r\n            count={total == null ? -1 : total}\r\n            rowsPerPage={perPage}\r\n            page={page - 1}\r\n            onPageChange={handlePageChange}\r\n            onRowsPerPageChange={handlePerPageChange}\r\n            // @ts-ignore\r\n            ActionsComponent={ActionsComponent}\r\n            nextIconButtonProps={{\r\n                disabled: !hasNextPage,\r\n            }}\r\n            component=\"span\"\r\n            labelRowsPerPage={translate('ra.navigation.page_rows_per_page')}\r\n            labelDisplayedRows={labelDisplayedRows}\r\n            getItemAriaLabel={labelItem}\r\n            rowsPerPageOptions={rowsPerPageOptions}\r\n            {...sanitizeListRestProps(rest)}\r\n        />\r\n    );\r\n});\r\n\r\nPagination.propTypes = {\r\n    actions: ComponentPropType,\r\n    limit: PropTypes.element,\r\n    rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\r\n};\r\n\r\nconst DefaultRowsPerPageOptions = [5, 10, 25, 50];\r\nconst emptyArray = [];\r\n\r\nexport interface PaginationProps\r\n    extends TablePaginationBaseProps,\r\n        Partial<ListPaginationContextValue> {\r\n    rowsPerPageOptions?: number[];\r\n    actions?: FC;\r\n    limit?: ReactElement;\r\n}\r\n", "import * as React from 'react';\r\nimport { memo, FC } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Pagination, PaginationProps } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslate } from 'ra-core';\r\n\r\nexport const PaginationActions: FC<PaginationActionsProps> = memo(props => {\r\n    const {\r\n        page,\r\n        rowsPerPage,\r\n        count,\r\n        onPageChange,\r\n        size = 'small',\r\n        className,\r\n        ...rest\r\n    } = props;\r\n    const translate = useTranslate();\r\n\r\n    const nbPages = Math.ceil(count / rowsPerPage) || 1;\r\n\r\n    if (nbPages === 1) {\r\n        return <Root className={className} />;\r\n    }\r\n\r\n    const getItemAriaLabel = (\r\n        type: 'page' | 'first' | 'last' | 'next' | 'previous',\r\n        page: number,\r\n        selected: boolean\r\n    ) => {\r\n        if (type === 'page') {\r\n            return selected\r\n                ? translate('ra.navigation.current_page', {\r\n                      page,\r\n                      _: `page ${page}`,\r\n                  })\r\n                : translate('ra.navigation.page', {\r\n                      page,\r\n                      _: `Go to page ${page}`,\r\n                  });\r\n        }\r\n        return translate(`ra.navigation.${type}`, { _: `Go to ${type} page` });\r\n    };\r\n\r\n    return (\r\n        <Root className={className}>\r\n            <Pagination\r\n                size={size}\r\n                count={nbPages}\r\n                // <TablePagination>, the parent, uses 0-based pagination\r\n                // while <Pagination> uses 1-based pagination\r\n                page={page + 1}\r\n                onChange={(e: any, page) => onPageChange(e, page - 1)}\r\n                {...sanitizeRestProps(rest)}\r\n                getItemAriaLabel={getItemAriaLabel}\r\n            />\r\n        </Root>\r\n    );\r\n});\r\n\r\nexport interface PaginationActionsProps extends PaginationProps {\r\n    page: number;\r\n    rowsPerPage: number;\r\n    count: number;\r\n    onPageChange: (event: MouseEvent, page: number) => void;\r\n}\r\n/**\r\n * PaginationActions propTypes are copied over from Material UI’s\r\n * TablePaginationActions propTypes. See\r\n * https://github.com/mui/material-ui/blob/869692ecf3812bc4577ed4dde81a9911c5949695/packages/material-ui/src/TablePaginationActions/TablePaginationActions.js#L53-L85\r\n * for reference.\r\n */\r\nPaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n    color: PropTypes.oneOf(['primary', 'secondary', 'standard']),\r\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\r\n};\r\n\r\nconst PREFIX = 'RaPaginationActions';\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(() => ({\r\n    flexShrink: 0,\r\n    ml: 4,\r\n}));\r\n\r\nconst sanitizeRestProps = ({\r\n    nextIconButtonProps,\r\n    backIconButtonProps,\r\n    ...rest\r\n}: any) => rest;\r\n", "import * as React from 'react';\r\nimport { memo } from 'react';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useTranslate } from 'ra-core';\r\n\r\n/**\r\n * @deprecated Empty state should be handled by the component displaying data (Datagrid, SimpleList).\r\n */\r\nexport const PaginationLimit = memo(() => {\r\n    const translate = useTranslate();\r\n    return (\r\n        <CardContent>\r\n            <Typography variant=\"body2\">\r\n                {translate('ra.navigation.no_results')}\r\n            </Typography>\r\n        </CardContent>\r\n    );\r\n});\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\r\nimport { useInput, FieldTitle } from 'ra-core';\r\n\r\nimport { CommonInputProps } from './CommonInputProps';\r\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\r\nimport { InputHelperText } from './InputHelperText';\r\n\r\n/**\r\n * Form input to edit a Date string value in the \"YYYY-MM-DD\" format (e.g. '2021-06-23').\r\n *\r\n * Renders a date picker (the exact UI depends on the browser).\r\n *\r\n * @example\r\n * import { Edit, SimpleForm, DateInput } from 'react-admin';\r\n *\r\n * const PostEdit = (props) => (\r\n *     <Edit {...props}>\r\n *         <SimpleForm>\r\n *             <DateInput source=\"published_at\" />\r\n *         </SimpleForm>\r\n *     </Edit>\r\n * );\r\n *\r\n * @example\r\n * // If the initial value is a Date object, DateInput converts it to a string\r\n * // but you must pass a custom parse method to convert the form value\r\n * // (which is always a date string) back to a Date object.\r\n * <DateInput source=\"published_at\" parse={val => new Date(val)} />\r\n */\r\nexport const DateInput = ({\r\n    className,\r\n    defaultValue,\r\n    format = getStringFromDate,\r\n    label,\r\n    name,\r\n    source,\r\n    resource,\r\n    helperText,\r\n    margin,\r\n    onBlur,\r\n    onChange,\r\n    parse,\r\n    validate,\r\n    variant,\r\n    ...rest\r\n}: DateInputProps) => {\r\n    const { field, fieldState, formState, id, isRequired } = useInput({\r\n        defaultValue,\r\n        name,\r\n        format,\r\n        parse,\r\n        onBlur,\r\n        onChange,\r\n        resource,\r\n        source,\r\n        validate,\r\n        ...rest,\r\n    });\r\n\r\n    const { error, invalid, isTouched } = fieldState;\r\n    const { isSubmitted } = formState;\r\n    const renderHelperText =\r\n        helperText !== false || ((isTouched || isSubmitted) && invalid);\r\n\r\n    return (\r\n        <TextField\r\n            id={id}\r\n            {...field}\r\n            className={clsx('ra-input', `ra-input-${source}`, className)}\r\n            type=\"date\"\r\n            size=\"small\"\r\n            variant={variant}\r\n            margin={margin}\r\n            error={(isTouched || isSubmitted) && invalid}\r\n            helperText={\r\n                renderHelperText ? (\r\n                    <InputHelperText\r\n                        touched={isTouched || isSubmitted}\r\n                        error={error?.message}\r\n                        helperText={helperText}\r\n                    />\r\n                ) : null\r\n            }\r\n            label={\r\n                <FieldTitle\r\n                    label={label}\r\n                    source={source}\r\n                    resource={resource}\r\n                    isRequired={isRequired}\r\n                />\r\n            }\r\n            InputLabelProps={defaultInputLabelProps}\r\n            {...sanitizeInputRestProps(rest)}\r\n        />\r\n    );\r\n};\r\n\r\nDateInput.propTypes = {\r\n    label: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.element,\r\n    ]),\r\n    resource: PropTypes.string,\r\n    source: PropTypes.string,\r\n};\r\n\r\nexport type DateInputProps = CommonInputProps &\r\n    Omit<TextFieldProps, 'helperText' | 'label'>;\r\n\r\n/**\r\n * Convert Date object to String\r\n *\r\n * @param {Date} value value to convert\r\n * @returns {String} A standardized date (yyyy-MM-dd), to be passed to an <input type=\"date\" />\r\n */\r\nconst convertDateToString = (value: Date) => {\r\n    if (!(value instanceof Date) || isNaN(value.getDate())) return '';\r\n    const pad = '00';\r\n    const yyyy = value.getFullYear().toString();\r\n    const MM = (value.getMonth() + 1).toString();\r\n    const dd = value.getDate().toString();\r\n    return `${yyyy}-${(pad + MM).slice(-2)}-${(pad + dd).slice(-2)}`;\r\n};\r\n\r\nconst dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/;\r\nconst defaultInputLabelProps = { shrink: true };\r\n\r\nconst getStringFromDate = (value: string | Date) => {\r\n    // null, undefined and empty string values should not go through dateFormatter\r\n    // otherwise, it returns undefined and will make the input an uncontrolled one.\r\n    if (value == null || value === '') {\r\n        return '';\r\n    }\r\n\r\n    if (value instanceof Date) {\r\n        return convertDateToString(value);\r\n    }\r\n\r\n    // valid dates should not be converted\r\n    if (dateRegex.test(value)) {\r\n        return value;\r\n    }\r\n\r\n    return convertDateToString(new Date(value));\r\n};\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\r\nimport { useInput, FieldTitle } from 'ra-core';\r\n\r\nimport { CommonInputProps } from './CommonInputProps';\r\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\r\nimport { InputHelperText } from './InputHelperText';\r\n\r\n/**\r\n * Converts a datetime string without timezone to a date object\r\n * with timezone, using the browser timezone.\r\n *\r\n * @param {string} value Date string, formatted as yyyy-MM-ddThh:mm\r\n * @return {Date}\r\n */\r\nconst parseDateTime = (value: string) =>\r\n    value ? new Date(value) : value === '' ? null : value;\r\n\r\n/**\r\n * Input component for entering a date and a time with timezone, using the browser locale\r\n */\r\nexport const DateTimeInput = ({\r\n    className,\r\n    defaultValue,\r\n    format = formatDateTime,\r\n    label,\r\n    helperText,\r\n    margin,\r\n    onBlur,\r\n    onChange,\r\n    source,\r\n    resource,\r\n    parse = parseDateTime,\r\n    validate,\r\n    variant,\r\n    ...rest\r\n}: DateTimeInputProps) => {\r\n    const { field, fieldState, formState, id, isRequired } = useInput({\r\n        defaultValue,\r\n        format,\r\n        parse,\r\n        onBlur,\r\n        onChange,\r\n        resource,\r\n        source,\r\n        validate,\r\n        ...rest,\r\n    });\r\n\r\n    const { error, invalid, isTouched } = fieldState;\r\n    const { isSubmitted } = formState;\r\n    const renderHelperText =\r\n        helperText !== false || ((isTouched || isSubmitted) && invalid);\r\n    return (\r\n        <TextField\r\n            id={id}\r\n            {...field}\r\n            className={clsx('ra-input', `ra-input-${source}`, className)}\r\n            type=\"datetime-local\"\r\n            size=\"small\"\r\n            variant={variant}\r\n            margin={margin}\r\n            error={(isTouched || isSubmitted) && invalid}\r\n            helperText={\r\n                renderHelperText ? (\r\n                    <InputHelperText\r\n                        touched={isTouched || isSubmitted}\r\n                        error={error?.message}\r\n                        helperText={helperText}\r\n                    />\r\n                ) : null\r\n            }\r\n            label={\r\n                <FieldTitle\r\n                    label={label}\r\n                    source={source}\r\n                    resource={resource}\r\n                    isRequired={isRequired}\r\n                />\r\n            }\r\n            InputLabelProps={defaultInputLabelProps}\r\n            {...sanitizeInputRestProps(rest)}\r\n        />\r\n    );\r\n};\r\n\r\nDateTimeInput.propTypes = {\r\n    label: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.element,\r\n    ]),\r\n    resource: PropTypes.string,\r\n    source: PropTypes.string,\r\n};\r\n\r\nexport type DateTimeInputProps = CommonInputProps &\r\n    Omit<TextFieldProps, 'helperText' | 'label'>;\r\n\r\nconst leftPad = (nb = 2) => value => ('0'.repeat(nb) + value).slice(-nb);\r\nconst leftPad4 = leftPad(4);\r\nconst leftPad2 = leftPad(2);\r\n\r\n/**\r\n * @param {Date} value value to convert\r\n * @returns {String} A standardized datetime (yyyy-MM-ddThh:mm), to be passed to an <input type=\"datetime-local\" />\r\n */\r\nconst convertDateToString = (value: Date) => {\r\n    if (!(value instanceof Date) || isNaN(value.getDate())) return '';\r\n    const yyyy = leftPad4(value.getFullYear());\r\n    const MM = leftPad2(value.getMonth() + 1);\r\n    const dd = leftPad2(value.getDate());\r\n    const hh = leftPad2(value.getHours());\r\n    const mm = leftPad2(value.getMinutes());\r\n    return `${yyyy}-${MM}-${dd}T${hh}:${mm}`;\r\n};\r\n\r\n// yyyy-MM-ddThh:mm\r\nconst dateTimeRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$/;\r\nconst defaultInputLabelProps = { shrink: true };\r\n\r\n/**\r\n * Converts a date from the dataProvider, with timezone, to a date string\r\n * without timezone for use in an <input type=\"datetime-local\" />.\r\n *\r\n * @param {Date | String} value date string or object\r\n */\r\nconst formatDateTime = (value: string | Date) => {\r\n    // null, undefined and empty string values should not go through convertDateToString\r\n    // otherwise, it returns undefined and will make the input an uncontrolled one.\r\n    if (value == null || value === '') {\r\n        return '';\r\n    }\r\n\r\n    if (value instanceof Date) {\r\n        return convertDateToString(value);\r\n    }\r\n    // valid dates should not be converted\r\n    if (dateTimeRegex.test(value)) {\r\n        return value;\r\n    }\r\n\r\n    return convertDateToString(new Date(value));\r\n};\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\r\nimport { useInput, FieldTitle } from 'ra-core';\r\n\r\nimport { CommonInputProps } from './CommonInputProps';\r\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\r\nimport { InputHelperText } from './InputHelperText';\r\n\r\n/**\r\n * Converts a time string without timezone to a date object\r\n * with timezone, using the browser timezone.\r\n *\r\n * @param {string} value Date string, formatted as hh:mm\r\n * @return {Date}\r\n */\r\nconst parseTime = (value: string) => {\r\n    if (!value) return null;\r\n    const timeTokens = value.split(':').map(v => parseInt(v));\r\n    const today = new Date();\r\n    today.setHours(timeTokens[0] ?? 0);\r\n    today.setMinutes(timeTokens[1] ?? 0);\r\n    return today;\r\n};\r\n\r\n/**\r\n * Form input to edit a time string value in the \"HH:mm\" format (e.g. '17:45'),\r\n * using the browser locale for the timezone.\r\n *\r\n * Renders a time picker or a text input depending on the browser.\r\n *\r\n * This component works with Date objects to handle the timezone using the browser locale.\r\n * You can still pass string values as long as those can be converted to a JavaScript Date object.\r\n *\r\n * @example\r\n * import { Edit, SimpleForm, TimeInput } from 'react-admin';\r\n *\r\n * const PostEdit = (props) => (\r\n *     <Edit {...props}>\r\n *         <SimpleForm>\r\n *             <TimeInput source=\"published_at\" />\r\n *         </SimpleForm>\r\n *     </Edit>\r\n * );\r\n */\r\nexport const TimeInput = ({\r\n    className,\r\n    defaultValue,\r\n    format = formatTime,\r\n    label,\r\n    helperText,\r\n    margin,\r\n    onBlur,\r\n    onChange,\r\n    source,\r\n    resource,\r\n    parse = parseTime,\r\n    validate,\r\n    variant,\r\n    ...rest\r\n}: TimeInputProps) => {\r\n    const { field, fieldState, formState, id, isRequired } = useInput({\r\n        defaultValue,\r\n        format,\r\n        parse,\r\n        onBlur,\r\n        onChange,\r\n        resource,\r\n        source,\r\n        validate,\r\n        ...rest,\r\n    });\r\n\r\n    const { error, invalid, isTouched } = fieldState;\r\n    const { isSubmitted } = formState;\r\n\r\n    const renderHelperText =\r\n        helperText !== false || ((isTouched || isSubmitted) && invalid);\r\n\r\n    return (\r\n        <TextField\r\n            id={id}\r\n            {...field}\r\n            className={clsx('ra-input', `ra-input-${source}`, className)}\r\n            type=\"time\"\r\n            size=\"small\"\r\n            variant={variant}\r\n            margin={margin}\r\n            error={(isTouched || isSubmitted) && invalid}\r\n            helperText={\r\n                renderHelperText ? (\r\n                    <InputHelperText\r\n                        touched={isTouched || isSubmitted}\r\n                        error={error?.message}\r\n                        helperText={helperText}\r\n                    />\r\n                ) : null\r\n            }\r\n            label={\r\n                <FieldTitle\r\n                    label={label}\r\n                    source={source}\r\n                    resource={resource}\r\n                    isRequired={isRequired}\r\n                />\r\n            }\r\n            InputLabelProps={defaultInputLabelProps}\r\n            {...sanitizeInputRestProps(rest)}\r\n        />\r\n    );\r\n};\r\n\r\nTimeInput.propTypes = {\r\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n    resource: PropTypes.string,\r\n    source: PropTypes.string,\r\n};\r\n\r\nexport type TimeInputProps = CommonInputProps &\r\n    Omit<TextFieldProps, 'helperText' | 'label'>;\r\n\r\nconst leftPad = (nb = 2) => value => ('0'.repeat(nb) + value).slice(-nb);\r\nconst leftPad2 = leftPad(2);\r\n\r\n/**\r\n * @param {Date} value value to convert\r\n * @returns {String} A standardized time (hh:mm), to be passed to an <input type=\"time\" />\r\n */\r\nconst convertDateToString = (value: Date) => {\r\n    if (!(value instanceof Date) || isNaN(value.getDate())) return '';\r\n    const hh = leftPad2(value.getHours());\r\n    const mm = leftPad2(value.getMinutes());\r\n    return `${hh}:${mm}`;\r\n};\r\n\r\n// hh:mm\r\nconst timeRegex = /^\\d{2}:\\d{2}$/;\r\nconst defaultInputLabelProps = { shrink: true };\r\n\r\n/**\r\n * Converts a date from the dataProvider, with timezone, to a time string\r\n * without timezone for use in an <input type=\"time\" />.\r\n *\r\n * @param {Date | String} value date string or object\r\n */\r\nconst formatTime = (value: string | Date) => {\r\n    // null, undefined and empty string values should not go through convertDateToString\r\n    // otherwise, it returns undefined and will make the input an uncontrolled one.\r\n    if (value == null || value === '') {\r\n        return '';\r\n    }\r\n\r\n    if (value instanceof Date) {\r\n        return convertDateToString(value);\r\n    }\r\n    // valid dates should not be converted\r\n    if (timeRegex.test(value)) {\r\n        return value;\r\n    }\r\n\r\n    return convertDateToString(new Date(value));\r\n};\r\n", "import React, {\r\n    Children,\r\n    FC,\r\n    isValidElement,\r\n    ReactElement,\r\n    ReactNode,\r\n} from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { useDropzone, DropzoneOptions } from 'react-dropzone';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport {\r\n    useInput,\r\n    useTranslate,\r\n    shallowEqual,\r\n    RecordContextProvider,\r\n} from 'ra-core';\r\n\r\nimport { CommonInputProps } from './CommonInputProps';\r\nimport { Labeled } from '../Labeled';\r\nimport { FileInputPreview } from './FileInputPreview';\r\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\r\nimport { InputHelperText } from './InputHelperText';\r\nimport { SxProps } from '@mui/system';\r\nimport { SvgIconProps } from '@mui/material';\r\n\r\nexport const FileInput = (props: FileInputProps) => {\r\n    const {\r\n        accept,\r\n        children,\r\n        className,\r\n        format,\r\n        helperText,\r\n        inputProps: inputPropsOptions,\r\n        maxSize,\r\n        minSize,\r\n        multiple = false,\r\n        label,\r\n        labelMultiple = 'ra.input.file.upload_several',\r\n        labelSingle = 'ra.input.file.upload_single',\r\n        options = {},\r\n        onRemove: onRemoveProp,\r\n        parse,\r\n        placeholder,\r\n        removeIcon,\r\n        resource,\r\n        source,\r\n        validate,\r\n        validateFileRemoval,\r\n        ...rest\r\n    } = props;\r\n    const { onDrop: onDropProp } = options;\r\n    const translate = useTranslate();\r\n\r\n    // turn a browser dropped file structure into expected structure\r\n    const transformFile = file => {\r\n        if (!(file instanceof File)) {\r\n            return file;\r\n        }\r\n\r\n        const preview = URL.createObjectURL(file);\r\n        const transformedFile = {\r\n            rawFile: file,\r\n            src: preview,\r\n            title: file.name,\r\n        };\r\n\r\n        return transformedFile;\r\n    };\r\n\r\n    const transformFiles = (files: any[]) => {\r\n        if (!files) {\r\n            return multiple ? [] : null;\r\n        }\r\n\r\n        if (Array.isArray(files)) {\r\n            return files.map(transformFile);\r\n        }\r\n\r\n        return transformFile(files);\r\n    };\r\n\r\n    const {\r\n        id,\r\n        field: { onChange, value },\r\n        fieldState,\r\n        formState: { isSubmitted },\r\n        isRequired,\r\n    } = useInput({\r\n        format: format || transformFiles,\r\n        parse: parse || transformFiles,\r\n        source,\r\n        validate,\r\n        ...rest,\r\n    });\r\n    const { isTouched, error, invalid } = fieldState;\r\n    const files = value ? (Array.isArray(value) ? value : [value]) : [];\r\n\r\n    const onDrop = (newFiles, rejectedFiles, event) => {\r\n        const updatedFiles = multiple ? [...files, ...newFiles] : [...newFiles];\r\n\r\n        if (multiple) {\r\n            onChange(updatedFiles);\r\n        } else {\r\n            onChange(updatedFiles[0]);\r\n        }\r\n\r\n        if (onDropProp) {\r\n            onDropProp(newFiles, rejectedFiles, event);\r\n        }\r\n    };\r\n\r\n    const onRemove = file => async () => {\r\n        if (validateFileRemoval) {\r\n            try {\r\n                await validateFileRemoval(file);\r\n            } catch (e) {\r\n                return;\r\n            }\r\n        }\r\n        if (multiple) {\r\n            const filteredFiles = files.filter(\r\n                stateFile => !shallowEqual(stateFile, file)\r\n            );\r\n            onChange(filteredFiles as any);\r\n        } else {\r\n            onChange(null);\r\n        }\r\n\r\n        if (onRemoveProp) {\r\n            onRemoveProp(file);\r\n        }\r\n    };\r\n\r\n    const childrenElement =\r\n        children && isValidElement(Children.only(children))\r\n            ? (Children.only(children) as ReactElement<any>)\r\n            : undefined;\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({\r\n        accept,\r\n        maxSize,\r\n        minSize,\r\n        multiple,\r\n        ...options,\r\n        onDrop,\r\n    });\r\n\r\n    const renderHelperText =\r\n        helperText !== false || ((isTouched || isSubmitted) && invalid);\r\n\r\n    return (\r\n        <StyledLabeled\r\n            htmlFor={id}\r\n            label={label}\r\n            className={clsx('ra-input', `ra-input-${source}`, className)}\r\n            source={source}\r\n            resource={resource}\r\n            isRequired={isRequired}\r\n            color={(isTouched || isSubmitted) && invalid ? 'error' : undefined}\r\n            {...sanitizeInputRestProps(rest)}\r\n        >\r\n            <>\r\n                <div\r\n                    {...getRootProps({\r\n                        className: FileInputClasses.dropZone,\r\n                        'data-testid': 'dropzone',\r\n                    })}\r\n                >\r\n                    <input\r\n                        id={id}\r\n                        name={id}\r\n                        {...getInputProps({\r\n                            ...inputPropsOptions,\r\n                        })}\r\n                    />\r\n                    {placeholder ? (\r\n                        placeholder\r\n                    ) : multiple ? (\r\n                        <p>{translate(labelMultiple)}</p>\r\n                    ) : (\r\n                        <p>{translate(labelSingle)}</p>\r\n                    )}\r\n                </div>\r\n                {renderHelperText ? (\r\n                    <FormHelperText\r\n                        error={(isTouched || isSubmitted) && invalid}\r\n                    >\r\n                        <InputHelperText\r\n                            touched={isTouched || isSubmitted}\r\n                            error={error?.message}\r\n                            helperText={helperText}\r\n                        />\r\n                    </FormHelperText>\r\n                ) : null}\r\n\r\n                {children && (\r\n                    <div className=\"previews\">\r\n                        {files.map((file, index) => (\r\n                            <FileInputPreview\r\n                                key={index}\r\n                                file={file}\r\n                                onRemove={onRemove(file)}\r\n                                className={FileInputClasses.removeButton}\r\n                                removeIcon={removeIcon}\r\n                            >\r\n                                <RecordContextProvider value={file}>\r\n                                    {childrenElement}\r\n                                </RecordContextProvider>\r\n                            </FileInputPreview>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </>\r\n        </StyledLabeled>\r\n    );\r\n};\r\n\r\nFileInput.propTypes = {\r\n    accept: PropTypes.string,\r\n    children: PropTypes.element,\r\n    className: PropTypes.string,\r\n    id: PropTypes.string,\r\n    isRequired: PropTypes.bool,\r\n    label: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.element,\r\n    ]),\r\n    labelMultiple: PropTypes.string,\r\n    labelSingle: PropTypes.string,\r\n    maxSize: PropTypes.number,\r\n    minSize: PropTypes.number,\r\n    multiple: PropTypes.bool,\r\n    validateFileRemoval: PropTypes.func,\r\n    options: PropTypes.object,\r\n    removeIcon: PropTypes.elementType,\r\n    resource: PropTypes.string,\r\n    source: PropTypes.string,\r\n    placeholder: PropTypes.node,\r\n};\r\n\r\nconst PREFIX = 'RaFileInput';\r\n\r\nexport const FileInputClasses = {\r\n    dropZone: `${PREFIX}-dropZone`,\r\n    removeButton: `${PREFIX}-removeButton`,\r\n};\r\n\r\nconst StyledLabeled = styled(Labeled, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    width: '100%',\r\n    [`& .${FileInputClasses.dropZone}`]: {\r\n        background: theme.palette.background.default,\r\n        borderRadius: theme.shape.borderRadius,\r\n        fontFamily: theme.typography.fontFamily,\r\n        cursor: 'pointer',\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.getContrastText(theme.palette.background.default),\r\n    },\r\n    [`& .${FileInputClasses.removeButton}`]: {},\r\n}));\r\n\r\nexport type FileInputProps = CommonInputProps & {\r\n    accept?: DropzoneOptions['accept'];\r\n    className?: string;\r\n    children?: ReactNode;\r\n    labelMultiple?: string;\r\n    labelSingle?: string;\r\n    maxSize?: DropzoneOptions['maxSize'];\r\n    minSize?: DropzoneOptions['minSize'];\r\n    multiple?: DropzoneOptions['multiple'];\r\n    options?: DropzoneOptions;\r\n    onRemove?: Function;\r\n    placeholder?: ReactNode;\r\n    removeIcon?: FC<SvgIconProps>;\r\n    inputProps?: any;\r\n    validateFileRemoval?(file): boolean | Promise<boolean>;\r\n    sx?: SxProps;\r\n};\r\n", "var _excluded = [\"children\"],\r\n    _excluded2 = [\"open\"],\r\n    _excluded3 = [\"refKey\", \"role\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onClick\", \"onDragEnter\", \"onDragOver\", \"onDragLeave\", \"onDrop\"],\r\n    _excluded4 = [\"refKey\", \"onChange\", \"onClick\"];\r\n\r\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\r\n\r\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\r\n\r\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\r\n\r\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\r\n\r\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\r\n\r\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\r\n\r\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\r\n\r\n/* eslint prefer-template: 0 */\r\nimport React, { forwardRef, Fragment, useCallback, useEffect, useImperativeHandle, useMemo, useReducer, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { fromEvent } from \"file-selector\";\r\nimport { allFilesAccepted, composeEventHandlers, fileAccepted, fileMatchSize, filePickerOptionsTypes, canUseFileSystemAccessAPI, isAbort, isEvtWithFiles, isIeOrEdge, isPropagationStopped, isSecurityError, onDocumentDragOver, TOO_MANY_FILES_REJECTION } from \"./utils/index\";\r\n/**\r\n * Convenience wrapper component for the `useDropzone` hook\r\n *\r\n * ```jsx\r\n * <Dropzone>\r\n *   {({getRootProps, getInputProps}) => (\r\n *     <div {...getRootProps()}>\r\n *       <input {...getInputProps()} />\r\n *       <p>Drag 'n' drop some files here, or click to select files</p>\r\n *     </div>\r\n *   )}\r\n * </Dropzone>\r\n * ```\r\n */\r\n\r\nvar Dropzone = /*#__PURE__*/forwardRef(function (_ref, ref) {\r\n  var children = _ref.children,\r\n      params = _objectWithoutProperties(_ref, _excluded);\r\n\r\n  var _useDropzone = useDropzone(params),\r\n      open = _useDropzone.open,\r\n      props = _objectWithoutProperties(_useDropzone, _excluded2);\r\n\r\n  useImperativeHandle(ref, function () {\r\n    return {\r\n      open: open\r\n    };\r\n  }, [open]); // TODO: Figure out why react-styleguidist cannot create docs if we don't return a jsx element\r\n\r\n  return /*#__PURE__*/React.createElement(Fragment, null, children(_objectSpread(_objectSpread({}, props), {}, {\r\n    open: open\r\n  })));\r\n});\r\nDropzone.displayName = \"Dropzone\"; // Add default props for react-docgen\r\n\r\nvar defaultProps = {\r\n  disabled: false,\r\n  getFilesFromEvent: fromEvent,\r\n  maxSize: Infinity,\r\n  minSize: 0,\r\n  multiple: true,\r\n  maxFiles: 0,\r\n  preventDropOnDocument: true,\r\n  noClick: false,\r\n  noKeyboard: false,\r\n  noDrag: false,\r\n  noDragEventsBubbling: false,\r\n  validator: null,\r\n  useFsAccessApi: true\r\n};\r\nDropzone.defaultProps = defaultProps;\r\nDropzone.propTypes = {\r\n  /**\r\n   * Render function that exposes the dropzone state and prop getter fns\r\n   *\r\n   * @param {object} params\r\n   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render\r\n   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render\r\n   * @param {Function} params.open Open the native file selection dialog\r\n   * @param {boolean} params.isFocused Dropzone area is in focus\r\n   * @param {boolean} params.isFileDialogActive File dialog is opened\r\n   * @param {boolean} params.isDragActive Active drag is in progress\r\n   * @param {boolean} params.isDragAccept Dragged files are accepted\r\n   * @param {boolean} params.isDragReject Some dragged files are rejected\r\n   * @param {File[]} params.draggedFiles Files in active drag\r\n   * @param {File[]} params.acceptedFiles Accepted files\r\n   * @param {FileRejection[]} params.fileRejections Rejected files and why they were rejected\r\n   */\r\n  children: PropTypes.func,\r\n\r\n  /**\r\n   * Set accepted file types.\r\n   * See https://github.com/okonet/attr-accept for more information.\r\n   * Keep in mind that mime type determination is not reliable across platforms. CSV files,\r\n   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under\r\n   * Windows. In some cases there might not be a mime type set at all.\r\n   * See: https://github.com/react-dropzone/react-dropzone/issues/276\r\n   */\r\n  accept: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\r\n\r\n  /**\r\n   * Allow drag 'n' drop (or selection from the file dialog) of multiple files\r\n   */\r\n  multiple: PropTypes.bool,\r\n\r\n  /**\r\n   * If false, allow dropped items to take over the current browser window\r\n   */\r\n  preventDropOnDocument: PropTypes.bool,\r\n\r\n  /**\r\n   * If true, disables click to open the native file selection dialog\r\n   */\r\n  noClick: PropTypes.bool,\r\n\r\n  /**\r\n   * If true, disables SPACE/ENTER to open the native file selection dialog.\r\n   * Note that it also stops tracking the focus state.\r\n   */\r\n  noKeyboard: PropTypes.bool,\r\n\r\n  /**\r\n   * If true, disables drag 'n' drop\r\n   */\r\n  noDrag: PropTypes.bool,\r\n\r\n  /**\r\n   * If true, stops drag event propagation to parents\r\n   */\r\n  noDragEventsBubbling: PropTypes.bool,\r\n\r\n  /**\r\n   * Minimum file size (in bytes)\r\n   */\r\n  minSize: PropTypes.number,\r\n\r\n  /**\r\n   * Maximum file size (in bytes)\r\n   */\r\n  maxSize: PropTypes.number,\r\n\r\n  /**\r\n   * Maximum accepted number of files\r\n   * The default value is 0 which means there is no limitation to how many files are accepted.\r\n   */\r\n  maxFiles: PropTypes.number,\r\n\r\n  /**\r\n   * Enable/disable the dropzone\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * Use this to provide a custom file aggregator\r\n   *\r\n   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\r\n   */\r\n  getFilesFromEvent: PropTypes.func,\r\n\r\n  /**\r\n   * Cb for when closing the file dialog with no selection\r\n   */\r\n  onFileDialogCancel: PropTypes.func,\r\n\r\n  /**\r\n   * Cb for when opening the file dialog\r\n   */\r\n  onFileDialogOpen: PropTypes.func,\r\n\r\n  /**\r\n   * Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API\r\n   * to open the file picker instead of using an `<input type=\"file\">` click event.\r\n   */\r\n  useFsAccessApi: PropTypes.bool,\r\n\r\n  /**\r\n   * Cb for when the `dragenter` event occurs.\r\n   *\r\n   * @param {DragEvent} event\r\n   */\r\n  onDragEnter: PropTypes.func,\r\n\r\n  /**\r\n   * Cb for when the `dragleave` event occurs\r\n   *\r\n   * @param {DragEvent} event\r\n   */\r\n  onDragLeave: PropTypes.func,\r\n\r\n  /**\r\n   * Cb for when the `dragover` event occurs\r\n   *\r\n   * @param {DragEvent} event\r\n   */\r\n  onDragOver: PropTypes.func,\r\n\r\n  /**\r\n   * Cb for when the `drop` event occurs.\r\n   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.\r\n   *\r\n   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.\r\n   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.\r\n   * If `multiple` is set to false and additional files are dropped,\r\n   * all files besides the first will be rejected.\r\n   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.\r\n   *\r\n   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.\r\n   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.\r\n   *\r\n   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.\r\n   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\r\n   *\r\n   * ```js\r\n   * function onDrop(acceptedFiles) {\r\n   *   const req = request.post('/upload')\r\n   *   acceptedFiles.forEach(file => {\r\n   *     req.attach(file.name, file)\r\n   *   })\r\n   *   req.end(callback)\r\n   * }\r\n   * ```\r\n   *\r\n   * @param {File[]} acceptedFiles\r\n   * @param {FileRejection[]} fileRejections\r\n   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\r\n   */\r\n  onDrop: PropTypes.func,\r\n\r\n  /**\r\n   * Cb for when the `drop` event occurs.\r\n   * Note that if no files are accepted, this callback is not invoked.\r\n   *\r\n   * @param {File[]} files\r\n   * @param {(DragEvent|Event)} event\r\n   */\r\n  onDropAccepted: PropTypes.func,\r\n\r\n  /**\r\n   * Cb for when the `drop` event occurs.\r\n   * Note that if no files are rejected, this callback is not invoked.\r\n   *\r\n   * @param {FileRejection[]} fileRejections\r\n   * @param {(DragEvent|Event)} event\r\n   */\r\n  onDropRejected: PropTypes.func,\r\n\r\n  /**\r\n   * Custom validation function\r\n   * @param {File} file\r\n   * @returns {FileError|FileError[]}\r\n   */\r\n  validator: PropTypes.func\r\n};\r\nexport default Dropzone;\r\n/**\r\n * A function that is invoked for the `dragenter`,\r\n * `dragover` and `dragleave` events.\r\n * It is not invoked if the items are not files (such as link, text, etc.).\r\n *\r\n * @callback dragCb\r\n * @param {DragEvent} event\r\n */\r\n\r\n/**\r\n * A function that is invoked for the `drop` or input change event.\r\n * It is not invoked if the items are not files (such as link, text, etc.).\r\n *\r\n * @callback dropCb\r\n * @param {File[]} acceptedFiles List of accepted files\r\n * @param {FileRejection[]} fileRejections List of rejected files and why they were rejected\r\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\r\n */\r\n\r\n/**\r\n * A function that is invoked for the `drop` or input change event.\r\n * It is not invoked if the items are files (such as link, text, etc.).\r\n *\r\n * @callback dropAcceptedCb\r\n * @param {File[]} files List of accepted files that meet the given criteria\r\n * (`accept`, `multiple`, `minSize`, `maxSize`)\r\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\r\n */\r\n\r\n/**\r\n * A function that is invoked for the `drop` or input change event.\r\n *\r\n * @callback dropRejectedCb\r\n * @param {File[]} files List of rejected files that do not meet the given criteria\r\n * (`accept`, `multiple`, `minSize`, `maxSize`)\r\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\r\n */\r\n\r\n/**\r\n * A function that is used aggregate files,\r\n * in a asynchronous fashion, from drag or input change events.\r\n *\r\n * @callback getFilesFromEvent\r\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\r\n * @returns {(File[]|Promise<File[]>)}\r\n */\r\n\r\n/**\r\n * An object with the current dropzone state and some helper functions.\r\n *\r\n * @typedef {object} DropzoneState\r\n * @property {Function} getRootProps Returns the props you should apply to the root drop container you render\r\n * @property {Function} getInputProps Returns the props you should apply to hidden file input you render\r\n * @property {Function} open Open the native file selection dialog\r\n * @property {boolean} isFocused Dropzone area is in focus\r\n * @property {boolean} isFileDialogActive File dialog is opened\r\n * @property {boolean} isDragActive Active drag is in progress\r\n * @property {boolean} isDragAccept Dragged files are accepted\r\n * @property {boolean} isDragReject Some dragged files are rejected\r\n * @property {File[]} draggedFiles Files in active drag\r\n * @property {File[]} acceptedFiles Accepted files\r\n * @property {FileRejection[]} fileRejections Rejected files and why they were rejected\r\n */\r\n\r\nvar initialState = {\r\n  isFocused: false,\r\n  isFileDialogActive: false,\r\n  isDragActive: false,\r\n  isDragAccept: false,\r\n  isDragReject: false,\r\n  draggedFiles: [],\r\n  acceptedFiles: [],\r\n  fileRejections: []\r\n};\r\n/**\r\n * A React hook that creates a drag 'n' drop area.\r\n *\r\n * ```jsx\r\n * function MyDropzone(props) {\r\n *   const {getRootProps, getInputProps} = useDropzone({\r\n *     onDrop: acceptedFiles => {\r\n *       // do something with the File objects, e.g. upload to some server\r\n *     }\r\n *   });\r\n *   return (\r\n *     <div {...getRootProps()}>\r\n *       <input {...getInputProps()} />\r\n *       <p>Drag and drop some files here, or click to select files</p>\r\n *     </div>\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * @function useDropzone\r\n *\r\n * @param {object} props\r\n * @param {string|string[]} [props.accept] Set accepted file types.\r\n * See https://github.com/okonet/attr-accept for more information.\r\n * Keep in mind that mime type determination is not reliable across platforms. CSV files,\r\n * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under\r\n * Windows. In some cases there might not be a mime type set at all.\r\n * See: https://github.com/react-dropzone/react-dropzone/issues/276\r\n * @param {boolean} [props.multiple=true] Allow drag 'n' drop (or selection from the file dialog) of multiple files\r\n * @param {boolean} [props.preventDropOnDocument=true] If false, allow dropped items to take over the current browser window\r\n * @param {boolean} [props.noClick=false] If true, disables click to open the native file selection dialog\r\n * @param {boolean} [props.noKeyboard=false] If true, disables SPACE/ENTER to open the native file selection dialog.\r\n * Note that it also stops tracking the focus state.\r\n * @param {boolean} [props.noDrag=false] If true, disables drag 'n' drop\r\n * @param {boolean} [props.noDragEventsBubbling=false] If true, stops drag event propagation to parents\r\n * @param {number} [props.minSize=0] Minimum file size (in bytes)\r\n * @param {number} [props.maxSize=Infinity] Maximum file size (in bytes)\r\n * @param {boolean} [props.disabled=false] Enable/disable the dropzone\r\n * @param {getFilesFromEvent} [props.getFilesFromEvent] Use this to provide a custom file aggregator\r\n * @param {Function} [props.onFileDialogCancel] Cb for when closing the file dialog with no selection\r\n * @param {boolean} [props.useFsAccessApi] Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API\r\n * to open the file picker instead of using an `<input type=\"file\">` click event.\r\n * @param {Function} [props.onFileDialogOpen] Cb for when opening the file dialog\r\n * @param {dragCb} [props.onDragEnter] Cb for when the `dragenter` event occurs.\r\n * @param {dragCb} [props.onDragLeave] Cb for when the `dragleave` event occurs\r\n * @param {dragCb} [props.onDragOver] Cb for when the `dragover` event occurs\r\n * @param {dropCb} [props.onDrop] Cb for when the `drop` event occurs.\r\n * Note that this callback is invoked after the `getFilesFromEvent` callback is done.\r\n *\r\n * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.\r\n * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.\r\n * If `multiple` is set to false and additional files are dropped,\r\n * all files besides the first will be rejected.\r\n * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.\r\n *\r\n * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.\r\n * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.\r\n *\r\n * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.\r\n * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\r\n *\r\n * ```js\r\n * function onDrop(acceptedFiles) {\r\n *   const req = request.post('/upload')\r\n *   acceptedFiles.forEach(file => {\r\n *     req.attach(file.name, file)\r\n *   })\r\n *   req.end(callback)\r\n * }\r\n * ```\r\n * @param {dropAcceptedCb} [props.onDropAccepted]\r\n * @param {dropRejectedCb} [props.onDropRejected]\r\n *\r\n * @returns {DropzoneState}\r\n */\r\n\r\nexport function useDropzone() {\r\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n\r\n  var _defaultProps$options = _objectSpread(_objectSpread({}, defaultProps), options),\r\n      accept = _defaultProps$options.accept,\r\n      disabled = _defaultProps$options.disabled,\r\n      getFilesFromEvent = _defaultProps$options.getFilesFromEvent,\r\n      maxSize = _defaultProps$options.maxSize,\r\n      minSize = _defaultProps$options.minSize,\r\n      multiple = _defaultProps$options.multiple,\r\n      maxFiles = _defaultProps$options.maxFiles,\r\n      onDragEnter = _defaultProps$options.onDragEnter,\r\n      onDragLeave = _defaultProps$options.onDragLeave,\r\n      onDragOver = _defaultProps$options.onDragOver,\r\n      onDrop = _defaultProps$options.onDrop,\r\n      onDropAccepted = _defaultProps$options.onDropAccepted,\r\n      onDropRejected = _defaultProps$options.onDropRejected,\r\n      onFileDialogCancel = _defaultProps$options.onFileDialogCancel,\r\n      onFileDialogOpen = _defaultProps$options.onFileDialogOpen,\r\n      useFsAccessApi = _defaultProps$options.useFsAccessApi,\r\n      preventDropOnDocument = _defaultProps$options.preventDropOnDocument,\r\n      noClick = _defaultProps$options.noClick,\r\n      noKeyboard = _defaultProps$options.noKeyboard,\r\n      noDrag = _defaultProps$options.noDrag,\r\n      noDragEventsBubbling = _defaultProps$options.noDragEventsBubbling,\r\n      validator = _defaultProps$options.validator;\r\n\r\n  var onFileDialogOpenCb = useMemo(function () {\r\n    return typeof onFileDialogOpen === \"function\" ? onFileDialogOpen : noop;\r\n  }, [onFileDialogOpen]);\r\n  var onFileDialogCancelCb = useMemo(function () {\r\n    return typeof onFileDialogCancel === \"function\" ? onFileDialogCancel : noop;\r\n  }, [onFileDialogCancel]);\r\n  var rootRef = useRef(null);\r\n  var inputRef = useRef(null);\r\n\r\n  var _useReducer = useReducer(reducer, initialState),\r\n      _useReducer2 = _slicedToArray(_useReducer, 2),\r\n      state = _useReducer2[0],\r\n      dispatch = _useReducer2[1];\r\n\r\n  var isFocused = state.isFocused,\r\n      isFileDialogActive = state.isFileDialogActive,\r\n      draggedFiles = state.draggedFiles;\r\n  var fsAccessApiWorksRef = useRef(typeof window !== \"undefined\" && window.isSecureContext && useFsAccessApi && canUseFileSystemAccessAPI()); // Update file dialog active state when the window is focused on\r\n\r\n  var onWindowFocus = function onWindowFocus() {\r\n    // Execute the timeout only if the file dialog is opened in the browser\r\n    if (!fsAccessApiWorksRef.current && isFileDialogActive) {\r\n      setTimeout(function () {\r\n        if (inputRef.current) {\r\n          var files = inputRef.current.files;\r\n\r\n          if (!files.length) {\r\n            dispatch({\r\n              type: \"closeDialog\"\r\n            });\r\n            onFileDialogCancelCb();\r\n          }\r\n        }\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"focus\", onWindowFocus, false);\r\n    return function () {\r\n      window.removeEventListener(\"focus\", onWindowFocus, false);\r\n    };\r\n  }, [inputRef, isFileDialogActive, onFileDialogCancelCb, fsAccessApiWorksRef]);\r\n  var dragTargetsRef = useRef([]);\r\n\r\n  var onDocumentDrop = function onDocumentDrop(event) {\r\n    if (rootRef.current && rootRef.current.contains(event.target)) {\r\n      // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler\r\n      return;\r\n    }\r\n\r\n    event.preventDefault();\r\n    dragTargetsRef.current = [];\r\n  };\r\n\r\n  useEffect(function () {\r\n    if (preventDropOnDocument) {\r\n      document.addEventListener(\"dragover\", onDocumentDragOver, false);\r\n      document.addEventListener(\"drop\", onDocumentDrop, false);\r\n    }\r\n\r\n    return function () {\r\n      if (preventDropOnDocument) {\r\n        document.removeEventListener(\"dragover\", onDocumentDragOver);\r\n        document.removeEventListener(\"drop\", onDocumentDrop);\r\n      }\r\n    };\r\n  }, [rootRef, preventDropOnDocument]);\r\n  var onDragEnterCb = useCallback(function (event) {\r\n    event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done\r\n\r\n    event.persist();\r\n    stopPropagation(event);\r\n    dragTargetsRef.current = [].concat(_toConsumableArray(dragTargetsRef.current), [event.target]);\r\n\r\n    if (isEvtWithFiles(event)) {\r\n      Promise.resolve(getFilesFromEvent(event)).then(function (draggedFiles) {\r\n        if (isPropagationStopped(event) && !noDragEventsBubbling) {\r\n          return;\r\n        }\r\n\r\n        dispatch({\r\n          draggedFiles: draggedFiles,\r\n          isDragActive: true,\r\n          type: \"setDraggedFiles\"\r\n        });\r\n\r\n        if (onDragEnter) {\r\n          onDragEnter(event);\r\n        }\r\n      });\r\n    }\r\n  }, [getFilesFromEvent, onDragEnter, noDragEventsBubbling]);\r\n  var onDragOverCb = useCallback(function (event) {\r\n    event.preventDefault();\r\n    event.persist();\r\n    stopPropagation(event);\r\n    var hasFiles = isEvtWithFiles(event);\r\n\r\n    if (hasFiles && event.dataTransfer) {\r\n      try {\r\n        event.dataTransfer.dropEffect = \"copy\";\r\n      } catch (_unused) {}\r\n      /* eslint-disable-line no-empty */\r\n\r\n    }\r\n\r\n    if (hasFiles && onDragOver) {\r\n      onDragOver(event);\r\n    }\r\n\r\n    return false;\r\n  }, [onDragOver, noDragEventsBubbling]);\r\n  var onDragLeaveCb = useCallback(function (event) {\r\n    event.preventDefault();\r\n    event.persist();\r\n    stopPropagation(event); // Only deactivate once the dropzone and all children have been left\r\n\r\n    var targets = dragTargetsRef.current.filter(function (target) {\r\n      return rootRef.current && rootRef.current.contains(target);\r\n    }); // Make sure to remove a target present multiple times only once\r\n    // (Firefox may fire dragenter/dragleave multiple times on the same element)\r\n\r\n    var targetIdx = targets.indexOf(event.target);\r\n\r\n    if (targetIdx !== -1) {\r\n      targets.splice(targetIdx, 1);\r\n    }\r\n\r\n    dragTargetsRef.current = targets;\r\n\r\n    if (targets.length > 0) {\r\n      return;\r\n    }\r\n\r\n    dispatch({\r\n      isDragActive: false,\r\n      type: \"setDraggedFiles\",\r\n      draggedFiles: []\r\n    });\r\n\r\n    if (isEvtWithFiles(event) && onDragLeave) {\r\n      onDragLeave(event);\r\n    }\r\n  }, [rootRef, onDragLeave, noDragEventsBubbling]);\r\n  var setFiles = useCallback(function (files, event) {\r\n    var acceptedFiles = [];\r\n    var fileRejections = [];\r\n    files.forEach(function (file) {\r\n      var _fileAccepted = fileAccepted(file, accept),\r\n          _fileAccepted2 = _slicedToArray(_fileAccepted, 2),\r\n          accepted = _fileAccepted2[0],\r\n          acceptError = _fileAccepted2[1];\r\n\r\n      var _fileMatchSize = fileMatchSize(file, minSize, maxSize),\r\n          _fileMatchSize2 = _slicedToArray(_fileMatchSize, 2),\r\n          sizeMatch = _fileMatchSize2[0],\r\n          sizeError = _fileMatchSize2[1];\r\n\r\n      var customErrors = validator ? validator(file) : null;\r\n\r\n      if (accepted && sizeMatch && !customErrors) {\r\n        acceptedFiles.push(file);\r\n      } else {\r\n        var errors = [acceptError, sizeError];\r\n\r\n        if (customErrors) {\r\n          errors = errors.concat(customErrors);\r\n        }\r\n\r\n        fileRejections.push({\r\n          file: file,\r\n          errors: errors.filter(function (e) {\r\n            return e;\r\n          })\r\n        });\r\n      }\r\n    });\r\n\r\n    if (!multiple && acceptedFiles.length > 1 || multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles) {\r\n      // Reject everything and empty accepted files\r\n      acceptedFiles.forEach(function (file) {\r\n        fileRejections.push({\r\n          file: file,\r\n          errors: [TOO_MANY_FILES_REJECTION]\r\n        });\r\n      });\r\n      acceptedFiles.splice(0);\r\n    }\r\n\r\n    dispatch({\r\n      acceptedFiles: acceptedFiles,\r\n      fileRejections: fileRejections,\r\n      type: \"setFiles\"\r\n    });\r\n\r\n    if (onDrop) {\r\n      onDrop(acceptedFiles, fileRejections, event);\r\n    }\r\n\r\n    if (fileRejections.length > 0 && onDropRejected) {\r\n      onDropRejected(fileRejections, event);\r\n    }\r\n\r\n    if (acceptedFiles.length > 0 && onDropAccepted) {\r\n      onDropAccepted(acceptedFiles, event);\r\n    }\r\n  }, [dispatch, multiple, accept, minSize, maxSize, maxFiles, onDrop, onDropAccepted, onDropRejected, validator]);\r\n  var onDropCb = useCallback(function (event) {\r\n    event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done\r\n\r\n    event.persist();\r\n    stopPropagation(event);\r\n    dragTargetsRef.current = [];\r\n\r\n    if (isEvtWithFiles(event)) {\r\n      Promise.resolve(getFilesFromEvent(event)).then(function (files) {\r\n        if (isPropagationStopped(event) && !noDragEventsBubbling) {\r\n          return;\r\n        }\r\n\r\n        setFiles(files, event);\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"reset\"\r\n    });\r\n  }, [getFilesFromEvent, setFiles, noDragEventsBubbling]); // Fn for opening the file dialog programmatically\r\n\r\n  var openFileDialog = useCallback(function () {\r\n    // No point to use FS access APIs if context is not secure\r\n    // https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts#feature_detection\r\n    if (fsAccessApiWorksRef.current) {\r\n      dispatch({\r\n        type: \"openDialog\"\r\n      });\r\n      onFileDialogOpenCb(); // https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker\r\n\r\n      var opts = {\r\n        multiple: multiple,\r\n        types: filePickerOptionsTypes(accept)\r\n      };\r\n      window.showOpenFilePicker(opts).then(function (handles) {\r\n        return getFilesFromEvent(handles);\r\n      }).then(function (files) {\r\n        setFiles(files, null);\r\n        dispatch({\r\n          type: \"closeDialog\"\r\n        });\r\n      }).catch(function (e) {\r\n        // AbortError means the user canceled\r\n        if (isAbort(e)) {\r\n          onFileDialogCancelCb(e);\r\n          dispatch({\r\n            type: \"closeDialog\"\r\n          });\r\n        } else if (isSecurityError(e)) {\r\n          fsAccessApiWorksRef.current = false; // CORS, so cannot use this API\r\n          // Try using the input\r\n\r\n          if (inputRef.current) {\r\n            inputRef.current.value = null;\r\n            inputRef.current.click();\r\n          }\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (inputRef.current) {\r\n      dispatch({\r\n        type: \"openDialog\"\r\n      });\r\n      onFileDialogOpenCb();\r\n      inputRef.current.value = null;\r\n      inputRef.current.click();\r\n    }\r\n  }, [dispatch, onFileDialogOpenCb, onFileDialogCancelCb, useFsAccessApi, setFiles, accept, multiple]); // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone\r\n\r\n  var onKeyDownCb = useCallback(function (event) {\r\n    // Ignore keyboard events bubbling up the DOM tree\r\n    if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {\r\n      return;\r\n    }\r\n\r\n    if (event.key === \" \" || event.key === \"Enter\" || event.keyCode === 32 || event.keyCode === 13) {\r\n      event.preventDefault();\r\n      openFileDialog();\r\n    }\r\n  }, [rootRef, openFileDialog]); // Update focus state for the dropzone\r\n\r\n  var onFocusCb = useCallback(function () {\r\n    dispatch({\r\n      type: \"focus\"\r\n    });\r\n  }, []);\r\n  var onBlurCb = useCallback(function () {\r\n    dispatch({\r\n      type: \"blur\"\r\n    });\r\n  }, []); // Cb to open the file dialog when click occurs on the dropzone\r\n\r\n  var onClickCb = useCallback(function () {\r\n    if (noClick) {\r\n      return;\r\n    } // In IE11/Edge the file-browser dialog is blocking, therefore, use setTimeout()\r\n    // to ensure React can handle state changes\r\n    // See: https://github.com/react-dropzone/react-dropzone/issues/450\r\n\r\n\r\n    if (isIeOrEdge()) {\r\n      setTimeout(openFileDialog, 0);\r\n    } else {\r\n      openFileDialog();\r\n    }\r\n  }, [noClick, openFileDialog]);\r\n\r\n  var composeHandler = function composeHandler(fn) {\r\n    return disabled ? null : fn;\r\n  };\r\n\r\n  var composeKeyboardHandler = function composeKeyboardHandler(fn) {\r\n    return noKeyboard ? null : composeHandler(fn);\r\n  };\r\n\r\n  var composeDragHandler = function composeDragHandler(fn) {\r\n    return noDrag ? null : composeHandler(fn);\r\n  };\r\n\r\n  var stopPropagation = function stopPropagation(event) {\r\n    if (noDragEventsBubbling) {\r\n      event.stopPropagation();\r\n    }\r\n  };\r\n\r\n  var getRootProps = useMemo(function () {\r\n    return function () {\r\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\r\n          _ref2$refKey = _ref2.refKey,\r\n          refKey = _ref2$refKey === void 0 ? \"ref\" : _ref2$refKey,\r\n          role = _ref2.role,\r\n          onKeyDown = _ref2.onKeyDown,\r\n          onFocus = _ref2.onFocus,\r\n          onBlur = _ref2.onBlur,\r\n          onClick = _ref2.onClick,\r\n          onDragEnter = _ref2.onDragEnter,\r\n          onDragOver = _ref2.onDragOver,\r\n          onDragLeave = _ref2.onDragLeave,\r\n          onDrop = _ref2.onDrop,\r\n          rest = _objectWithoutProperties(_ref2, _excluded3);\r\n\r\n      return _objectSpread(_objectSpread(_defineProperty({\r\n        onKeyDown: composeKeyboardHandler(composeEventHandlers(onKeyDown, onKeyDownCb)),\r\n        onFocus: composeKeyboardHandler(composeEventHandlers(onFocus, onFocusCb)),\r\n        onBlur: composeKeyboardHandler(composeEventHandlers(onBlur, onBlurCb)),\r\n        onClick: composeHandler(composeEventHandlers(onClick, onClickCb)),\r\n        onDragEnter: composeDragHandler(composeEventHandlers(onDragEnter, onDragEnterCb)),\r\n        onDragOver: composeDragHandler(composeEventHandlers(onDragOver, onDragOverCb)),\r\n        onDragLeave: composeDragHandler(composeEventHandlers(onDragLeave, onDragLeaveCb)),\r\n        onDrop: composeDragHandler(composeEventHandlers(onDrop, onDropCb)),\r\n        role: typeof role === \"string\" && role !== \"\" ? role : \"button\"\r\n      }, refKey, rootRef), !disabled && !noKeyboard ? {\r\n        tabIndex: 0\r\n      } : {}), rest);\r\n    };\r\n  }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, noKeyboard, noDrag, disabled]);\r\n  var onInputElementClick = useCallback(function (event) {\r\n    event.stopPropagation();\r\n  }, []);\r\n  var getInputProps = useMemo(function () {\r\n    return function () {\r\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\r\n          _ref3$refKey = _ref3.refKey,\r\n          refKey = _ref3$refKey === void 0 ? \"ref\" : _ref3$refKey,\r\n          onChange = _ref3.onChange,\r\n          onClick = _ref3.onClick,\r\n          rest = _objectWithoutProperties(_ref3, _excluded4);\r\n\r\n      var inputProps = _defineProperty({\r\n        accept: accept,\r\n        multiple: multiple,\r\n        type: \"file\",\r\n        style: {\r\n          display: \"none\"\r\n        },\r\n        onChange: composeHandler(composeEventHandlers(onChange, onDropCb)),\r\n        onClick: composeHandler(composeEventHandlers(onClick, onInputElementClick)),\r\n        tabIndex: -1\r\n      }, refKey, inputRef);\r\n\r\n      return _objectSpread(_objectSpread({}, inputProps), rest);\r\n    };\r\n  }, [inputRef, accept, multiple, onDropCb, disabled]);\r\n  var fileCount = draggedFiles.length;\r\n  var isDragAccept = fileCount > 0 && allFilesAccepted({\r\n    files: draggedFiles,\r\n    accept: accept,\r\n    minSize: minSize,\r\n    maxSize: maxSize,\r\n    multiple: multiple,\r\n    maxFiles: maxFiles\r\n  });\r\n  var isDragReject = fileCount > 0 && !isDragAccept;\r\n  return _objectSpread(_objectSpread({}, state), {}, {\r\n    isDragAccept: isDragAccept,\r\n    isDragReject: isDragReject,\r\n    isFocused: isFocused && !disabled,\r\n    getRootProps: getRootProps,\r\n    getInputProps: getInputProps,\r\n    rootRef: rootRef,\r\n    inputRef: inputRef,\r\n    open: composeHandler(openFileDialog)\r\n  });\r\n}\r\n\r\nfunction reducer(state, action) {\r\n  /* istanbul ignore next */\r\n  switch (action.type) {\r\n    case \"focus\":\r\n      return _objectSpread(_objectSpread({}, state), {}, {\r\n        isFocused: true\r\n      });\r\n\r\n    case \"blur\":\r\n      return _objectSpread(_objectSpread({}, state), {}, {\r\n        isFocused: false\r\n      });\r\n\r\n    case \"openDialog\":\r\n      return _objectSpread(_objectSpread({}, initialState), {}, {\r\n        isFileDialogActive: true\r\n      });\r\n\r\n    case \"closeDialog\":\r\n      return _objectSpread(_objectSpread({}, state), {}, {\r\n        isFileDialogActive: false\r\n      });\r\n\r\n    case \"setDraggedFiles\":\r\n      /* eslint no-case-declarations: 0 */\r\n      var isDragActive = action.isDragActive,\r\n          draggedFiles = action.draggedFiles;\r\n      return _objectSpread(_objectSpread({}, state), {}, {\r\n        draggedFiles: draggedFiles,\r\n        isDragActive: isDragActive\r\n      });\r\n\r\n    case \"setFiles\":\r\n      return _objectSpread(_objectSpread({}, state), {}, {\r\n        acceptedFiles: action.acceptedFiles,\r\n        fileRejections: action.fileRejections\r\n      });\r\n\r\n    case \"reset\":\r\n      return _objectSpread({}, initialState);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction noop() {}\r\n\r\nexport { ErrorCode } from \"./utils\";", "/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n  extendStatics = Object.setPrototypeOf ||\r\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n  return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n  if (typeof b !== \"function\" && b !== null)\r\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n  extendStatics(d, b);\r\n  function __() { this.constructor = d; }\r\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n  __assign = Object.assign || function __assign(t) {\r\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n          s = arguments[i];\r\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n      }\r\n      return t;\r\n  }\r\n  return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n  var t = {};\r\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n      t[p] = s[p];\r\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n              t[p[i]] = s[p[i]];\r\n      }\r\n  return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n  return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n  var _, done = false;\r\n  for (var i = decorators.length - 1; i >= 0; i--) {\r\n      var context = {};\r\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n      if (kind === \"accessor\") {\r\n          if (result === void 0) continue;\r\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n          if (_ = accept(result.get)) descriptor.get = _;\r\n          if (_ = accept(result.set)) descriptor.set = _;\r\n          if (_ = accept(result.init)) initializers.unshift(_);\r\n      }\r\n      else if (_ = accept(result)) {\r\n          if (kind === \"field\") initializers.unshift(_);\r\n          else descriptor[key] = _;\r\n      }\r\n  }\r\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n  done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n  var useValue = arguments.length > 2;\r\n  for (var i = 0; i < initializers.length; i++) {\r\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n  }\r\n  return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n  return new (P || (P = Promise))(function (resolve, reject) {\r\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n  });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n  function verb(n) { return function (v) { return step([n, v]); }; }\r\n  function step(op) {\r\n      if (f) throw new TypeError(\"Generator is already executing.\");\r\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n          if (y = 0, t) op = [op[0] & 2, t.value];\r\n          switch (op[0]) {\r\n              case 0: case 1: t = op; break;\r\n              case 4: _.label++; return { value: op[1], done: false };\r\n              case 5: _.label++; y = op[1]; op = [0]; continue;\r\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n              default:\r\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                  if (t[2]) _.ops.pop();\r\n                  _.trys.pop(); continue;\r\n          }\r\n          op = body.call(thisArg, _);\r\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n  }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n  if (k2 === undefined) k2 = k;\r\n  var desc = Object.getOwnPropertyDescriptor(m, k);\r\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n  }\r\n  Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n  if (k2 === undefined) k2 = k;\r\n  o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n  if (m) return m.call(o);\r\n  if (o && typeof o.length === \"number\") return {\r\n      next: function () {\r\n          if (o && i >= o.length) o = void 0;\r\n          return { value: o && o[i++], done: !o };\r\n      }\r\n  };\r\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n  if (!m) return o;\r\n  var i = m.call(o), r, ar = [], e;\r\n  try {\r\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n  }\r\n  catch (error) { e = { error: error }; }\r\n  finally {\r\n      try {\r\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n      }\r\n      finally { if (e) throw e.error; }\r\n  }\r\n  return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n  for (var ar = [], i = 0; i < arguments.length; i++)\r\n      ar = ar.concat(__read(arguments[i]));\r\n  return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n          r[k] = a[j];\r\n  return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n      if (ar || !(i in from)) {\r\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n          ar[i] = from[i];\r\n      }\r\n  }\r\n  return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n  function fulfill(value) { resume(\"next\", value); }\r\n  function reject(value) { resume(\"throw\", value); }\r\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n  var i, p;\r\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n  var m = o[Symbol.asyncIterator], i;\r\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n  return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n  o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n  if (mod && mod.__esModule) return mod;\r\n  var result = {};\r\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n  __setModuleDefault(result, mod);\r\n  return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n  return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n  if (value !== null && value !== void 0) {\r\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n    var dispose;\r\n    if (async) {\r\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n        dispose = value[Symbol.asyncDispose];\r\n    }\r\n    if (dispose === void 0) {\r\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n        dispose = value[Symbol.dispose];\r\n    }\r\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n    env.stack.push({ value: value, dispose: dispose, async: async });\r\n  }\r\n  else if (async) {\r\n    env.stack.push({ async: true });\r\n  }\r\n  return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n  var e = new Error(message);\r\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n  function fail(e) {\r\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n    env.hasError = true;\r\n  }\r\n  function next() {\r\n    while (env.stack.length) {\r\n      var rec = env.stack.pop();\r\n      try {\r\n        var result = rec.dispose && rec.dispose.call(rec.value);\r\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n      }\r\n      catch (e) {\r\n          fail(e);\r\n      }\r\n    }\r\n    if (env.hasError) throw env.error;\r\n  }\r\n  return next();\r\n}\r\n\r\nexport default {\r\n  __extends,\r\n  __assign,\r\n  __rest,\r\n  __decorate,\r\n  __param,\r\n  __metadata,\r\n  __awaiter,\r\n  __generator,\r\n  __createBinding,\r\n  __exportStar,\r\n  __values,\r\n  __read,\r\n  __spread,\r\n  __spreadArrays,\r\n  __spreadArray,\r\n  __await,\r\n  __asyncGenerator,\r\n  __asyncDelegator,\r\n  __asyncValues,\r\n  __makeTemplateObject,\r\n  __importStar,\r\n  __importDefault,\r\n  __classPrivateFieldGet,\r\n  __classPrivateFieldSet,\r\n  __classPrivateFieldIn,\r\n  __addDisposableResource,\r\n  __disposeResources,\r\n};\r\n", "export const COMMON_MIME_TYPES = new Map([\r\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\r\n    ['aac', 'audio/aac'],\r\n    ['abw', 'application/x-abiword'],\r\n    ['arc', 'application/x-freearc'],\r\n    ['avif', 'image/avif'],\r\n    ['avi', 'video/x-msvideo'],\r\n    ['azw', 'application/vnd.amazon.ebook'],\r\n    ['bin', 'application/octet-stream'],\r\n    ['bmp', 'image/bmp'],\r\n    ['bz', 'application/x-bzip'],\r\n    ['bz2', 'application/x-bzip2'],\r\n    ['cda', 'application/x-cdf'],\r\n    ['csh', 'application/x-csh'],\r\n    ['css', 'text/css'],\r\n    ['csv', 'text/csv'],\r\n    ['doc', 'application/msword'],\r\n    ['docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'],\r\n    ['eot', 'application/vnd.ms-fontobject'],\r\n    ['epub', 'application/epub+zip'],\r\n    ['gz', 'application/gzip'],\r\n    ['gif', 'image/gif'],\r\n    ['heic', 'image/heic'],\r\n    ['heif', 'image/heif'],\r\n    ['htm', 'text/html'],\r\n    ['html', 'text/html'],\r\n    ['ico', 'image/vnd.microsoft.icon'],\r\n    ['ics', 'text/calendar'],\r\n    ['jar', 'application/java-archive'],\r\n    ['jpeg', 'image/jpeg'],\r\n    ['jpg', 'image/jpeg'],\r\n    ['js', 'text/javascript'],\r\n    ['json', 'application/json'],\r\n    ['jsonld', 'application/ld+json'],\r\n    ['mid', 'audio/midi'],\r\n    ['midi', 'audio/midi'],\r\n    ['mjs', 'text/javascript'],\r\n    ['mp3', 'audio/mpeg'],\r\n    ['mp4', 'video/mp4'],\r\n    ['mpeg', 'video/mpeg'],\r\n    ['mpkg', 'application/vnd.apple.installer+xml'],\r\n    ['odp', 'application/vnd.oasis.opendocument.presentation'],\r\n    ['ods', 'application/vnd.oasis.opendocument.spreadsheet'],\r\n    ['odt', 'application/vnd.oasis.opendocument.text'],\r\n    ['oga', 'audio/ogg'],\r\n    ['ogv', 'video/ogg'],\r\n    ['ogx', 'application/ogg'],\r\n    ['opus', 'audio/opus'],\r\n    ['otf', 'font/otf'],\r\n    ['png', 'image/png'],\r\n    ['pdf', 'application/pdf'],\r\n    ['php', 'application/x-httpd-php'],\r\n    ['ppt', 'application/vnd.ms-powerpoint'],\r\n    ['pptx', 'application/vnd.openxmlformats-officedocument.presentationml.presentation'],\r\n    ['rar', 'application/vnd.rar'],\r\n    ['rtf', 'application/rtf'],\r\n    ['sh', 'application/x-sh'],\r\n    ['svg', 'image/svg+xml'],\r\n    ['swf', 'application/x-shockwave-flash'],\r\n    ['tar', 'application/x-tar'],\r\n    ['tif', 'image/tiff'],\r\n    ['tiff', 'image/tiff'],\r\n    ['ts', 'video/mp2t'],\r\n    ['ttf', 'font/ttf'],\r\n    ['txt', 'text/plain'],\r\n    ['vsd', 'application/vnd.visio'],\r\n    ['wav', 'audio/wav'],\r\n    ['weba', 'audio/webm'],\r\n    ['webm', 'video/webm'],\r\n    ['webp', 'image/webp'],\r\n    ['woff', 'font/woff'],\r\n    ['woff2', 'font/woff2'],\r\n    ['xhtml', 'application/xhtml+xml'],\r\n    ['xls', 'application/vnd.ms-excel'],\r\n    ['xlsx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'],\r\n    ['xml', 'application/xml'],\r\n    ['xul', 'application/vnd.mozilla.xul+xml'],\r\n    ['zip', 'application/zip'],\r\n    ['7z', 'application/x-7z-compressed'],\r\n\r\n    // Others\r\n    ['mkv', 'video/x-matroska'],\r\n    ['mov', 'video/quicktime'],\r\n    ['msg', 'application/vnd.ms-outlook']\r\n]);\r\n\r\n\r\nexport function toFileWithPath(file: FileWithPath, path?: string): FileWithPath {\r\n    const f = withMimeType(file);\r\n    if (typeof f.path !== 'string') { // on electron, path is already set to the absolute path\r\n        const {webkitRelativePath} = file as FileWithWebkitPath;\r\n        Object.defineProperty(f, 'path', {\r\n            value: typeof path === 'string'\r\n                ? path\r\n                // If <input webkitdirectory> is set,\r\n                // the File will have a {webkitRelativePath} property\r\n                // https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory\r\n                : typeof webkitRelativePath === 'string' && webkitRelativePath.length > 0\r\n                    ? webkitRelativePath\r\n                    : file.name,\r\n            writable: false,\r\n            configurable: false,\r\n            enumerable: true\r\n        });\r\n    }\r\n\r\n    return f;\r\n}\r\n\r\ninterface DOMFile extends Blob {\r\n    readonly lastModified: number;\r\n    readonly name: string;\r\n}\r\n\r\nexport interface FileWithPath extends DOMFile {\r\n    readonly path?: string;\r\n}\r\n\r\ninterface FileWithWebkitPath extends File {\r\n    readonly webkitRelativePath?: string;\r\n}\r\n\r\nfunction withMimeType(file: FileWithPath) {\r\n    const {name} = file;\r\n    const hasExtension = name && name.lastIndexOf('.') !== -1;\r\n\r\n    if (hasExtension && !file.type) {\r\n        const ext = name.split('.')\r\n            .pop()!.toLowerCase();\r\n        const type = COMMON_MIME_TYPES.get(ext);\r\n        if (type) {\r\n            Object.defineProperty(file, 'type', {\r\n                value: type,\r\n                writable: false,\r\n                configurable: false,\r\n                enumerable: true\r\n            });\r\n        }\r\n    }\r\n\r\n    return file;\r\n}\r\n", "import {FileWithPath, toFileWithPath} from './file';\r\n\r\n\r\nconst FILES_TO_IGNORE = [\r\n    // Thumbnail cache files for macOS and Windows\r\n    '.DS_Store', // macOs\r\n    'Thumbs.db'  // Windows\r\n];\r\n\r\n\r\n/**\r\n * Convert a DragEvent's DataTrasfer object to a list of File objects\r\n * NOTE: If some of the items are folders,\r\n * everything will be flattened and placed in the same list but the paths will be kept as a {path} property.\r\n *\r\n * EXPERIMENTAL: A list of https://developer.mozilla.org/en-US/docs/Web/API/FileSystemHandle objects can also be passed as an arg\r\n * and a list of File objects will be returned.\r\n *\r\n * @param evt\r\n */\r\nexport async function fromEvent(evt: Event | any): Promise<(FileWithPath | DataTransferItem)[]> {\r\n    if (isObject<DragEvent>(evt) && isDataTransfer(evt)) {\r\n        return getDataTransferFiles(evt.dataTransfer, evt.type);\r\n    } else if (isChangeEvt(evt)) {\r\n        return getInputFiles(evt);\r\n    } else if (Array.isArray(evt) && evt.every(item => 'getFile' in item && typeof item.getFile === 'function')) {\r\n        return getFsHandleFiles(evt)\r\n    }\r\n    return [];\r\n}\r\n\r\nfunction isDataTransfer(value: any): value is DataTransfer {\r\n    return isObject(value.dataTransfer);\r\n}\r\n\r\nfunction isChangeEvt(value: any): value is Event {\r\n    return isObject<Event>(value) && isObject(value.target);\r\n}\r\n\r\nfunction isObject<T>(v: any): v is T {\r\n    return typeof v === 'object' && v !== null\r\n}\r\n\r\nfunction getInputFiles(evt: Event) {\r\n    return fromList<FileWithPath>((evt.target as HTMLInputElement).files).map(file => toFileWithPath(file));\r\n}\r\n\r\n// Ee expect each handle to be https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileHandle\r\nasync function getFsHandleFiles(handles: any[]) {\r\n    const files = await Promise.all(handles.map(h => h.getFile()));\r\n    return files.map(file => toFileWithPath(file));\r\n}\r\n\r\n\r\nasync function getDataTransferFiles(dt: DataTransfer | null, type: string) {\r\n    if (dt === null) {\r\n        return [];\r\n    }\r\n\r\n    // IE11 does not support dataTransfer.items\r\n    // See https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/items#Browser_compatibility\r\n    if (dt.items) {\r\n        const items = fromList<DataTransferItem>(dt.items)\r\n            .filter(item => item.kind === 'file');\r\n        // According to https://html.spec.whatwg.org/multipage/dnd.html#dndevents,\r\n        // only 'dragstart' and 'drop' has access to the data (source node)\r\n        if (type !== 'drop') {\r\n            return items;\r\n        }\r\n        const files = await Promise.all(items.map(toFilePromises));\r\n        return noIgnoredFiles(flatten<FileWithPath>(files));\r\n    }\r\n\r\n    return noIgnoredFiles(fromList<FileWithPath>(dt.files)\r\n        .map(file => toFileWithPath(file)));\r\n}\r\n\r\nfunction noIgnoredFiles(files: FileWithPath[]) {\r\n    return files.filter(file => FILES_TO_IGNORE.indexOf(file.name) === -1);\r\n}\r\n\r\n// IE11 does not support Array.from()\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#Browser_compatibility\r\n// https://developer.mozilla.org/en-US/docs/Web/API/FileList\r\n// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItemList\r\nfunction fromList<T>(items: DataTransferItemList | FileList | null): T[] {\r\n    if (items === null) {\r\n        return [];\r\n    }\r\n\r\n    const files = [];\r\n\r\n    // tslint:disable: prefer-for-of\r\n    for (let i = 0; i < items.length; i++) {\r\n        const file = items[i];\r\n        files.push(file);\r\n    }\r\n\r\n    return files as any;\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem\r\nfunction toFilePromises(item: DataTransferItem) {\r\n    if (typeof item.webkitGetAsEntry !== 'function') {\r\n        return fromDataTransferItem(item);\r\n    }\r\n\r\n    const entry = item.webkitGetAsEntry();\r\n\r\n    // Safari supports dropping an image node from a different window and can be retrieved using\r\n    // the DataTransferItem.getAsFile() API\r\n    // NOTE: FileSystemEntry.file() throws if trying to get the file\r\n    if (entry && entry.isDirectory) {\r\n        return fromDirEntry(entry) as any;\r\n    }\r\n\r\n    return fromDataTransferItem(item);\r\n}\r\n\r\nfunction flatten<T>(items: any[]): T[] {\r\n    return items.reduce((acc, files) => [\r\n        ...acc,\r\n        ...(Array.isArray(files) ? flatten(files) : [files])\r\n    ], []);\r\n}\r\n\r\nfunction fromDataTransferItem(item: DataTransferItem) {\r\n    const file = item.getAsFile();\r\n    if (!file) {\r\n        return Promise.reject(`${item} is not a File`);\r\n    }\r\n    const fwp = toFileWithPath(file);\r\n    return Promise.resolve(fwp);\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry\r\nasync function fromEntry(entry: any) {\r\n    return entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry);\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry\r\nfunction fromDirEntry(entry: any) {\r\n    const reader = entry.createReader();\r\n\r\n    return new Promise<FileArray[]>((resolve, reject) => {\r\n        const entries: Promise<FileValue[]>[] = [];\r\n\r\n        function readEntries() {\r\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry/createReader\r\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryReader/readEntries\r\n            reader.readEntries(async (batch: any[]) => {\r\n                if (!batch.length) {\r\n                    // Done reading directory\r\n                    try {\r\n                        const files = await Promise.all(entries);\r\n                        resolve(files);\r\n                    } catch (err) {\r\n                        reject(err);\r\n                    }\r\n                } else {\r\n                    const items = Promise.all(batch.map(fromEntry));\r\n                    entries.push(items);\r\n\r\n                    // Continue reading\r\n                    readEntries();\r\n                }\r\n            }, (err: any) => {\r\n                reject(err);\r\n            });\r\n        }\r\n\r\n        readEntries();\r\n    });\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry\r\nasync function fromFileEntry(entry: any) {\r\n    return new Promise<FileWithPath>((resolve, reject) => {\r\n        entry.file((file: FileWithPath) => {\r\n            const fwp = toFileWithPath(file, entry.fullPath);\r\n            resolve(fwp);\r\n        }, (err: any) => {\r\n            reject(err);\r\n        });\r\n    });\r\n}\r\n\r\n// Infinite type recursion\r\n// https://github.com/Microsoft/TypeScript/issues/3496#issuecomment-128553540\r\ninterface FileArray extends Array<FileValue> {}\r\ntype FileValue = FileWithPath\r\n    | FileArray[];\r\n", "function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\r\n\r\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\r\n\r\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\r\n\r\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\r\n\r\nimport accepts from \"attr-accept\"; // Error codes\r\n\r\nexport var FILE_INVALID_TYPE = \"file-invalid-type\";\r\nexport var FILE_TOO_LARGE = \"file-too-large\";\r\nexport var FILE_TOO_SMALL = \"file-too-small\";\r\nexport var TOO_MANY_FILES = \"too-many-files\";\r\nexport var ErrorCode = {\r\n  FileInvalidType: FILE_INVALID_TYPE,\r\n  FileTooLarge: FILE_TOO_LARGE,\r\n  FileTooSmall: FILE_TOO_SMALL,\r\n  TooManyFiles: TOO_MANY_FILES\r\n}; // File Errors\r\n\r\nexport var getInvalidTypeRejectionErr = function getInvalidTypeRejectionErr(accept) {\r\n  accept = Array.isArray(accept) && accept.length === 1 ? accept[0] : accept;\r\n  var messageSuffix = Array.isArray(accept) ? \"one of \".concat(accept.join(\", \")) : accept;\r\n  return {\r\n    code: FILE_INVALID_TYPE,\r\n    message: \"File type must be \".concat(messageSuffix)\r\n  };\r\n};\r\nexport var getTooLargeRejectionErr = function getTooLargeRejectionErr(maxSize) {\r\n  return {\r\n    code: FILE_TOO_LARGE,\r\n    message: \"File is larger than \".concat(maxSize, \" \").concat(maxSize === 1 ? \"byte\" : \"bytes\")\r\n  };\r\n};\r\nexport var getTooSmallRejectionErr = function getTooSmallRejectionErr(minSize) {\r\n  return {\r\n    code: FILE_TOO_SMALL,\r\n    message: \"File is smaller than \".concat(minSize, \" \").concat(minSize === 1 ? \"byte\" : \"bytes\")\r\n  };\r\n};\r\nexport var TOO_MANY_FILES_REJECTION = {\r\n  code: TOO_MANY_FILES,\r\n  message: \"Too many files\"\r\n}; // Firefox versions prior to 53 return a bogus MIME type for every file drag, so dragovers with\r\n// that MIME type will always be accepted\r\n\r\nexport function fileAccepted(file, accept) {\r\n  var isAcceptable = file.type === \"application/x-moz-file\" || accepts(file, accept);\r\n  return [isAcceptable, isAcceptable ? null : getInvalidTypeRejectionErr(accept)];\r\n}\r\nexport function fileMatchSize(file, minSize, maxSize) {\r\n  if (isDefined(file.size)) {\r\n    if (isDefined(minSize) && isDefined(maxSize)) {\r\n      if (file.size > maxSize) return [false, getTooLargeRejectionErr(maxSize)];\r\n      if (file.size < minSize) return [false, getTooSmallRejectionErr(minSize)];\r\n    } else if (isDefined(minSize) && file.size < minSize) return [false, getTooSmallRejectionErr(minSize)];else if (isDefined(maxSize) && file.size > maxSize) return [false, getTooLargeRejectionErr(maxSize)];\r\n  }\r\n\r\n  return [true, null];\r\n}\r\n\r\nfunction isDefined(value) {\r\n  return value !== undefined && value !== null;\r\n}\r\n\r\nexport function allFilesAccepted(_ref) {\r\n  var files = _ref.files,\r\n      accept = _ref.accept,\r\n      minSize = _ref.minSize,\r\n      maxSize = _ref.maxSize,\r\n      multiple = _ref.multiple,\r\n      maxFiles = _ref.maxFiles;\r\n\r\n  if (!multiple && files.length > 1 || multiple && maxFiles >= 1 && files.length > maxFiles) {\r\n    return false;\r\n  }\r\n\r\n  return files.every(function (file) {\r\n    var _fileAccepted = fileAccepted(file, accept),\r\n        _fileAccepted2 = _slicedToArray(_fileAccepted, 1),\r\n        accepted = _fileAccepted2[0];\r\n\r\n    var _fileMatchSize = fileMatchSize(file, minSize, maxSize),\r\n        _fileMatchSize2 = _slicedToArray(_fileMatchSize, 1),\r\n        sizeMatch = _fileMatchSize2[0];\r\n\r\n    return accepted && sizeMatch;\r\n  });\r\n} // React's synthetic events has event.isPropagationStopped,\r\n// but to remain compatibility with other libs (Preact) fall back\r\n// to check event.cancelBubble\r\n\r\nexport function isPropagationStopped(event) {\r\n  if (typeof event.isPropagationStopped === \"function\") {\r\n    return event.isPropagationStopped();\r\n  } else if (typeof event.cancelBubble !== \"undefined\") {\r\n    return event.cancelBubble;\r\n  }\r\n\r\n  return false;\r\n}\r\nexport function isEvtWithFiles(event) {\r\n  if (!event.dataTransfer) {\r\n    return !!event.target && !!event.target.files;\r\n  } // https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/types\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#file\r\n\r\n\r\n  return Array.prototype.some.call(event.dataTransfer.types, function (type) {\r\n    return type === \"Files\" || type === \"application/x-moz-file\";\r\n  });\r\n}\r\nexport function isKindFile(item) {\r\n  return _typeof(item) === \"object\" && item !== null && item.kind === \"file\";\r\n} // allow the entire document to be a drag target\r\n\r\nexport function onDocumentDragOver(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nfunction isIe(userAgent) {\r\n  return userAgent.indexOf(\"MSIE\") !== -1 || userAgent.indexOf(\"Trident/\") !== -1;\r\n}\r\n\r\nfunction isEdge(userAgent) {\r\n  return userAgent.indexOf(\"Edge/\") !== -1;\r\n}\r\n\r\nexport function isIeOrEdge() {\r\n  var userAgent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.navigator.userAgent;\r\n  return isIe(userAgent) || isEdge(userAgent);\r\n}\r\n/**\r\n * This is intended to be used to compose event handlers\r\n * They are executed in order until one of them calls `event.isPropagationStopped()`.\r\n * Note that the check is done on the first invoke too,\r\n * meaning that if propagation was stopped before invoking the fns,\r\n * no handlers will be executed.\r\n *\r\n * @param {Function} fns the event hanlder functions\r\n * @return {Function} the event handler to add to an element\r\n */\r\n\r\nexport function composeEventHandlers() {\r\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\r\n    fns[_key] = arguments[_key];\r\n  }\r\n\r\n  return function (event) {\r\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\r\n      args[_key2 - 1] = arguments[_key2];\r\n    }\r\n\r\n    return fns.some(function (fn) {\r\n      if (!isPropagationStopped(event) && fn) {\r\n        fn.apply(void 0, [event].concat(args));\r\n      }\r\n\r\n      return isPropagationStopped(event);\r\n    });\r\n  };\r\n}\r\n/**\r\n * canUseFileSystemAccessAPI checks if the [File System Access API](https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API)\r\n * is supported by the browser.\r\n * @returns {boolean}\r\n */\r\n\r\nexport function canUseFileSystemAccessAPI() {\r\n  return \"showOpenFilePicker\" in window;\r\n}\r\n/**\r\n * filePickerOptionsTypes returns the {types} option for https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker\r\n * based on the accept attr (see https://github.com/react-dropzone/attr-accept)\r\n * E.g: converts ['image/*', 'text/*'] to {'image/*': [], 'text/*': []}\r\n * @param {string|string[]} accept\r\n */\r\n\r\nexport function filePickerOptionsTypes(accept) {\r\n  accept = typeof accept === \"string\" ? accept.split(\",\") : accept;\r\n  return [{\r\n    description: \"everything\",\r\n    // TODO: Need to handle filtering more elegantly than this!\r\n    accept: Array.isArray(accept) ? // Accept just MIME types as per spec\r\n    // NOTE: accept can be https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#unique_file_type_specifiers\r\n    accept.filter(function (item) {\r\n      return item === \"audio/*\" || item === \"video/*\" || item === \"image/*\" || item === \"text/*\" || /\\w+\\/[-+.\\w]+/g.test(item);\r\n    }).reduce(function (a, b) {\r\n      return _objectSpread(_objectSpread({}, a), {}, _defineProperty({}, b, []));\r\n    }, {}) : {}\r\n  }];\r\n}\r\n/**\r\n * Check if v is an exception caused by aborting a request (e.g window.showOpenFilePicker()).\r\n *\r\n * See https://developer.mozilla.org/en-US/docs/Web/API/DOMException.\r\n * @param {any} v\r\n * @returns {boolean} True if v is an abort exception.\r\n */\r\n\r\nexport function isAbort(v) {\r\n  return v instanceof DOMException && (v.name === \"AbortError\" || v.code === v.ABORT_ERR);\r\n}\r\n/**\r\n * Check if v is a security error.\r\n *\r\n * See https://developer.mozilla.org/en-US/docs/Web/API/DOMException.\r\n * @param {any} v\r\n * @returns {boolean} True if v is a security error.\r\n */\r\n\r\nexport function isSecurityError(v) {\r\n  return v instanceof DOMException && (v.name === \"SecurityError\" || v.code === v.SECURITY_ERR);\r\n}", "import * as React from 'react';\r\nimport { FC, ReactNode, useEffect } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport RemoveCircle from '@mui/icons-material/RemoveCircle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { useTranslate } from 'ra-core';\r\nimport { SvgIconProps } from '@mui/material';\r\n\r\nexport const FileInputPreview = (props: FileInputPreviewProps) => {\r\n    const {\r\n        children,\r\n        className,\r\n        onRemove,\r\n        file,\r\n        removeIcon: RemoveIcon = RemoveCircle,\r\n        ...rest\r\n    } = props;\r\n\r\n    const translate = useTranslate();\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            const preview = file.rawFile ? file.rawFile.preview : file.preview;\r\n\r\n            if (preview) {\r\n                window.URL.revokeObjectURL(preview);\r\n            }\r\n        };\r\n    }, [file]);\r\n\r\n    return (\r\n        <Root className={className} {...rest}>\r\n            <IconButton\r\n                className={FileInputPreviewClasses.removeButton}\r\n                onClick={onRemove}\r\n                aria-label={translate('ra.action.delete')}\r\n                title={translate('ra.action.delete')}\r\n                size=\"small\"\r\n            >\r\n                <RemoveIcon className={FileInputPreviewClasses.removeIcon} />\r\n            </IconButton>\r\n            {children}\r\n        </Root>\r\n    );\r\n};\r\n\r\nFileInputPreview.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    className: PropTypes.string,\r\n    file: PropTypes.object,\r\n    onRemove: PropTypes.func.isRequired,\r\n    removeIcon: PropTypes.element,\r\n};\r\n\r\nconst PREFIX = 'RaFileInputPreview';\r\n\r\nconst FileInputPreviewClasses = {\r\n    removeButton: `${PREFIX}-removeButton`,\r\n    removeIcon: `${PREFIX}-removeIcon`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    [`& .${FileInputPreviewClasses.removeButton}`]: {},\r\n\r\n    [`& .${FileInputPreviewClasses.removeIcon}`]: {\r\n        color: theme.palette.error.main,\r\n    },\r\n}));\r\n\r\nexport interface FileInputPreviewProps {\r\n    children: ReactNode;\r\n    className?: string;\r\n    onRemove: () => void;\r\n    file: any;\r\n    removeIcon?: FC<SvgIconProps>;\r\n}\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { FileInput, FileInputProps, FileInputClasses } from './FileInput';\r\n\r\nexport const ImageInput = (props: ImageInputProps) => (\r\n    <StyledFileInput\r\n        labelMultiple=\"ra.input.image.upload_several\"\r\n        labelSingle=\"ra.input.image.upload_single\"\r\n        {...props}\r\n    />\r\n);\r\n\r\nexport type ImageInputProps = FileInputProps;\r\n\r\nconst PREFIX = 'RaImageInput';\r\n\r\nconst StyledFileInput = styled(FileInput, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    width: '100%',\r\n\r\n    [`& .${FileInputClasses.dropZone}`]: {\r\n        background: theme.palette.background.default,\r\n        borderRadius: theme.shape.borderRadius,\r\n        fontFamily: theme.typography.fontFamily,\r\n        cursor: 'pointer',\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.getContrastText(theme.palette.background.default),\r\n    },\r\n    [`& .${FileInputClasses.removeButton}`]: {\r\n        display: 'inline-block',\r\n        position: 'relative',\r\n        '& button': {\r\n            position: 'absolute',\r\n            top: theme.spacing(1),\r\n            right: theme.spacing(1),\r\n            minWidth: theme.spacing(2),\r\n            opacity: 0,\r\n        },\r\n        '&:hover button': {\r\n            opacity: 1,\r\n        },\r\n    },\r\n}));\r\n", "import * as React from 'react';\r\nimport { CircularProgress, InputAdornment } from '@mui/material';\r\nimport { styled, SxProps } from '@mui/material/styles';\r\nimport { useTimeout } from 'ra-core';\r\n\r\nimport { ResettableTextField } from './ResettableTextField';\r\n\r\n/**\r\n * An input placeholder with a loading indicator\r\n *\r\n * Avoids visual jumps when replaced by a form input\r\n */\r\nexport const LoadingInput = ({\r\n    fullWidth,\r\n    label,\r\n    helperText,\r\n    margin,\r\n    size,\r\n    sx,\r\n    timeout = 1000,\r\n    variant,\r\n}: LoadingInputProps) => {\r\n    const oneSecondHasPassed = useTimeout(timeout);\r\n\r\n    return (\r\n        <StyledResettableTextField\r\n            sx={sx}\r\n            label={label}\r\n            helperText={helperText}\r\n            fullWidth={fullWidth}\r\n            variant={variant}\r\n            margin={margin}\r\n            size={size}\r\n            disabled\r\n            onChange={() => {}}\r\n            InputProps={{\r\n                endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                        {oneSecondHasPassed ? (\r\n                            <CircularProgress color=\"inherit\" size={20} />\r\n                        ) : (\r\n                            // use an adornment of the same size to avoid visual jumps\r\n                            <span style={{ width: 20 }}>&nbsp;</span>\r\n                        )}\r\n                    </InputAdornment>\r\n                ),\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nconst PREFIX = 'RaLoadingInput';\r\n\r\n// make it look just like a regular input, even though it's disabled\r\n// because the loading indicator is enough\r\nconst StyledResettableTextField = styled(ResettableTextField, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    '& .MuiInputLabel-root.Mui-disabled': {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    '& .MuiFilledInput-root.Mui-disabled': {\r\n        background:\r\n            theme.palette.mode === 'light'\r\n                ? 'rgba(0, 0, 0, 0.04)'\r\n                : 'rgba(255, 255, 255, 0.09)',\r\n    },\r\n    '& .MuiFilledInput-root.Mui-disabled:before': {\r\n        borderBottomStyle: 'solid',\r\n    },\r\n}));\r\n\r\nexport interface LoadingInputProps {\r\n    fullWidth?: boolean;\r\n    helperText?: React.ReactNode;\r\n    margin?: 'normal' | 'none' | 'dense';\r\n    label?: string | React.ReactElement | false;\r\n    sx?: SxProps;\r\n    size?: 'medium' | 'small';\r\n    timeout?: number;\r\n    variant?: 'standard' | 'filled' | 'outlined';\r\n}\r\n", "import * as React from 'react';\r\nimport { forwardRef, useCallback } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n    InputAdornment,\r\n    IconButton,\r\n    TextField as MuiTextField,\r\n    TextFieldProps,\r\n} from '@mui/material';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport { useTranslate } from 'ra-core';\r\n\r\n/**\r\n * An override of the default Material UI TextField which is resettable\r\n */\r\nexport const ResettableTextField = forwardRef(\r\n    (props: ResettableTextFieldProps, ref) => {\r\n        const {\r\n            clearAlwaysVisible,\r\n            InputProps,\r\n            value,\r\n            resettable,\r\n            disabled,\r\n            variant,\r\n            margin,\r\n            className,\r\n            ...rest\r\n        } = props;\r\n\r\n        const translate = useTranslate();\r\n\r\n        const { onChange, onFocus, onBlur } = props;\r\n        const handleClickClearButton = useCallback(\r\n            event => {\r\n                event.preventDefault();\r\n                onChange('');\r\n            },\r\n            [onChange]\r\n        );\r\n\r\n        const handleFocus = useCallback(\r\n            event => {\r\n                onFocus && onFocus(event);\r\n            },\r\n            [onFocus]\r\n        );\r\n\r\n        const handleBlur = useCallback(\r\n            event => {\r\n                onBlur && onBlur(event);\r\n            },\r\n            [onBlur]\r\n        );\r\n\r\n        const {\r\n            clearButton,\r\n            clearIcon,\r\n            inputAdornedEnd,\r\n            selectAdornment,\r\n            visibleClearIcon,\r\n        } = ResettableTextFieldClasses;\r\n\r\n        const { endAdornment, ...InputPropsWithoutEndAdornment } =\r\n            InputProps || {};\r\n\r\n        if (clearAlwaysVisible && endAdornment) {\r\n            throw new Error(\r\n                'ResettableTextField cannot display both an endAdornment and a clear button always visible'\r\n            );\r\n        }\r\n\r\n        const getEndAdornment = () => {\r\n            if (!resettable) {\r\n                return endAdornment;\r\n            } else if (!value) {\r\n                if (clearAlwaysVisible) {\r\n                    // show clear button, inactive\r\n                    return (\r\n                        <InputAdornment\r\n                            position=\"end\"\r\n                            classes={{\r\n                                root: props.select ? selectAdornment : null,\r\n                            }}\r\n                        >\r\n                            <IconButton\r\n                                className={clearButton}\r\n                                aria-label={translate(\r\n                                    'ra.action.clear_input_value'\r\n                                )}\r\n                                title={translate('ra.action.clear_input_value')}\r\n                                disabled={true}\r\n                                size=\"large\"\r\n                            >\r\n                                <ClearIcon\r\n                                    className={clsx(\r\n                                        clearIcon,\r\n                                        visibleClearIcon\r\n                                    )}\r\n                                />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    );\r\n                } else {\r\n                    if (endAdornment) {\r\n                        return endAdornment;\r\n                    } else {\r\n                        // show spacer\r\n                        return (\r\n                            <InputAdornment\r\n                                position=\"end\"\r\n                                classes={{\r\n                                    root: props.select ? selectAdornment : null,\r\n                                }}\r\n                            >\r\n                                <span className={clearButton}>&nbsp;</span>\r\n                            </InputAdornment>\r\n                        );\r\n                    }\r\n                }\r\n            } else {\r\n                // show clear\r\n                return (\r\n                    <InputAdornment\r\n                        position=\"end\"\r\n                        classes={{\r\n                            root: props.select ? selectAdornment : null,\r\n                        }}\r\n                    >\r\n                        <IconButton\r\n                            className={clearButton}\r\n                            aria-label={translate(\r\n                                'ra.action.clear_input_value'\r\n                            )}\r\n                            title={translate('ra.action.clear_input_value')}\r\n                            onClick={handleClickClearButton}\r\n                            onMouseDown={handleMouseDownClearButton}\r\n                            disabled={disabled}\r\n                            size=\"large\"\r\n                        >\r\n                            <ClearIcon\r\n                                className={clsx(clearIcon, {\r\n                                    [visibleClearIcon]:\r\n                                        clearAlwaysVisible || value,\r\n                                })}\r\n                            />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                );\r\n            }\r\n        };\r\n\r\n        return (\r\n            <StyledTextField\r\n                value={value}\r\n                InputProps={{\r\n                    classes:\r\n                        props.select && variant === 'filled'\r\n                            ? { adornedEnd: inputAdornedEnd }\r\n                            : {},\r\n                    endAdornment: getEndAdornment(),\r\n                    ...InputPropsWithoutEndAdornment,\r\n                }}\r\n                disabled={disabled}\r\n                variant={variant}\r\n                margin={margin}\r\n                className={className}\r\n                size=\"small\"\r\n                {...rest}\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n                inputRef={ref}\r\n            />\r\n        );\r\n    }\r\n);\r\n\r\nResettableTextField.displayName = 'ResettableTextField';\r\n\r\nconst handleMouseDownClearButton = event => {\r\n    event.preventDefault();\r\n};\r\n\r\nResettableTextField.propTypes = {\r\n    clearAlwaysVisible: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    InputProps: PropTypes.object,\r\n    onBlur: PropTypes.func,\r\n    onChange: PropTypes.func.isRequired,\r\n    onFocus: PropTypes.func,\r\n    resettable: PropTypes.bool,\r\n    value: PropTypes.any,\r\n};\r\n\r\ninterface Props {\r\n    clearAlwaysVisible?: boolean;\r\n    resettable?: boolean;\r\n}\r\n\r\nexport type ResettableTextFieldProps = Props &\r\n    Omit<TextFieldProps, 'onChange'> & {\r\n        onChange?: (eventOrValue: any) => void;\r\n    };\r\n\r\nconst PREFIX = 'RaResettableTextField';\r\n\r\nexport const ResettableTextFieldClasses = {\r\n    clearIcon: `${PREFIX}-clearIcon`,\r\n    visibleClearIcon: `${PREFIX}-visibleClearIcon`,\r\n    clearButton: `${PREFIX}-clearButton`,\r\n    selectAdornment: `${PREFIX}-selectAdornment`,\r\n    inputAdornedEnd: `${PREFIX}-inputAdornedEnd`,\r\n};\r\n\r\nexport const ResettableTextFieldStyles = {\r\n    [`& .${ResettableTextFieldClasses.clearIcon}`]: {\r\n        height: 16,\r\n        width: 0,\r\n    },\r\n    [`& .${ResettableTextFieldClasses.visibleClearIcon}`]: {\r\n        width: 16,\r\n    },\r\n    [`& .${ResettableTextFieldClasses.clearButton}`]: {\r\n        height: 24,\r\n        width: 24,\r\n        padding: 0,\r\n    },\r\n    [`& .${ResettableTextFieldClasses.selectAdornment}`]: {\r\n        position: 'absolute',\r\n        right: 24,\r\n    },\r\n    [`& .${ResettableTextFieldClasses.inputAdornedEnd}`]: {\r\n        paddingRight: 0,\r\n    },\r\n};\r\n\r\nconst StyledTextField = styled(MuiTextField, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(ResettableTextFieldStyles);\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport clsx from 'clsx';\r\nimport { useInput, useTranslate, FieldTitle } from 'ra-core';\r\n\r\nimport { CommonInputProps } from './CommonInputProps';\r\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\r\nimport { InputHelperText } from './InputHelperText';\r\n\r\nexport const NullableBooleanInput = (props: NullableBooleanInputProps) => {\r\n    const {\r\n        className,\r\n        format = getStringFromBoolean,\r\n        helperText,\r\n        label,\r\n        margin,\r\n        onBlur,\r\n        onChange,\r\n        parse = getBooleanFromString,\r\n        resource,\r\n        source,\r\n        validate,\r\n        variant,\r\n        nullLabel = 'ra.boolean.null',\r\n        falseLabel = 'ra.boolean.false',\r\n        trueLabel = 'ra.boolean.true',\r\n        ...rest\r\n    } = props;\r\n\r\n    const translate = useTranslate();\r\n\r\n    const {\r\n        field,\r\n        fieldState: { error, invalid, isTouched },\r\n        formState: { isSubmitted },\r\n        id,\r\n        isRequired,\r\n    } = useInput({\r\n        format,\r\n        parse,\r\n        onBlur,\r\n        onChange,\r\n        resource,\r\n        source,\r\n        validate,\r\n        ...rest,\r\n    });\r\n    const renderHelperText =\r\n        helperText !== false || ((isTouched || isSubmitted) && invalid);\r\n    return (\r\n        <StyledTextField\r\n            id={id}\r\n            size=\"small\"\r\n            {...field}\r\n            className={clsx(\r\n                'ra-input',\r\n                `ra-input-${source}`,\r\n                NullableBooleanInputClasses.input,\r\n                className\r\n            )}\r\n            select\r\n            margin={margin}\r\n            label={\r\n                <FieldTitle\r\n                    label={label}\r\n                    source={source}\r\n                    resource={resource}\r\n                    isRequired={isRequired}\r\n                />\r\n            }\r\n            error={(isTouched || isSubmitted) && invalid}\r\n            helperText={\r\n                renderHelperText ? (\r\n                    <InputHelperText\r\n                        touched={isTouched || isSubmitted}\r\n                        error={error?.message}\r\n                        helperText={helperText}\r\n                    />\r\n                ) : null\r\n            }\r\n            variant={variant}\r\n            {...sanitizeInputRestProps(rest)}\r\n        >\r\n            <MenuItem value=\"\">{translate(nullLabel)}</MenuItem>\r\n            <MenuItem value=\"false\">{translate(falseLabel)}</MenuItem>\r\n            <MenuItem value=\"true\">{translate(trueLabel)}</MenuItem>\r\n        </StyledTextField>\r\n    );\r\n};\r\n\r\nNullableBooleanInput.propTypes = {\r\n    label: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.element,\r\n    ]),\r\n    options: PropTypes.object,\r\n    resource: PropTypes.string,\r\n    source: PropTypes.string,\r\n    nullLabel: PropTypes.string,\r\n    falseLabel: PropTypes.string,\r\n    trueLabel: PropTypes.string,\r\n};\r\n\r\nconst PREFIX = 'RaNullableBooleanInput';\r\n\r\nexport const NullableBooleanInputClasses = {\r\n    input: `${PREFIX}-input`,\r\n};\r\n\r\nconst StyledTextField = styled(TextField, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme, fullWidth }) => ({\r\n    [`&.${NullableBooleanInputClasses.input}`]: {\r\n        width: fullWidth ? '100%' : theme.spacing(16),\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n        [`&.${NullableBooleanInputClasses.input}`]: {\r\n            width: '100%',\r\n        },\r\n    },\r\n}));\r\n\r\nconst getBooleanFromString = (value: string): boolean | null => {\r\n    if (value === 'true') return true;\r\n    if (value === 'false') return false;\r\n    return null;\r\n};\r\n\r\nconst getStringFromBoolean = (value?: boolean | null): string => {\r\n    if (value === true) return 'true';\r\n    if (value === false) return 'false';\r\n    return '';\r\n};\r\n\r\nexport type NullableBooleanInputProps = CommonInputProps &\r\n    Omit<TextFieldProps, 'label' | 'helperText'> & {\r\n        nullLabel?: string;\r\n        falseLabel?: string;\r\n        trueLabel?: string;\r\n    };\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\r\nimport { useInput, FieldTitle } from 'ra-core';\r\n\r\nimport { CommonInputProps } from './CommonInputProps';\r\nimport { InputHelperText } from './InputHelperText';\r\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\r\n\r\n/**\r\n * An Input component for a number\r\n *\r\n * @example\r\n * <NumberInput source=\"nb_views\" />\r\n *\r\n * You can customize the `step` props (which defaults to \"any\")\r\n * @example\r\n * <NumberInput source=\"nb_views\" step={1} />\r\n *\r\n */\r\nexport const NumberInput = ({\r\n    className,\r\n    defaultValue = null,\r\n    format = convertNumberToString,\r\n    helperText,\r\n    label,\r\n    margin,\r\n    onChange,\r\n    onBlur,\r\n    onFocus,\r\n    parse,\r\n    resource,\r\n    source,\r\n    step = 'any',\r\n    min,\r\n    max,\r\n    validate,\r\n    variant,\r\n    inputProps: overrideInputProps,\r\n    ...rest\r\n}: NumberInputProps) => {\r\n    const {\r\n        field,\r\n        fieldState: { error, invalid, isTouched },\r\n        formState: { isSubmitted },\r\n        id,\r\n        isRequired,\r\n    } = useInput({\r\n        defaultValue,\r\n        onBlur,\r\n        resource,\r\n        source,\r\n        validate,\r\n        ...rest,\r\n    });\r\n    const { onBlur: onBlurFromField } = field;\r\n\r\n    const inputProps = { ...overrideInputProps, step, min, max };\r\n\r\n    // This is a controlled input that renders directly the string typed by the user.\r\n    // This string is converted to a number on change, and stored in the form state,\r\n    // but that number is not not displayed.\r\n    // This is to allow transitory values like '1.0' that will lead to '1.02'\r\n\r\n    // text typed by the user and displayed in the input, unparsed\r\n    const [value, setValue] = React.useState(format(field.value));\r\n\r\n    const hasFocus = React.useRef(false);\r\n\r\n    // update the input text when the record changes\r\n    React.useEffect(() => {\r\n        if (!hasFocus.current) {\r\n            const stringValue = format(field.value);\r\n            setValue(value => (value !== stringValue ? stringValue : value));\r\n        }\r\n    }, [field.value, format]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    // update the input text when the user types in the input\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (onChange) {\r\n            onChange(event);\r\n        }\r\n        if (\r\n            typeof event.target === 'undefined' ||\r\n            typeof event.target.value === 'undefined'\r\n        ) {\r\n            return;\r\n        }\r\n        const target = event.target;\r\n        setValue(target.value);\r\n        const newValue =\r\n            target.valueAsNumber !== undefined &&\r\n            target.valueAsNumber !== null &&\r\n            !isNaN(target.valueAsNumber)\r\n                ? parse\r\n                    ? parse(target.valueAsNumber)\r\n                    : target.valueAsNumber\r\n                : parse\r\n                ? parse(target.value)\r\n                : convertStringToNumber(target.value);\r\n        field.onChange(newValue);\r\n    };\r\n\r\n    const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => {\r\n        if (onFocus) {\r\n            onFocus(event);\r\n        }\r\n        hasFocus.current = true;\r\n    };\r\n\r\n    const handleBlur = () => {\r\n        if (onBlurFromField) {\r\n            onBlurFromField();\r\n        }\r\n        hasFocus.current = false;\r\n        const stringValue = format(field.value);\r\n        setValue(value => (value !== stringValue ? stringValue : value));\r\n    };\r\n\r\n    const renderHelperText =\r\n        helperText !== false || ((isTouched || isSubmitted) && invalid);\r\n\r\n    return (\r\n        <TextField\r\n            id={id}\r\n            {...field}\r\n            // use the locally controlled state instead of the react-hook-form field state\r\n            value={value}\r\n            onChange={handleChange}\r\n            onFocus={handleFocus}\r\n            onBlur={handleBlur}\r\n            className={clsx('ra-input', `ra-input-${source}`, className)}\r\n            type=\"number\"\r\n            size=\"small\"\r\n            variant={variant}\r\n            error={(isTouched || isSubmitted) && invalid}\r\n            helperText={\r\n                renderHelperText ? (\r\n                    <InputHelperText\r\n                        touched={isTouched || isSubmitted}\r\n                        error={error?.message}\r\n                        helperText={helperText}\r\n                    />\r\n                ) : null\r\n            }\r\n            label={\r\n                <FieldTitle\r\n                    label={label}\r\n                    source={source}\r\n                    resource={resource}\r\n                    isRequired={isRequired}\r\n                />\r\n            }\r\n            margin={margin}\r\n            inputProps={inputProps}\r\n            {...sanitizeInputRestProps(rest)}\r\n        />\r\n    );\r\n};\r\n\r\nNumberInput.propTypes = {\r\n    label: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.element,\r\n    ]),\r\n    resource: PropTypes.string,\r\n    source: PropTypes.string,\r\n    step: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nNumberInput.defaultProps = {\r\n    step: 'any',\r\n    textAlign: 'right',\r\n};\r\n\r\nexport interface NumberInputProps\r\n    extends CommonInputProps,\r\n        Omit<\r\n            TextFieldProps,\r\n            | 'label'\r\n            | 'helperText'\r\n            | 'defaultValue'\r\n            | 'onChange'\r\n            | 'onBlur'\r\n            | 'type'\r\n        > {\r\n    step?: string | number;\r\n    min?: string | number;\r\n    max?: string | number;\r\n}\r\n\r\nconst convertStringToNumber = value => {\r\n    if (value == null || value === '') {\r\n        return null;\r\n    }\r\n    const float = parseFloat(value);\r\n\r\n    return isNaN(float) ? 0 : float;\r\n};\r\n\r\nconst convertNumberToString = value =>\r\n    value == null || isNaN(value) ? '' : value.toString();\r\n", "import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { useTranslate } from 'ra-core';\r\nimport { InputAdornment, IconButton } from '@mui/material';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nimport { TextInput, TextInputProps } from './TextInput';\r\n\r\nexport const PasswordInput = (props: PasswordInputProps) => {\r\n    const { initiallyVisible = false, ...rest } = props;\r\n    const [visible, setVisible] = useState(initiallyVisible);\r\n    const translate = useTranslate();\r\n\r\n    const handleClick = () => {\r\n        setVisible(!visible);\r\n    };\r\n\r\n    return (\r\n        <TextInput\r\n            type={visible ? 'text' : 'password'}\r\n            size=\"small\"\r\n            InputProps={{\r\n                endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                            aria-label={translate(\r\n                                visible\r\n                                    ? 'ra.input.password.toggle_visible'\r\n                                    : 'ra.input.password.toggle_hidden'\r\n                            )}\r\n                            onClick={handleClick}\r\n                            size=\"large\"\r\n                        >\r\n                            {visible ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                ),\r\n            }}\r\n            {...rest}\r\n        />\r\n    );\r\n};\r\n\r\nexport interface PasswordInputProps extends TextInputProps {\r\n    initiallyVisible?: boolean;\r\n}\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { useInput, FieldTitle } from 'ra-core';\r\n\r\nimport { CommonInputProps } from './CommonInputProps';\r\nimport {\r\n    ResettableTextField,\r\n    ResettableTextFieldProps,\r\n} from './ResettableTextField';\r\nimport { InputHelperText } from './InputHelperText';\r\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\r\n\r\n/**\r\n * An Input component for a string\r\n *\r\n * @example\r\n * <TextInput source=\"first_name\" />\r\n *\r\n * You can customize the `type` props (which defaults to \"text\").\r\n * Note that, due to a React bug, you should use `<NumberField>` instead of using type=\"number\".\r\n * @example\r\n * <TextInput source=\"email\" type=\"email\" />\r\n * <NumberInput source=\"nb_views\" />\r\n *\r\n */\r\nexport const TextInput = (props: TextInputProps) => {\r\n    const {\r\n        className,\r\n        defaultValue,\r\n        label,\r\n        format,\r\n        helperText,\r\n        onBlur,\r\n        onChange,\r\n        parse,\r\n        resource,\r\n        source,\r\n        validate,\r\n        ...rest\r\n    } = props;\r\n    const {\r\n        field,\r\n        fieldState: { error, invalid, isTouched },\r\n        formState: { isSubmitted },\r\n        id,\r\n        isRequired,\r\n    } = useInput({\r\n        defaultValue,\r\n        format,\r\n        parse,\r\n        resource,\r\n        source,\r\n        type: 'text',\r\n        validate,\r\n        onBlur,\r\n        onChange,\r\n        ...rest,\r\n    });\r\n\r\n    const renderHelperText =\r\n        helperText !== false || ((isTouched || isSubmitted) && invalid);\r\n\r\n    return (\r\n        <ResettableTextField\r\n            id={id}\r\n            {...field}\r\n            className={clsx('ra-input', `ra-input-${source}`, className)}\r\n            label={\r\n                label !== '' && label !== false ? (\r\n                    <FieldTitle\r\n                        label={label}\r\n                        source={source}\r\n                        resource={resource}\r\n                        isRequired={isRequired}\r\n                    />\r\n                ) : null\r\n            }\r\n            error={(isTouched || isSubmitted) && invalid}\r\n            helperText={\r\n                renderHelperText ? (\r\n                    <InputHelperText\r\n                        touched={isTouched || isSubmitted}\r\n                        error={error?.message}\r\n                        helperText={helperText}\r\n                    />\r\n                ) : null\r\n            }\r\n            {...sanitizeInputRestProps(rest)}\r\n        />\r\n    );\r\n};\r\n\r\nTextInput.propTypes = {\r\n    className: PropTypes.string,\r\n    label: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.element,\r\n    ]),\r\n    resource: PropTypes.string,\r\n    source: PropTypes.string,\r\n};\r\n\r\nexport type TextInputProps = CommonInputProps &\r\n    Omit<ResettableTextFieldProps, 'label' | 'helperText'>;\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n    FormControl,\r\n    FormHelperText,\r\n    FormLabel,\r\n    RadioGroup,\r\n} from '@mui/material';\r\nimport { RadioGroupProps } from '@mui/material/RadioGroup';\r\nimport { FormControlProps } from '@mui/material/FormControl';\r\nimport get from 'lodash/get';\r\nimport { useInput, FieldTitle, ChoicesProps, useChoicesContext } from 'ra-core';\r\n\r\nimport { CommonInputProps } from './CommonInputProps';\r\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\r\nimport { InputHelperText } from './InputHelperText';\r\nimport { RadioButtonGroupInputItem } from './RadioButtonGroupInputItem';\r\nimport { Labeled } from '../Labeled';\r\nimport { LinearProgress } from '../layout';\r\n\r\n/**\r\n * An Input component for a radio button group, using an array of objects for the options\r\n *\r\n * Pass possible options as an array of objects in the 'choices' attribute.\r\n *\r\n * By default, the options are built from:\r\n *  - the 'id' property as the option value,\r\n *  - the 'name' property as the option text\r\n * @example\r\n * const choices = [\r\n *    { id: 'M', name: 'Male' },\r\n *    { id: 'F', name: 'Female' },\r\n * ];\r\n * <RadioButtonGroupInput source=\"gender\" choices={choices} />\r\n *\r\n * You can also customize the properties to use for the option name and value,\r\n * thanks to the 'optionText' and 'optionValue' attributes.\r\n * @example\r\n * const choices = [\r\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\r\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\r\n * ];\r\n * <RadioButtonGroupInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\r\n *\r\n * `optionText` also accepts a function, so you can shape the option text at will:\r\n * @example\r\n * const choices = [\r\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\r\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\r\n * ];\r\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\r\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText={optionRenderer} />\r\n *\r\n * `optionText` also accepts a React Element, that can access\r\n * the related choice through the `useRecordContext` hook. You can use Field components there.\r\n * @example\r\n * const choices = [\r\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\r\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\r\n * ];\r\n * const FullNameField = () => {\r\n *     const record = useRecordContext();\r\n *     return (<span>{record.first_name} {record.last_name}</span>)\r\n * };\r\n * <RadioButtonGroupInput source=\"recipients\" choices={choices} optionText={<FullNameField />}/>\r\n *\r\n * The choices are translated by default, so you can use translation identifiers as choices:\r\n * @example\r\n * const choices = [\r\n *    { id: 'M', name: 'myroot.gender.male' },\r\n *    { id: 'F', name: 'myroot.gender.female' },\r\n * ];\r\n *\r\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\r\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\r\n * @example\r\n * <RadioButtonGroupInput source=\"gender\" choices={choices} translateChoice={false}/>\r\n *\r\n * The object passed as `options` props is passed to the Material UI <RadioButtonGroup> component\r\n */\r\nexport const RadioButtonGroupInput = (props: RadioButtonGroupInputProps) => {\r\n    const {\r\n        choices: choicesProp,\r\n        className,\r\n        format,\r\n        helperText,\r\n        isFetching: isFetchingProp,\r\n        isLoading: isLoadingProp,\r\n        label,\r\n        margin = 'dense',\r\n        onBlur,\r\n        onChange,\r\n        options = defaultOptions,\r\n        optionText = 'name',\r\n        optionValue = 'id',\r\n        parse,\r\n        resource: resourceProp,\r\n        row = true,\r\n        source: sourceProp,\r\n        translateChoice,\r\n        validate,\r\n        ...rest\r\n    } = props;\r\n\r\n    const {\r\n        allChoices,\r\n        isLoading,\r\n        error: fetchError,\r\n        resource,\r\n        source,\r\n        isFromReference,\r\n    } = useChoicesContext({\r\n        choices: choicesProp,\r\n        isFetching: isFetchingProp,\r\n        isLoading: isLoadingProp,\r\n        resource: resourceProp,\r\n        source: sourceProp,\r\n    });\r\n\r\n    if (source === undefined) {\r\n        throw new Error(\r\n            `If you're not wrapping the RadioButtonGroupInput inside a ReferenceArrayInput, you must provide the source prop`\r\n        );\r\n    }\r\n\r\n    if (!isLoading && !fetchError && allChoices === undefined) {\r\n        throw new Error(\r\n            `If you're not wrapping the RadioButtonGroupInput inside a ReferenceArrayInput, you must provide the choices prop`\r\n        );\r\n    }\r\n\r\n    const { id, isRequired, fieldState, field, formState } = useInput({\r\n        format,\r\n        onBlur,\r\n        onChange,\r\n        parse,\r\n        resource,\r\n        source,\r\n        validate,\r\n        ...rest,\r\n    });\r\n\r\n    const { error, invalid, isTouched } = fieldState;\r\n    const { isSubmitted } = formState;\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Labeled\r\n                htmlFor={id}\r\n                label={label}\r\n                source={source}\r\n                resource={resource}\r\n                className={clsx('ra-input', `ra-input-${source}`, className)}\r\n                isRequired={isRequired}\r\n            >\r\n                <LinearProgress />\r\n            </Labeled>\r\n        );\r\n    }\r\n\r\n    const renderHelperText =\r\n        !!fetchError ||\r\n        helperText !== false ||\r\n        ((isTouched || isSubmitted) && invalid);\r\n\r\n    return (\r\n        <StyledFormControl\r\n            component=\"fieldset\"\r\n            className={clsx('ra-input', `ra-input-${source}`, className)}\r\n            margin={margin}\r\n            error={fetchError || ((isTouched || isSubmitted) && invalid)}\r\n            {...sanitizeRestProps(rest)}\r\n        >\r\n            <FormLabel\r\n                component=\"legend\"\r\n                className={RadioButtonGroupInputClasses.label}\r\n            >\r\n                <FieldTitle\r\n                    label={label}\r\n                    source={source}\r\n                    resource={resource}\r\n                    isRequired={isRequired}\r\n                />\r\n            </FormLabel>\r\n\r\n            <RadioGroup\r\n                id={id}\r\n                row={row}\r\n                {...field}\r\n                {...options}\r\n                {...sanitizeRestProps(rest)}\r\n            >\r\n                {allChoices?.map(choice => (\r\n                    <RadioButtonGroupInputItem\r\n                        key={get(choice, optionValue)}\r\n                        choice={choice}\r\n                        optionText={optionText}\r\n                        optionValue={optionValue}\r\n                        source={id}\r\n                        translateChoice={translateChoice ?? !isFromReference}\r\n                    />\r\n                ))}\r\n            </RadioGroup>\r\n            {renderHelperText ? (\r\n                <FormHelperText>\r\n                    <InputHelperText\r\n                        touched={isTouched || isSubmitted || fetchError}\r\n                        error={error?.message || fetchError?.message}\r\n                        helperText={helperText}\r\n                    />\r\n                </FormHelperText>\r\n            ) : null}\r\n        </StyledFormControl>\r\n    );\r\n};\r\n\r\nRadioButtonGroupInput.propTypes = {\r\n    choices: PropTypes.arrayOf(PropTypes.any),\r\n    label: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.element,\r\n    ]),\r\n    options: PropTypes.object,\r\n    optionText: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.func,\r\n        PropTypes.element,\r\n    ]),\r\n    optionValue: PropTypes.string,\r\n    resource: PropTypes.string,\r\n    source: PropTypes.string,\r\n    translateChoice: PropTypes.bool,\r\n};\r\n\r\nconst sanitizeRestProps = ({\r\n    afterSubmit,\r\n    allowNull,\r\n    beforeSubmit,\r\n    choices,\r\n    className,\r\n    crudGetMatching,\r\n    crudGetOne,\r\n    data,\r\n    filter,\r\n    filterToQuery,\r\n    formatOnBlur,\r\n    isEqual,\r\n    limitChoicesToValue,\r\n    multiple,\r\n    name,\r\n    pagination,\r\n    perPage,\r\n    ref,\r\n    reference,\r\n    refetch,\r\n    render,\r\n    setFilter,\r\n    setPagination,\r\n    setSort,\r\n    sort,\r\n    subscription,\r\n    type,\r\n    validateFields,\r\n    validation,\r\n    value,\r\n    ...rest\r\n}: any) => sanitizeInputRestProps(rest);\r\n\r\nexport type RadioButtonGroupInputProps = Omit<CommonInputProps, 'source'> &\r\n    ChoicesProps &\r\n    FormControlProps &\r\n    RadioGroupProps & {\r\n        options?: RadioGroupProps;\r\n        source?: string;\r\n    };\r\n\r\nconst PREFIX = 'RaRadioButtonGroupInput';\r\n\r\nexport const RadioButtonGroupInputClasses = {\r\n    label: `${PREFIX}-label`,\r\n};\r\n\r\nconst StyledFormControl = styled(FormControl, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    [`& .${RadioButtonGroupInputClasses.label}`]: {\r\n        transform: 'translate(0, 5px) scale(0.75)',\r\n        transformOrigin: `top ${theme.direction === 'ltr' ? 'left' : 'right'}`,\r\n    },\r\n}));\r\n\r\nconst defaultOptions = {};\r\n", "import * as React from 'react';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Radio from '@mui/material/Radio';\r\nimport { useChoices } from 'ra-core';\r\n\r\nexport const RadioButtonGroupInputItem = ({\r\n    choice,\r\n    optionText,\r\n    optionValue,\r\n    source,\r\n    translateChoice,\r\n}) => {\r\n    const { getChoiceText, getChoiceValue } = useChoices({\r\n        optionText,\r\n        optionValue,\r\n        translateChoice,\r\n    });\r\n    const label = getChoiceText(choice);\r\n    const value = getChoiceValue(choice);\r\n\r\n    const nodeId = `${source}_${value}`;\r\n\r\n    return (\r\n        <FormControlLabel\r\n            label={label}\r\n            htmlFor={nodeId}\r\n            value={value}\r\n            control={<Radio id={nodeId} color=\"primary\" />}\r\n        />\r\n    );\r\n};\r\n\r\nexport default RadioButtonGroupInputItem;\r\n", "import * as React from 'react';\r\nimport { ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    InputProps,\r\n    useReferenceArrayInputController,\r\n    ResourceContextProvider,\r\n    ChoicesContextProvider,\r\n    UseReferenceArrayInputParams,\r\n} from 'ra-core';\r\nimport { AutocompleteArrayInput } from './AutocompleteArrayInput';\r\n\r\n/**\r\n * An Input component for fields containing a list of references to another resource.\r\n * Useful for 'hasMany' relationship.\r\n *\r\n * @example\r\n * The post object has many tags, so the post resource looks like:\r\n * {\r\n *    id: 1234,\r\n *    tag_ids: [ \"1\", \"23\", \"4\" ]\r\n * }\r\n *\r\n * ReferenceArrayInput component fetches the current resources (using\r\n * `dataProvider.getMany()`) as well as possible resources (using\r\n * `dataProvider.getList()`) in the reference endpoint. It then\r\n * delegates rendering to its child component, to which it makes the possible\r\n * choices available through the ChoicesContext.\r\n *\r\n * Use it with a selector component as child, like `<SelectArrayInput>`\r\n * or <CheckboxGroupInput>.\r\n *\r\n * @example\r\n * export const PostEdit = (props) => (\r\n *     <Edit {...props}>\r\n *         <SimpleForm>\r\n *             <ReferenceArrayInput source=\"tag_ids\" reference=\"tags\">\r\n *                 <SelectArrayInput optionText=\"name\" />\r\n *             </ReferenceArrayInput>\r\n *         </SimpleForm>\r\n *     </Edit>\r\n * );\r\n *\r\n * By default, restricts the possible values to 25. You can extend this limit\r\n * by setting the `perPage` prop.\r\n *\r\n * @example\r\n * <ReferenceArrayInput\r\n *      source=\"tag_ids\"\r\n *      reference=\"tags\"\r\n *      perPage={100}>\r\n *     <SelectArrayInput optionText=\"name\" />\r\n * </ReferenceArrayInput>\r\n *\r\n * By default, orders the possible values by id desc. You can change this order\r\n * by setting the `sort` prop (an object with `field` and `order` properties).\r\n *\r\n * @example\r\n * <ReferenceArrayInput\r\n *      source=\"tag_ids\"\r\n *      reference=\"tags\"\r\n *      sort={{ field: 'name', order: 'ASC' }}>\r\n *     <SelectArrayInput optionText=\"name\" />\r\n * </ReferenceArrayInput>\r\n *\r\n * Also, you can filter the query used to populate the possible values. Use the\r\n * `filter` prop for that.\r\n *\r\n * @example\r\n * <ReferenceArrayInput\r\n *      source=\"tag_ids\"\r\n *      reference=\"tags\"\r\n *      filter={{ is_public: true }}>\r\n *     <SelectArrayInput optionText=\"name\" />\r\n * </ReferenceArrayInput>\r\n *\r\n * The enclosed component may filter results. ReferenceArrayInput create a ChoicesContext which provides\r\n * a `setFilters` function. You can call this function to filter the results.\r\n */\r\nexport const ReferenceArrayInput = (props: ReferenceArrayInputProps) => {\r\n    const {\r\n        children = defaultChildren,\r\n        reference,\r\n        sort,\r\n        filter = defaultFilter,\r\n    } = props;\r\n    if (React.Children.count(children) !== 1) {\r\n        throw new Error(\r\n            '<ReferenceArrayInput> only accepts a single child (like <Datagrid>)'\r\n        );\r\n    }\r\n\r\n    const controllerProps = useReferenceArrayInputController({\r\n        ...props,\r\n        sort,\r\n        filter,\r\n    });\r\n\r\n    return (\r\n        <ResourceContextProvider value={reference}>\r\n            <ChoicesContextProvider value={controllerProps}>\r\n                {children}\r\n            </ChoicesContextProvider>\r\n        </ResourceContextProvider>\r\n    );\r\n};\r\n\r\nReferenceArrayInput.propTypes = {\r\n    children: PropTypes.element,\r\n    filter: PropTypes.object,\r\n    label: PropTypes.string,\r\n    page: PropTypes.number,\r\n    perPage: PropTypes.number,\r\n    reference: PropTypes.string.isRequired,\r\n    resource: PropTypes.string,\r\n    sort: PropTypes.shape({\r\n        field: PropTypes.string,\r\n        order: PropTypes.oneOf(['ASC', 'DESC']),\r\n    }),\r\n    source: PropTypes.string,\r\n};\r\n\r\nconst defaultChildren = <AutocompleteArrayInput />;\r\nconst defaultFilter = {};\r\n\r\nexport interface ReferenceArrayInputProps\r\n    extends InputProps,\r\n        UseReferenceArrayInputParams {\r\n    children?: ReactElement;\r\n    label?: string;\r\n    [key: string]: any;\r\n}\r\n", "import * as React from 'react';\r\nimport { ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nexport const ReferenceError = ({\r\n    label,\r\n    error,\r\n}: {\r\n    label?: string | ReactElement | false;\r\n    error: Error;\r\n}) => (\r\n    <TextField\r\n        error\r\n        disabled\r\n        label={label}\r\n        helperText={error?.message}\r\n        margin=\"normal\"\r\n    />\r\n);\r\n\r\nReferenceError.propTypes = {\r\n    error: PropTypes.object.isRequired,\r\n    label: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.element,\r\n        PropTypes.bool,\r\n    ]),\r\n};\r\n", "import React, { Children, ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    ChoicesContextProvider,\r\n    useReferenceInputController,\r\n    InputProps,\r\n    ResourceContextProvider,\r\n    UseReferenceInputControllerParams,\r\n} from 'ra-core';\r\n\r\nimport { AutocompleteInput } from './AutocompleteInput';\r\n\r\n/**\r\n * An Input component for choosing a reference record. Useful for foreign keys.\r\n *\r\n * This component fetches the possible values in the reference resource\r\n * (using `dataProvider.getList()`), then renders an `<AutocompleteInput>`,\r\n * to which it passes the possible choices via a `ChoicesContext`.\r\n *\r\n * You can pass a child select component to customize the way the reference\r\n * selector is displayed (e.g. using `<SelectInput>` or `<RadioButtonGroupInput>`\r\n * instead of `<AutocompleteInput>`).\r\n *\r\n * @example // default selector: AutocompleteInput\r\n * export const CommentEdit = (props) => (\r\n *     <Edit {...props}>\r\n *         <SimpleForm>\r\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\" />\r\n *         </SimpleForm>\r\n *     </Edit>\r\n * );\r\n *\r\n * @example // using a SelectInput as selector\r\n * export const CommentEdit = (props) => (\r\n *     <Edit {...props}>\r\n *         <SimpleForm>\r\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\r\n *                 <SelectInput optionText=\"title\" />\r\n *             </ReferenceInput>\r\n *         </SimpleForm>\r\n *     </Edit>\r\n * );\r\n *\r\n * By default, restricts the possible values to 25. You can extend this limit\r\n * by setting the `perPage` prop.\r\n *\r\n * @example\r\n * <ReferenceInput source=\"post_id\" reference=\"posts\" perPage={100}/>\r\n *\r\n * By default, orders the possible values by id desc. You can change this order\r\n * by setting the `sort` prop (an object with `field` and `order` properties).\r\n *\r\n * @example\r\n * <ReferenceInput\r\n *      source=\"post_id\"\r\n *      reference=\"posts\"\r\n *      sort={{ field: 'title', order: 'ASC' }}\r\n * />\r\n *\r\n * Also, you can filter the query used to populate the possible values. Use the\r\n * `filter` prop for that.\r\n *\r\n * @example\r\n * <ReferenceInput\r\n *      source=\"post_id\"\r\n *      reference=\"posts\"\r\n *      filter={{ is_published: true }}\r\n * />\r\n *\r\n * The enclosed component may filter results. ReferenceInput create a ChoicesContext which provides\r\n * a `setFilters` function. You can call this function to filter the results.\r\n */\r\nexport const ReferenceInput = (props: ReferenceInputProps) => {\r\n    const {\r\n        children = defaultChildren,\r\n        reference,\r\n        sort = { field: 'id', order: 'DESC' },\r\n        filter = {},\r\n    } = props;\r\n\r\n    const controllerProps = useReferenceInputController({\r\n        ...props,\r\n        sort,\r\n        filter,\r\n    });\r\n\r\n    if (Children.count(children) !== 1) {\r\n        throw new Error('<ReferenceInput> only accepts a single child');\r\n    }\r\n\r\n    return (\r\n        <ResourceContextProvider value={reference}>\r\n            <ChoicesContextProvider value={controllerProps}>\r\n                {children}\r\n            </ChoicesContextProvider>\r\n        </ResourceContextProvider>\r\n    );\r\n};\r\n\r\nReferenceInput.propTypes = {\r\n    children: PropTypes.element,\r\n    filter: PropTypes.object,\r\n    label: PropTypes.string,\r\n    page: PropTypes.number,\r\n    perPage: PropTypes.number,\r\n    record: PropTypes.object,\r\n    reference: PropTypes.string.isRequired,\r\n    resource: PropTypes.string,\r\n    sort: PropTypes.shape({\r\n        field: PropTypes.string,\r\n        order: PropTypes.oneOf(['ASC', 'DESC']),\r\n    }),\r\n    source: PropTypes.string,\r\n};\r\n\r\nconst defaultChildren = <AutocompleteInput />;\r\n\r\nexport interface ReferenceInputProps\r\n    extends InputProps,\r\n        UseReferenceInputControllerParams {\r\n    children?: ReactElement;\r\n    label?: string;\r\n    [key: string]: any;\r\n}\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { InputAdornment } from '@mui/material';\r\nimport { useTranslate } from 'ra-core';\r\n\r\nimport { CommonInputProps } from './CommonInputProps';\r\nimport { TextInput, TextInputProps } from './TextInput';\r\n\r\nexport const SearchInput = (props: SearchInputProps) => {\r\n    const { label, ...rest } = props;\r\n\r\n    const translate = useTranslate();\r\n\r\n    if (label) {\r\n        throw new Error(\r\n            \"<SearchInput> isn't designed to be used with a label prop. Use <TextInput> if you need a label.\"\r\n        );\r\n    }\r\n\r\n    return (\r\n        <StyledTextInput\r\n            hiddenLabel\r\n            label=\"\"\r\n            resettable\r\n            placeholder={translate('ra.action.search')}\r\n            InputProps={{\r\n                endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                        <SearchIcon color=\"disabled\" />\r\n                    </InputAdornment>\r\n                ),\r\n            }}\r\n            size=\"small\"\r\n            {...rest}\r\n        />\r\n    );\r\n};\r\n\r\nexport type SearchInputProps = CommonInputProps & TextInputProps;\r\n\r\nconst PREFIX = 'RaSearchInput';\r\n\r\nconst StyledTextInput = styled(TextInput, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})({\r\n    marginTop: 0,\r\n});\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useCallback, useRef, ChangeEvent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n    Select,\r\n    SelectProps,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormHelperText,\r\n    FormControl,\r\n    Chip,\r\n    OutlinedInput,\r\n} from '@mui/material';\r\nimport {\r\n    ChoicesProps,\r\n    FieldTitle,\r\n    useInput,\r\n    useChoicesContext,\r\n    useChoices,\r\n    RaRecord,\r\n} from 'ra-core';\r\nimport { InputHelperText } from './InputHelperText';\r\nimport { FormControlProps } from '@mui/material/FormControl';\r\n\r\nimport { LinearProgress } from '../layout';\r\nimport { CommonInputProps } from './CommonInputProps';\r\nimport { Labeled } from '../Labeled';\r\nimport {\r\n    SupportCreateSuggestionOptions,\r\n    useSupportCreateSuggestion,\r\n} from './useSupportCreateSuggestion';\r\n\r\n/**\r\n * An Input component for a select box allowing multiple selections, using an array of objects for the options\r\n *\r\n * Pass possible options as an array of objects in the 'choices' attribute.\r\n *\r\n * By default, the options are built from:\r\n *  - the 'id' property as the option value,\r\n *  - the 'name' property as the option text\r\n * @example\r\n * const choices = [\r\n *    { id: 'programming', name: 'Programming' },\r\n *    { id: 'lifestyle', name: 'Lifestyle' },\r\n *    { id: 'photography', name: 'Photography' },\r\n * ];\r\n * <SelectArrayInput source=\"tags\" choices={choices} />\r\n *\r\n * You can also customize the properties to use for the option name and value,\r\n * thanks to the 'optionText' and 'optionValue' attributes.\r\n * @example\r\n * const choices = [\r\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\r\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\r\n * ];\r\n * <SelectArrayInput source=\"authors\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\r\n *\r\n * `optionText` also accepts a function, so you can shape the option text at will:\r\n * @example\r\n * const choices = [\r\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\r\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\r\n * ];\r\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\r\n * <SelectArrayInput source=\"authors\" choices={choices} optionText={optionRenderer} />\r\n *\r\n * `optionText` also accepts a React Element, that can access\r\n * the related choice through the `useRecordContext` hook. You can use Field components there.\r\n * @example\r\n * const choices = [\r\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\r\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\r\n * ];\r\n * const FullNameField = () => {\r\n *     const record = useRecordContext();\r\n *     return (<span>{record.first_name} {record.last_name}</span>)\r\n * };\r\n * <SelectArrayInput source=\"authors\" choices={choices} optionText={<FullNameField />}/>\r\n *\r\n * The choices are translated by default, so you can use translation identifiers as choices:\r\n * @example\r\n * const choices = [\r\n *    { id: 'programming', name: 'myroot.tags.programming' },\r\n *    { id: 'lifestyle', name: 'myroot.tags.lifestyle' },\r\n *    { id: 'photography', name: 'myroot.tags.photography' },\r\n * ];\r\n */\r\nexport const SelectArrayInput = (props: SelectArrayInputProps) => {\r\n    const {\r\n        choices: choicesProp,\r\n        className,\r\n        create,\r\n        createLabel,\r\n        createValue,\r\n        disableValue = 'disabled',\r\n        format,\r\n        helperText,\r\n        label,\r\n        isFetching: isFetchingProp,\r\n        isLoading: isLoadingProp,\r\n        margin,\r\n        onBlur,\r\n        onChange,\r\n        onCreate,\r\n        options = defaultOptions,\r\n        optionText = 'name',\r\n        optionValue = 'id',\r\n        parse,\r\n        resource: resourceProp,\r\n        size = 'small',\r\n        source: sourceProp,\r\n        translateChoice,\r\n        validate,\r\n        variant,\r\n        ...rest\r\n    } = props;\r\n\r\n    const inputLabel = useRef(null);\r\n\r\n    const {\r\n        allChoices,\r\n        isLoading,\r\n        error: fetchError,\r\n        source,\r\n        resource,\r\n        isFromReference,\r\n    } = useChoicesContext({\r\n        choices: choicesProp,\r\n        isLoading: isLoadingProp,\r\n        isFetching: isFetchingProp,\r\n        resource: resourceProp,\r\n        source: sourceProp,\r\n    });\r\n\r\n    const { getChoiceText, getChoiceValue, getDisableValue } = useChoices({\r\n        optionText,\r\n        optionValue,\r\n        disableValue,\r\n        translateChoice: translateChoice ?? !isFromReference,\r\n    });\r\n\r\n    const {\r\n        field,\r\n        isRequired,\r\n        fieldState: { error, invalid, isTouched },\r\n        formState: { isSubmitted },\r\n        id,\r\n    } = useInput({\r\n        format,\r\n        onBlur,\r\n        onChange,\r\n        parse,\r\n        resource,\r\n        source,\r\n        validate,\r\n        ...rest,\r\n    });\r\n\r\n    const handleChange = useCallback(\r\n        (eventOrChoice: ChangeEvent<HTMLInputElement> | RaRecord) => {\r\n            // We might receive an event from the mui component\r\n            // In this case, it will be the choice id\r\n            if (eventOrChoice?.target) {\r\n                // when used with different IDs types, unselection leads to double selection with both types\r\n                // instead of the value being removed from the array\r\n                // e.g. we receive eventOrChoice.target.value = [1, '2', 2] instead of [1] after removing 2\r\n                // this snippet removes a value if it is present twice\r\n                eventOrChoice.target.value = eventOrChoice.target.value.reduce(\r\n                    (acc, value) => {\r\n                        // eslint-disable-next-line eqeqeq\r\n                        const index = acc.findIndex(v => v == value);\r\n                        return index < 0\r\n                            ? [...acc, value]\r\n                            : [...acc.slice(0, index), ...acc.slice(index + 1)];\r\n                    },\r\n                    []\r\n                );\r\n                field.onChange(eventOrChoice);\r\n            } else {\r\n                // Or we might receive a choice directly, for instance a newly created one\r\n                field.onChange([\r\n                    ...(field.value || []),\r\n                    getChoiceValue(eventOrChoice),\r\n                ]);\r\n            }\r\n        },\r\n        [field, getChoiceValue]\r\n    );\r\n\r\n    const {\r\n        getCreateItem,\r\n        handleChange: handleChangeWithCreateSupport,\r\n        createElement,\r\n    } = useSupportCreateSuggestion({\r\n        create,\r\n        createLabel,\r\n        createValue,\r\n        handleChange,\r\n        onCreate,\r\n        optionText,\r\n    });\r\n\r\n    const createItem = create || onCreate ? getCreateItem() : null;\r\n    const finalChoices =\r\n        create || onCreate\r\n            ? [...(allChoices || []), createItem]\r\n            : allChoices || [];\r\n\r\n    const renderMenuItemOption = useCallback(\r\n        choice =>\r\n            !!createItem &&\r\n            choice?.id === createItem.id &&\r\n            typeof optionText === 'function'\r\n                ? createItem.name\r\n                : getChoiceText(choice),\r\n        [createItem, getChoiceText, optionText]\r\n    );\r\n\r\n    const renderMenuItem = useCallback(\r\n        choice => {\r\n            return choice ? (\r\n                <MenuItem\r\n                    key={getChoiceValue(choice)}\r\n                    value={getChoiceValue(choice)}\r\n                    disabled={getDisableValue(choice)}\r\n                >\r\n                    {renderMenuItemOption(\r\n                        !!createItem && choice?.id === createItem.id\r\n                            ? createItem\r\n                            : choice\r\n                    )}\r\n                </MenuItem>\r\n            ) : null;\r\n        },\r\n        [getChoiceValue, getDisableValue, renderMenuItemOption, createItem]\r\n    );\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Labeled\r\n                label={label}\r\n                source={source}\r\n                resource={resource}\r\n                className={clsx('ra-input', `ra-input-${source}`, className)}\r\n                isRequired={isRequired}\r\n            >\r\n                <LinearProgress />\r\n            </Labeled>\r\n        );\r\n    }\r\n\r\n    // Here wen ensure we always have an array and this array does not contain the default value (empty string)\r\n    const finalValue = Array.isArray(field.value ?? [])\r\n        ? field.value\r\n        : field.value\r\n        ? [field.value]\r\n        : [];\r\n\r\n    const outlinedInputProps =\r\n        variant === 'outlined'\r\n            ? {\r\n                  input: (\r\n                      <OutlinedInput\r\n                          id=\"select-multiple-chip\"\r\n                          label={\r\n                              <FieldTitle\r\n                                  label={label}\r\n                                  source={source}\r\n                                  resource={resource}\r\n                                  isRequired={isRequired}\r\n                              />\r\n                          }\r\n                      />\r\n                  ),\r\n              }\r\n            : {};\r\n    const renderHelperText =\r\n        !!fetchError ||\r\n        helperText !== false ||\r\n        ((isTouched || isSubmitted) && invalid);\r\n\r\n    return (\r\n        <>\r\n            <StyledFormControl\r\n                margin={margin}\r\n                className={clsx('ra-input', `ra-input-${source}`, className)}\r\n                error={fetchError || ((isTouched || isSubmitted) && invalid)}\r\n                variant={variant}\r\n                {...sanitizeRestProps(rest)}\r\n            >\r\n                <InputLabel\r\n                    ref={inputLabel}\r\n                    id={`${id}-outlined-label`}\r\n                    htmlFor={id}\r\n                >\r\n                    <FieldTitle\r\n                        label={label}\r\n                        source={source}\r\n                        resource={resource}\r\n                        isRequired={isRequired}\r\n                    />\r\n                </InputLabel>\r\n                <Select\r\n                    id={id}\r\n                    autoWidth\r\n                    labelId={`${id}-outlined-label`}\r\n                    label={\r\n                        <FieldTitle\r\n                            label={label}\r\n                            source={source}\r\n                            resource={resource}\r\n                            isRequired={isRequired}\r\n                        />\r\n                    }\r\n                    multiple\r\n                    error={\r\n                        !!fetchError || ((isTouched || isSubmitted) && invalid)\r\n                    }\r\n                    renderValue={(selected: any[]) => (\r\n                        <div className={SelectArrayInputClasses.chips}>\r\n                            {(Array.isArray(selected) ? selected : [])\r\n                                .map(item =>\r\n                                    (allChoices || []).find(\r\n                                        // eslint-disable-next-line eqeqeq\r\n                                        choice => getChoiceValue(choice) == item\r\n                                    )\r\n                                )\r\n                                .filter(item => !!item)\r\n                                .map(item => (\r\n                                    <Chip\r\n                                        key={getChoiceValue(item)}\r\n                                        label={renderMenuItemOption(item)}\r\n                                        className={SelectArrayInputClasses.chip}\r\n                                        size=\"small\"\r\n                                    />\r\n                                ))}\r\n                        </div>\r\n                    )}\r\n                    data-testid=\"selectArray\"\r\n                    size={size}\r\n                    {...field}\r\n                    {...options}\r\n                    onChange={handleChangeWithCreateSupport}\r\n                    value={finalValue}\r\n                    {...outlinedInputProps}\r\n                >\r\n                    {finalChoices.map(renderMenuItem)}\r\n                </Select>\r\n                {renderHelperText ? (\r\n                    <FormHelperText\r\n                        error={fetchError || (isTouched && !!error)}\r\n                    >\r\n                        <InputHelperText\r\n                            touched={isTouched || isSubmitted || fetchError}\r\n                            error={error?.message || fetchError?.message}\r\n                            helperText={helperText}\r\n                        />\r\n                    </FormHelperText>\r\n                ) : null}\r\n            </StyledFormControl>\r\n            {createElement}\r\n        </>\r\n    );\r\n};\r\n\r\nexport type SelectArrayInputProps = ChoicesProps &\r\n    Omit<SupportCreateSuggestionOptions, 'handleChange'> &\r\n    Omit<CommonInputProps, 'source'> &\r\n    Omit<FormControlProps, 'defaultValue' | 'onBlur' | 'onChange'> & {\r\n        options?: SelectProps;\r\n        disableValue?: string;\r\n        source?: string;\r\n        onChange?: (event: ChangeEvent<HTMLInputElement> | RaRecord) => void;\r\n    };\r\n\r\nSelectArrayInput.propTypes = {\r\n    choices: PropTypes.arrayOf(PropTypes.object),\r\n    className: PropTypes.string,\r\n    children: PropTypes.node,\r\n    label: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.element,\r\n    ]),\r\n    options: PropTypes.object,\r\n    optionText: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.func,\r\n        PropTypes.element,\r\n    ]),\r\n    optionValue: PropTypes.string,\r\n    disableValue: PropTypes.string,\r\n    resource: PropTypes.string,\r\n    source: PropTypes.string,\r\n    translateChoice: PropTypes.bool,\r\n};\r\n\r\nconst sanitizeRestProps = ({\r\n    alwaysOn,\r\n    choices,\r\n    classNamInputWithOptionsPropse,\r\n    componenInputWithOptionsPropst,\r\n    crudGetMInputWithOptionsPropsatching,\r\n    crudGetOInputWithOptionsPropsne,\r\n    defaultValue,\r\n    disableValue,\r\n    emptyText,\r\n    enableGetChoices,\r\n    filter,\r\n    filterToQuery,\r\n    formClassName,\r\n    initializeForm,\r\n    initialValue,\r\n    input,\r\n    isRequired,\r\n    label,\r\n    limitChoicesToValue,\r\n    loaded,\r\n    locale,\r\n    meta,\r\n    onChange,\r\n    options,\r\n    optionValue,\r\n    optionText,\r\n    perPage,\r\n    record,\r\n    reference,\r\n    resource,\r\n    setFilter,\r\n    setPagination,\r\n    setSort,\r\n    sort,\r\n    source,\r\n    textAlign,\r\n    translate,\r\n    translateChoice,\r\n    validation,\r\n    ...rest\r\n}: any) => rest;\r\n\r\nconst PREFIX = 'RaSelectArrayInput';\r\n\r\nexport const SelectArrayInputClasses = {\r\n    chips: `${PREFIX}-chips`,\r\n    chip: `${PREFIX}-chip`,\r\n};\r\n\r\nconst StyledFormControl = styled(FormControl, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    minWidth: theme.spacing(20),\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: '100%',\r\n    },\r\n    [`& .${SelectArrayInputClasses.chips}`]: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n\r\n    [`& .${SelectArrayInputClasses.chip}`]: {\r\n        marginTop: theme.spacing(0.5),\r\n        marginRight: theme.spacing(0.5),\r\n    },\r\n}));\r\n\r\nconst defaultOptions = {};\r\n", "import * as React from 'react';\r\nimport { ReactElement, useCallback, useEffect, ChangeEvent } from 'react';\r\nimport { isElement } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { MenuItem, TextFieldProps } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n    useChoicesContext,\r\n    useInput,\r\n    FieldTitle,\r\n    useTranslate,\r\n    ChoicesProps,\r\n    useChoices,\r\n    RaRecord,\r\n    useGetRecordRepresentation,\r\n} from 'ra-core';\r\n\r\nimport { CommonInputProps } from './CommonInputProps';\r\nimport {\r\n    ResettableTextField,\r\n    ResettableTextFieldStyles,\r\n} from './ResettableTextField';\r\nimport { InputHelperText } from './InputHelperText';\r\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\r\nimport {\r\n    useSupportCreateSuggestion,\r\n    SupportCreateSuggestionOptions,\r\n} from './useSupportCreateSuggestion';\r\nimport { LoadingInput } from './LoadingInput';\r\n\r\n/**\r\n * An Input component for a select box, using an array of objects for the options\r\n *\r\n * Pass possible options as an array of objects in the 'choices' attribute.\r\n *\r\n * By default, the options are built from:\r\n *  - the 'id' property as the option value,\r\n *  - the 'name' property as the option text\r\n * @example\r\n * const choices = [\r\n *    { id: 'M', name: 'Male' },\r\n *    { id: 'F', name: 'Female' },\r\n * ];\r\n * <SelectInput source=\"gender\" choices={choices} />\r\n *\r\n * You can also customize the properties to use for the option name and value,\r\n * thanks to the 'optionText' and 'optionValue' attributes.\r\n * @example\r\n * const choices = [\r\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\r\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\r\n * ];\r\n * <SelectInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\r\n *\r\n * `optionText` also accepts a function, so you can shape the option text at will:\r\n * @example\r\n * const choices = [\r\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\r\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\r\n * ];\r\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\r\n * <SelectInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\r\n *\r\n * `optionText` also accepts a React Element, that can access\r\n * the related choice through the `useRecordContext` hook. You can use Field components there.\r\n * @example\r\n * const choices = [\r\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\r\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\r\n * ];\r\n * const FullNameField = () => {\r\n *     const record = useRecordContext();\r\n *     return <span>{record.first_name} {record.last_name}</span>;\r\n * }\r\n * <SelectInput source=\"author\" choices={choices} optionText={<FullNameField />}/>\r\n *\r\n * The choices are translated by default, so you can use translation identifiers as choices:\r\n * @example\r\n * const choices = [\r\n *    { id: 'M', name: 'myroot.gender.male' },\r\n *    { id: 'F', name: 'myroot.gender.female' },\r\n * ];\r\n *\r\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\r\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\r\n * @example\r\n * <SelectInput source=\"gender\" choices={choices} translateChoice={false}/>\r\n *\r\n * You can disable some choices by providing a `disableValue` field which name is `disabled` by default\r\n * @example\r\n * const choices = [\r\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\r\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\r\n *    { id: 976, first_name: 'William', last_name: 'Rinkerd', disabled: true },\r\n * ];\r\n *\r\n * @example\r\n * const choices = [\r\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\r\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\r\n *    { id: 976, first_name: 'William', last_name: 'Rinkerd', not_available: true },\r\n * ];\r\n * <SelectInput source=\"gender\" choices={choices} disableValue=\"not_available\" />\r\n *\r\n */\r\nexport const SelectInput = (props: SelectInputProps) => {\r\n    const {\r\n        choices: choicesProp,\r\n        className,\r\n        create,\r\n        createLabel,\r\n        createValue,\r\n        defaultValue,\r\n        disableValue = 'disabled',\r\n        emptyText = '',\r\n        emptyValue = '',\r\n        format,\r\n        filter,\r\n        helperText,\r\n        isFetching: isFetchingProp,\r\n        isLoading: isLoadingProp,\r\n        label,\r\n        margin = 'dense',\r\n        onBlur,\r\n        onChange,\r\n        onCreate,\r\n        optionText,\r\n        optionValue,\r\n        parse,\r\n        resource: resourceProp,\r\n        source: sourceProp,\r\n        translateChoice,\r\n        validate,\r\n        ...rest\r\n    } = props;\r\n    const translate = useTranslate();\r\n\r\n    useEffect(() => {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (emptyValue == null) {\r\n            throw new Error(\r\n                `emptyValue being set to null or undefined is not supported. Use parse to turn the empty string into null.`\r\n            );\r\n        }\r\n    }, [emptyValue]);\r\n\r\n    const {\r\n        allChoices,\r\n        isLoading,\r\n        error: fetchError,\r\n        source,\r\n        resource,\r\n        isFromReference,\r\n    } = useChoicesContext({\r\n        choices: choicesProp,\r\n        isLoading: isLoadingProp,\r\n        isFetching: isFetchingProp,\r\n        resource: resourceProp,\r\n        source: sourceProp,\r\n    });\r\n\r\n    if (source === undefined) {\r\n        throw new Error(\r\n            `If you're not wrapping the SelectInput inside a ReferenceInput, you must provide the source prop`\r\n        );\r\n    }\r\n\r\n    if (!isLoading && !fetchError && allChoices === undefined) {\r\n        throw new Error(\r\n            `If you're not wrapping the SelectInput inside a ReferenceInput, you must provide the choices prop`\r\n        );\r\n    }\r\n\r\n    const getRecordRepresentation = useGetRecordRepresentation(resource);\r\n    const { getChoiceText, getChoiceValue, getDisableValue } = useChoices({\r\n        optionText:\r\n            optionText ??\r\n            (isFromReference ? getRecordRepresentation : undefined),\r\n        optionValue,\r\n        disableValue,\r\n        translateChoice: translateChoice ?? !isFromReference,\r\n    });\r\n    const {\r\n        field,\r\n        fieldState,\r\n        id,\r\n        isRequired,\r\n        formState: { isSubmitted },\r\n    } = useInput({\r\n        defaultValue,\r\n        parse,\r\n        format,\r\n        onBlur,\r\n        onChange,\r\n        resource,\r\n        source,\r\n        validate,\r\n        ...rest,\r\n    });\r\n\r\n    const { error, invalid, isTouched } = fieldState;\r\n\r\n    const renderEmptyItemOption = useCallback(() => {\r\n        return isElement(emptyText)\r\n            ? emptyText\r\n            : emptyText === ''\r\n            ? ' ' // em space, forces the display of an empty line of normal height\r\n            : translate(emptyText, { _: emptyText });\r\n    }, [emptyText, translate]);\r\n\r\n    const renderMenuItemOption = useCallback(choice => getChoiceText(choice), [\r\n        getChoiceText,\r\n    ]);\r\n\r\n    const handleChange = useCallback(\r\n        async (eventOrChoice: ChangeEvent<HTMLInputElement> | RaRecord) => {\r\n            // We might receive an event from the mui component\r\n            // In this case, it will be the choice id\r\n            if (eventOrChoice?.target) {\r\n                field.onChange(eventOrChoice);\r\n            } else {\r\n                // Or we might receive a choice directly, for instance a newly created one\r\n                field.onChange(getChoiceValue(eventOrChoice));\r\n            }\r\n        },\r\n        [field, getChoiceValue]\r\n    );\r\n\r\n    const {\r\n        getCreateItem,\r\n        handleChange: handleChangeWithCreateSupport,\r\n        createElement,\r\n    } = useSupportCreateSuggestion({\r\n        create,\r\n        createLabel,\r\n        createValue,\r\n        handleChange,\r\n        onCreate,\r\n        optionText,\r\n    });\r\n\r\n    const createItem = create || onCreate ? getCreateItem() : null;\r\n    let finalChoices = allChoices;\r\n    if (create || onCreate) {\r\n        finalChoices = [...finalChoices, createItem];\r\n    }\r\n\r\n    const renderMenuItem = useCallback(\r\n        choice => {\r\n            return choice ? (\r\n                <MenuItem\r\n                    key={getChoiceValue(choice)}\r\n                    value={getChoiceValue(choice)}\r\n                    disabled={getDisableValue(choice)}\r\n                >\r\n                    {renderMenuItemOption(\r\n                        !!createItem && choice?.id === createItem.id\r\n                            ? createItem\r\n                            : choice\r\n                    )}\r\n                </MenuItem>\r\n            ) : null;\r\n        },\r\n        [getChoiceValue, getDisableValue, renderMenuItemOption, createItem]\r\n    );\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <LoadingInput\r\n                label={\r\n                    label !== '' &&\r\n                    label !== false && (\r\n                        <FieldTitle\r\n                            label={label}\r\n                            source={source}\r\n                            resource={resourceProp}\r\n                            isRequired={isRequired}\r\n                        />\r\n                    )\r\n                }\r\n                sx={props.sx}\r\n                helperText={\r\n                    <InputHelperText\r\n                        touched={isTouched || isSubmitted}\r\n                        error={error?.message}\r\n                        helperText={helperText}\r\n                    />\r\n                }\r\n                variant={props.variant}\r\n                size={props.size}\r\n                margin={props.margin}\r\n                fullWidth={props.fullWidth}\r\n            />\r\n        );\r\n    }\r\n\r\n    const renderHelperText =\r\n        !!fetchError ||\r\n        helperText !== false ||\r\n        ((isTouched || isSubmitted) && invalid);\r\n\r\n    return (\r\n        <>\r\n            <StyledResettableTextField\r\n                id={id}\r\n                {...field}\r\n                className={clsx('ra-input', `ra-input-${source}`, className)}\r\n                onChange={handleChangeWithCreateSupport}\r\n                select\r\n                label={\r\n                    label !== '' &&\r\n                    label !== false && (\r\n                        <FieldTitle\r\n                            label={label}\r\n                            source={source}\r\n                            resource={resourceProp}\r\n                            isRequired={isRequired}\r\n                        />\r\n                    )\r\n                }\r\n                clearAlwaysVisible\r\n                error={!!fetchError || ((isTouched || isSubmitted) && invalid)}\r\n                helperText={\r\n                    renderHelperText ? (\r\n                        <InputHelperText\r\n                            touched={isTouched || isSubmitted || fetchError}\r\n                            error={error?.message || fetchError?.message}\r\n                            helperText={helperText}\r\n                        />\r\n                    ) : null\r\n                }\r\n                margin={margin}\r\n                {...sanitizeRestProps(rest)}\r\n            >\r\n                {!isRequired && (\r\n                    <MenuItem\r\n                        value={emptyValue}\r\n                        key=\"null\"\r\n                        aria-label={translate('ra.action.clear_input_value')}\r\n                        title={translate('ra.action.clear_input_value')}\r\n                    >\r\n                        {renderEmptyItemOption()}\r\n                    </MenuItem>\r\n                )}\r\n                {finalChoices.map(renderMenuItem)}\r\n            </StyledResettableTextField>\r\n            {createElement}\r\n        </>\r\n    );\r\n};\r\n\r\nSelectInput.propTypes = {\r\n    emptyText: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n    emptyValue: PropTypes.any,\r\n    choices: PropTypes.arrayOf(PropTypes.object),\r\n    className: PropTypes.string,\r\n    label: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.element,\r\n    ]),\r\n    optionText: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.func,\r\n        PropTypes.element,\r\n    ]),\r\n    optionValue: PropTypes.string,\r\n    disableValue: PropTypes.string,\r\n    resettable: PropTypes.bool,\r\n    resource: PropTypes.string,\r\n    source: PropTypes.string,\r\n    translateChoice: PropTypes.bool,\r\n};\r\n\r\nconst sanitizeRestProps = ({\r\n    afterSubmit,\r\n    allowNull,\r\n    beforeSubmit,\r\n    choices,\r\n    className,\r\n    crudGetMatching,\r\n    crudGetOne,\r\n    data,\r\n    field,\r\n    fieldState,\r\n    formState,\r\n    filter,\r\n    filterToQuery,\r\n    formatOnBlur,\r\n    isEqual,\r\n    limitChoicesToValue,\r\n    multiple,\r\n    name,\r\n    pagination,\r\n    perPage,\r\n    ref,\r\n    reference,\r\n    refetch,\r\n    render,\r\n    setFilter,\r\n    setPagination,\r\n    setSort,\r\n    shouldUnregister,\r\n    sort,\r\n    subscription,\r\n    type,\r\n    validateFields,\r\n    validation,\r\n    value,\r\n    ...rest\r\n}: any) => sanitizeInputRestProps(rest);\r\n\r\nconst PREFIX = 'RaSelectInput';\r\n\r\nconst StyledResettableTextField = styled(ResettableTextField, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    ...ResettableTextFieldStyles,\r\n    minWidth: theme.spacing(20),\r\n    '& .MuiFilledInput-root': { paddingRight: 0 },\r\n}));\r\n\r\nexport type SelectInputProps = Omit<CommonInputProps, 'source'> &\r\n    ChoicesProps &\r\n    Omit<SupportCreateSuggestionOptions, 'handleChange'> &\r\n    Omit<TextFieldProps, 'label' | 'helperText' | 'classes' | 'onChange'> & {\r\n        disableValue?: string;\r\n        emptyText?: string | ReactElement;\r\n        emptyValue?: any;\r\n        resettable?: boolean;\r\n        // Source is optional as AutocompleteInput can be used inside a ReferenceInput that already defines the source\r\n        source?: string;\r\n        onChange?: (event: ChangeEvent<HTMLInputElement> | RaRecord) => void;\r\n    };\r\n", "import * as React from 'react';\r\nimport { SxProps, styled } from '@mui/material/styles';\r\nimport { StackProps } from '@mui/material';\r\nimport { ReactElement, ReactNode } from 'react';\r\nimport {\r\n    TranslatableContextProvider,\r\n    useTranslatable,\r\n    UseTranslatableOptions,\r\n} from 'ra-core';\r\nimport clsx from 'clsx';\r\nimport { TranslatableInputsTabs } from './TranslatableInputsTabs';\r\nimport { TranslatableInputsTabContent } from './TranslatableInputsTabContent';\r\n\r\n/**\r\n * Provides a way to edit multiple languages for any input passed as children.\r\n * It expects the translatable values to have the following structure:\r\n * {\r\n *     name: {\r\n *         en: 'The english value',\r\n *         fr: 'The french value',\r\n *         tlh: 'The klingon value',\r\n *     },\r\n *     description: {\r\n *         en: 'The english value',\r\n *         fr: 'The french value',\r\n *         tlh: 'The klingon value',\r\n *     }\r\n * }\r\n *\r\n * @example <caption>Basic usage</caption>\r\n * <TranslatableInputs locales={['en', 'fr']}>\r\n *     <TextInput source=\"title\" />\r\n *     <RichTextInput source=\"description\" />\r\n * </TranslatableInputs>\r\n *\r\n * @example <caption>With a custom language selector</caption>\r\n * <TranslatableInputs\r\n *     selector={<MyLanguageSelector />}\r\n *     locales={['en', 'fr']}\r\n * >\r\n *     <TextInput source=\"title\" />\r\n * </TranslatableInputs>\r\n *\r\n * const MyLanguageSelector = () => {\r\n *     const {\r\n *         locales,\r\n *         selectedLocale,\r\n *         selectLocale,\r\n *     } = useTranslatableContext();\r\n *\r\n *     return (\r\n *         <select onChange={event => selectLocale(event.target.value)}>\r\n *             {locales.map((locale) => (\r\n *                 <option selected={locale === selectedLocale}>\r\n *                     {locale}\r\n *                 </option>\r\n *             ))}\r\n *        </select>\r\n *     );\r\n * }\r\n *\r\n * @param props The component props\r\n * @param {string} props.defaultLocale The locale selected by default. Default to 'en'.\r\n * @param {string[]} props.locales An array of the possible locales. For example: `['en', 'fr'].\r\n * @param {ReactElement} props.selector The element responsible for selecting a locale. Defaults to Material UI tabs.\r\n */\r\nexport const TranslatableInputs = (\r\n    props: TranslatableInputsProps\r\n): ReactElement => {\r\n    const {\r\n        className,\r\n        defaultLocale,\r\n        fullWidth,\r\n        locales,\r\n        groupKey = '',\r\n        selector = <TranslatableInputsTabs groupKey={groupKey} />,\r\n        children,\r\n        margin,\r\n        sx,\r\n        StackProps = {},\r\n    } = props;\r\n    const context = useTranslatable({ defaultLocale, locales });\r\n\r\n    return (\r\n        <Root\r\n            className={clsx(className, TranslatableInputsClasses.root, {\r\n                [TranslatableInputsClasses.fullWidth]: fullWidth,\r\n            })}\r\n            sx={sx}\r\n        >\r\n            <TranslatableContextProvider value={context}>\r\n                {selector}\r\n                {locales.map(locale => (\r\n                    <TranslatableInputsTabContent\r\n                        key={locale}\r\n                        locale={locale}\r\n                        groupKey={groupKey}\r\n                        margin={margin}\r\n                        {...StackProps}\r\n                    >\r\n                        {children}\r\n                    </TranslatableInputsTabContent>\r\n                ))}\r\n            </TranslatableContextProvider>\r\n        </Root>\r\n    );\r\n};\r\n\r\nexport interface TranslatableInputsProps extends UseTranslatableOptions {\r\n    className?: string;\r\n    selector?: ReactElement;\r\n    children: ReactNode;\r\n    fullWidth?: boolean;\r\n    groupKey?: string;\r\n    margin?: 'none' | 'normal' | 'dense';\r\n    sx?: SxProps;\r\n    StackProps?: StackProps;\r\n}\r\n\r\nconst PREFIX = 'RaTranslatableInputs';\r\n\r\nexport const TranslatableInputsClasses = {\r\n    root: `${PREFIX}-root`,\r\n    fullWidth: `${PREFIX}-fullWidth`,\r\n};\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    flexGrow: 1,\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(0.5),\r\n\r\n    [`&.${TranslatableInputsClasses.fullWidth}`]: {\r\n        width: '100%',\r\n    },\r\n}));\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { ReactElement } from 'react';\r\nimport { AppBar, Tabs, TabsProps } from '@mui/material';\r\nimport { useTranslatableContext } from 'ra-core';\r\nimport { TranslatableInputsTab } from './TranslatableInputsTab';\r\nimport { AppBarProps } from '../layout';\r\n\r\n/**\r\n * Default locale selector for the TranslatableInputs component. Generates a tab for each specified locale.\r\n * @see TranslatableInputs\r\n */\r\nexport const TranslatableInputsTabs = (\r\n    props: TranslatableInputsTabsProps & AppBarProps\r\n): ReactElement => {\r\n    const { groupKey, TabsProps: tabsProps } = props;\r\n    const { locales, selectLocale, selectedLocale } = useTranslatableContext();\r\n\r\n    const handleChange = (event, newLocale): void => {\r\n        selectLocale(newLocale);\r\n    };\r\n\r\n    return (\r\n        <StyledAppBar\r\n            color=\"default\"\r\n            position=\"static\"\r\n            className={TranslatableInputsTabsClasses.root}\r\n        >\r\n            <Tabs\r\n                value={selectedLocale}\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                className={TranslatableInputsTabsClasses.tabs}\r\n                {...tabsProps}\r\n            >\r\n                {locales.map(locale => (\r\n                    <TranslatableInputsTab\r\n                        key={locale}\r\n                        value={locale}\r\n                        locale={locale}\r\n                        groupKey={groupKey}\r\n                    />\r\n                ))}\r\n            </Tabs>\r\n        </StyledAppBar>\r\n    );\r\n};\r\n\r\nexport interface TranslatableInputsTabsProps {\r\n    groupKey?: string;\r\n    TabsProps?: TabsProps;\r\n}\r\n\r\nconst PREFIX = 'RaTranslatableInputsTabs';\r\n\r\nexport const TranslatableInputsTabsClasses = {\r\n    root: `${PREFIX}-root`,\r\n    tabs: `${PREFIX}-tabs`,\r\n};\r\n\r\nconst StyledAppBar = styled(AppBar, { name: PREFIX })(({ theme }) => ({\r\n    [`&.${TranslatableInputsTabsClasses.root}`]: {\r\n        boxShadow: 'none',\r\n        borderRadius: 0,\r\n        borderTopLeftRadius: theme.shape.borderRadius,\r\n        borderTopRightRadius: theme.shape.borderRadius,\r\n        border: `1px solid ${theme.palette.divider}`,\r\n    },\r\n\r\n    [`& .${TranslatableInputsTabsClasses.tabs}`]: {\r\n        minHeight: theme.spacing(3),\r\n    },\r\n}));\r\n", "import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Tab, { TabProps } from '@mui/material/Tab';\r\nimport { useFormGroup, useTranslate } from 'ra-core';\r\nimport { capitalize } from 'inflection';\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * Single tab that selects a locale in a TranslatableInputs component.\r\n * @see TranslatableInputs\r\n */\r\nexport const TranslatableInputsTab = (\r\n    props: TranslatableInputsTabProps & TabProps\r\n) => {\r\n    const { groupKey = '', locale, ...rest } = props;\r\n    const { isValid, isTouched } = useFormGroup(`${groupKey}${locale}`);\r\n    const translate = useTranslate();\r\n\r\n    return (\r\n        <StyledTab\r\n            id={`translatable-header-${groupKey}${locale}`}\r\n            label={translate(`ra.locales.${locale}`, {\r\n                _: capitalize(locale),\r\n            })}\r\n            className={clsx(TranslatableInputsTabClasses.root, {\r\n                [TranslatableInputsTabClasses.error]: !isValid && isTouched,\r\n            })}\r\n            {...rest}\r\n        />\r\n    );\r\n};\r\n\r\nexport interface TranslatableInputsTabProps {\r\n    groupKey?: string;\r\n    locale: string;\r\n}\r\n\r\nconst PREFIX = 'RaTranslatableInputsTab';\r\n\r\nexport const TranslatableInputsTabClasses = {\r\n    root: `${PREFIX}-root`,\r\n    error: `${PREFIX}-error`,\r\n};\r\n\r\nconst StyledTab = styled(Tab, { name: PREFIX })(({ theme }) => ({\r\n    [`&.${TranslatableInputsTabClasses.root}`]: {\r\n        fontSize: '0.8em',\r\n        minHeight: theme.spacing(3),\r\n        minWidth: theme.spacing(6),\r\n    },\r\n\r\n    [`&.${TranslatableInputsTabClasses.error}`]: {\r\n        color: theme.palette.error.main,\r\n    },\r\n}));\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Stack, StackProps } from '@mui/material';\r\nimport clsx from 'clsx';\r\nimport {\r\n    Children,\r\n    cloneElement,\r\n    isValidElement,\r\n    ReactElement,\r\n    ReactNode,\r\n} from 'react';\r\nimport {\r\n    FormGroupContextProvider,\r\n    RaRecord,\r\n    useTranslatableContext,\r\n} from 'ra-core';\r\n\r\n/**\r\n * Default container for a group of translatable inputs inside a TranslatableInputs component.\r\n * @see TranslatableInputs\r\n */\r\nexport const TranslatableInputsTabContent = (\r\n    props: TranslatableInputsTabContentProps\r\n): ReactElement => {\r\n    const { children, groupKey = '', locale, ...other } = props;\r\n    const { selectedLocale, getLabel, getSource } = useTranslatableContext();\r\n\r\n    return (\r\n        <FormGroupContextProvider name={`${groupKey}${locale}`}>\r\n            <Root\r\n                role=\"tabpanel\"\r\n                id={`translatable-content-${groupKey}${locale}`}\r\n                aria-labelledby={`translatable-header-${groupKey}${locale}`}\r\n                className={clsx(TranslatableInputsTabContentClasses.root, {\r\n                    [TranslatableInputsTabContentClasses.hidden]:\r\n                        selectedLocale !== locale,\r\n                })}\r\n                {...other}\r\n            >\r\n                {Children.map(children, child =>\r\n                    isValidElement(child)\r\n                        ? cloneElement(child, {\r\n                              ...child.props,\r\n                              label: getLabel(\r\n                                  child.props.source,\r\n                                  child.props.label\r\n                              ),\r\n                              source: getSource(child.props.source, locale),\r\n                          })\r\n                        : null\r\n                )}\r\n            </Root>\r\n        </FormGroupContextProvider>\r\n    );\r\n};\r\n\r\nexport type TranslatableInputsTabContentProps<\r\n    RecordType extends RaRecord | Omit<RaRecord, 'id'> = any\r\n> = StackProps & {\r\n    children: ReactNode;\r\n    groupKey?: string;\r\n    locale: string;\r\n    record?: RecordType;\r\n    resource?: string;\r\n};\r\n\r\nconst PREFIX = 'RaTranslatableInputsTabContent';\r\n\r\nexport const TranslatableInputsTabContentClasses = {\r\n    root: `${PREFIX}-root`,\r\n    hidden: `${PREFIX}-hidden`,\r\n};\r\n\r\nconst Root = styled(Stack, { name: PREFIX })(({ theme }) => ({\r\n    [`&.${TranslatableInputsTabContentClasses.root}`]: {\r\n        flexGrow: 1,\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n        borderRadius: 0,\r\n        borderBottomLeftRadius: theme.shape.borderRadius,\r\n        borderBottomRightRadius: theme.shape.borderRadius,\r\n        border: `1px solid ${theme.palette.divider}`,\r\n        borderTop: 0,\r\n    },\r\n    [`&.${TranslatableInputsTabContentClasses.hidden}`]: {\r\n        display: 'none',\r\n    },\r\n}));\r\n", "import { RaThemeOptions } from './layout/Theme';\r\n\r\nconst defaultThemeInvariants = {\r\n    typography: {\r\n        h6: {\r\n            fontWeight: 400,\r\n        },\r\n    },\r\n    sidebar: {\r\n        width: 240,\r\n        closedWidth: 50,\r\n    },\r\n    components: {\r\n        MuiAutocomplete: {\r\n            variants: [\r\n                {\r\n                    props: {},\r\n                    style: ({ theme }) => ({\r\n                        [theme.breakpoints.down('sm')]: { width: '100%' },\r\n                    }),\r\n                },\r\n            ],\r\n        },\r\n        MuiTextField: {\r\n            defaultProps: {\r\n                variant: 'filled' as const,\r\n                margin: 'dense' as const,\r\n                size: 'small' as const,\r\n            },\r\n            variants: [\r\n                {\r\n                    props: {},\r\n                    style: ({ theme }) => ({\r\n                        [theme.breakpoints.down('sm')]: { width: '100%' },\r\n                    }),\r\n                },\r\n            ],\r\n        },\r\n        MuiFormControl: {\r\n            defaultProps: {\r\n                variant: 'filled' as const,\r\n                margin: 'dense' as const,\r\n                size: 'small' as const,\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport const defaultLightTheme: RaThemeOptions = {\r\n    palette: {\r\n        background: {\r\n            default: '#fafafb',\r\n        },\r\n        secondary: {\r\n            light: '#6ec6ff',\r\n            main: '#2196f3',\r\n            dark: '#0069c0',\r\n            contrastText: '#fff',\r\n        },\r\n    },\r\n    ...defaultThemeInvariants,\r\n    components: {\r\n        ...defaultThemeInvariants.components,\r\n        MuiFilledInput: {\r\n            styleOverrides: {\r\n                root: {\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.04)',\r\n                    '&$disabled': {\r\n                        backgroundColor: 'rgba(0, 0, 0, 0.04)',\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport const defaultDarkTheme: RaThemeOptions = {\r\n    palette: {\r\n        mode: 'dark',\r\n        primary: {\r\n            main: '#90caf9',\r\n        },\r\n        background: {\r\n            default: '#313131',\r\n        },\r\n    },\r\n    ...defaultThemeInvariants,\r\n};\r\n\r\nexport const defaultTheme = defaultLightTheme;\r\n", "import * as React from 'react';\r\nimport { ReactElement, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Identifier, RaRecord, useCheckMinimumRequiredProps } from 'ra-core';\r\n\r\nimport { CreateProps } from '../types';\r\nimport { CreateView } from './CreateView';\r\nimport { CreateBase } from 'ra-core';\r\n\r\n/**\r\n * Page component for the Create view\r\n *\r\n * The `<Create>` component renders the page title and actions.\r\n * It is not responsible for rendering the actual form -\r\n * that's the job of its child component (usually `<SimpleForm>`),\r\n * to which it passes the `record` as prop.\r\n *\r\n * The <Create> component accepts the following props:\r\n *\r\n * - actions\r\n * - aside\r\n * - component\r\n * - mutationOptions\r\n * - title\r\n *\r\n * @example\r\n *\r\n * // in src/posts.js\r\n * import * as React from \"react\";\r\n * import { Create, SimpleForm, TextInput } from 'react-admin';\r\n *\r\n * export const PostCreate = (props) => (\r\n *     <Create {...props}>\r\n *         <SimpleForm>\r\n *             <TextInput source=\"title\" />\r\n *         </SimpleForm>\r\n *     </Create>\r\n * );\r\n *\r\n * // in src/App.js\r\n * import * as React from \"react\";\r\n * import { Admin, Resource } from 'react-admin';\r\n *\r\n * import { PostCreate } from './posts';\r\n *\r\n * const App = () => (\r\n *     <Admin dataProvider={...}>\r\n *         <Resource name=\"posts\" create={PostCreate} />\r\n *     </Admin>\r\n * );\r\n * export default App;\r\n */\r\nexport const Create = <\r\n    RecordType extends Omit<RaRecord, 'id'> = any,\r\n    ResultRecordType extends RaRecord = RecordType & { id: Identifier }\r\n>(\r\n    props: CreateProps<RecordType, Error, ResultRecordType> & {\r\n        children: ReactNode;\r\n    }\r\n): ReactElement => {\r\n    useCheckMinimumRequiredProps('Create', ['children'], props);\r\n    const {\r\n        resource,\r\n        record,\r\n        redirect,\r\n        transform,\r\n        mutationOptions,\r\n        disableAuthentication,\r\n        hasEdit,\r\n        hasShow,\r\n        ...rest\r\n    } = props;\r\n    return (\r\n        <CreateBase<RecordType, ResultRecordType>\r\n            resource={resource}\r\n            record={record}\r\n            redirect={redirect}\r\n            transform={transform}\r\n            mutationOptions={mutationOptions}\r\n            disableAuthentication={disableAuthentication}\r\n            hasEdit={hasEdit}\r\n            hasShow={hasShow}\r\n        >\r\n            <CreateView {...rest} />\r\n        </CreateBase>\r\n    );\r\n};\r\n\r\nCreate.propTypes = {\r\n    actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\r\n    aside: PropTypes.element,\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    disableAuthentication: PropTypes.bool,\r\n    hasEdit: PropTypes.bool,\r\n    hasShow: PropTypes.bool,\r\n    redirect: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.func,\r\n    ]),\r\n    resource: PropTypes.string,\r\n    title: PropTypes.node,\r\n    record: PropTypes.object,\r\n    mutationOptions: PropTypes.object,\r\n    transform: PropTypes.func,\r\n    sx: PropTypes.any,\r\n};\r\n", "import * as React from 'react';\r\nimport { ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { RaRecord, CreateControllerProps, useCreateContext } from 'ra-core';\r\nimport clsx from 'clsx';\r\n\r\nimport { CreateProps } from '../types';\r\nimport { Title } from '../layout';\r\n\r\nexport const CreateView = (props: CreateViewProps) => {\r\n    const {\r\n        actions,\r\n        aside,\r\n        children,\r\n        className,\r\n        component: Content = Card,\r\n        title,\r\n        ...rest\r\n    } = props;\r\n\r\n    const { resource, defaultTitle } = useCreateContext(props);\r\n\r\n    return (\r\n        <Root\r\n            className={clsx('create-page', className)}\r\n            {...sanitizeRestProps(rest)}\r\n        >\r\n            <Title\r\n                title={title}\r\n                defaultTitle={defaultTitle}\r\n                preferenceKey={`${resource}.create.title`}\r\n            />\r\n            {actions}\r\n            <div\r\n                className={clsx(CreateClasses.main, {\r\n                    [CreateClasses.noActions]: !actions,\r\n                })}\r\n            >\r\n                <Content className={CreateClasses.card}>{children}</Content>\r\n                {aside}\r\n            </div>\r\n        </Root>\r\n    );\r\n};\r\n\r\ninterface CreateViewProps<RecordType extends RaRecord = any>\r\n    extends CreateProps<RecordType>,\r\n        Omit<CreateControllerProps<RecordType>, 'resource'> {\r\n    children: ReactNode;\r\n}\r\n\r\nCreateView.propTypes = {\r\n    actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\r\n    aside: PropTypes.element,\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    defaultTitle: PropTypes.any,\r\n    hasList: PropTypes.bool,\r\n    hasShow: PropTypes.bool,\r\n    mutationOptions: PropTypes.object,\r\n    record: PropTypes.object,\r\n    redirect: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.func,\r\n    ]),\r\n    resource: PropTypes.string,\r\n    save: PropTypes.func,\r\n    title: PropTypes.node,\r\n};\r\n\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nconst sanitizeRestProps = ({\r\n    addMiddleware = null,\r\n    defaultTitle = null,\r\n    hasCreate = null,\r\n    hasEdit = null,\r\n    hasList = null,\r\n    hasShow = null,\r\n    history = null,\r\n    isFetching = null,\r\n    isLoading = null,\r\n    location = null,\r\n    match = null,\r\n    mutationOptions = null,\r\n    options = null,\r\n    permissions = null,\r\n    save = null,\r\n    saving = null,\r\n    transform = null,\r\n    removeMiddleware = null,\r\n    ...rest\r\n}) => rest;\r\n/* eslint-enable @typescript-eslint/no-unused-vars */\r\n\r\nconst PREFIX = 'RaCreate';\r\n\r\nexport const CreateClasses = {\r\n    main: `${PREFIX}-main`,\r\n    noActions: `${PREFIX}-noActions`,\r\n    card: `${PREFIX}-card`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    [`& .${CreateClasses.main}`]: {\r\n        display: 'flex',\r\n    },\r\n\r\n    [`& .${CreateClasses.noActions}`]: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginTop: '1em',\r\n        },\r\n    },\r\n\r\n    [`& .${CreateClasses.card}`]: {\r\n        flex: '1 1 auto',\r\n    },\r\n}));\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TopToolbar from '../layout/TopToolbar';\r\nimport { ListButton } from '../button';\r\nimport { useResourceDefinition } from 'ra-core';\r\n\r\n/**\r\n * Action Toolbar for the Create view\r\n *\r\n * Internal component. If you want to add or remove actions for a Create view,\r\n * write your own CreateActions Component. Then, in the <Create> component,\r\n * use it in the `actions` prop to pass a custom component.\r\n *\r\n * @example\r\n *     import Button from '@mui/material/Button';\r\n *     import { TopToolbar, Create, ListButton } from 'react-admin';\r\n *\r\n *     const PostCreateActions = () => (\r\n *         <TopToolbar>\r\n *             <ListButton />\r\n *             // Add your custom actions here //\r\n *             <Button color=\"primary\" onClick={customAction}>Custom Action</Button>\r\n *         </TopToolbar>\r\n *     );\r\n *\r\n *     export const PostCreate = (props) => (\r\n *         <Create actions={<PostCreateActions />} {...props}>\r\n *             ...\r\n *         </Create>\r\n *     );\r\n */\r\nexport const CreateActions = ({ className, ...rest }: CreateActionsProps) => {\r\n    const { hasList } = useResourceDefinition(rest);\r\n    return (\r\n        <TopToolbar className={className} {...sanitizeRestProps(rest)}>\r\n            {hasList && <ListButton />}\r\n        </TopToolbar>\r\n    );\r\n};\r\n\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nconst sanitizeRestProps = ({\r\n    className = null,\r\n    hasList = null,\r\n    resource = null,\r\n    ...rest\r\n}) => rest;\r\n/* eslint-enable @typescript-eslint/no-unused-vars */\r\n\r\nexport interface CreateActionsProps {\r\n    className?: string;\r\n    hasCreate?: boolean;\r\n    hasEdit?: boolean;\r\n    hasList?: boolean;\r\n    hasShow?: boolean;\r\n    resource?: string;\r\n}\r\n\r\nCreateActions.propTypes = {\r\n    className: PropTypes.string,\r\n    hasCreate: PropTypes.bool,\r\n    hasEdit: PropTypes.bool,\r\n    hasShow: PropTypes.bool,\r\n    hasList: PropTypes.bool,\r\n    resource: PropTypes.string,\r\n};\r\n", "import * as React from 'react';\r\nimport { ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useCheckMinimumRequiredProps, RaRecord } from 'ra-core';\r\nimport { EditProps } from '../types';\r\nimport { EditView } from './EditView';\r\nimport { EditBase } from 'ra-core';\r\n\r\n/**\r\n * Page component for the Edit view\r\n *\r\n * The `<Edit>` component renders the page title and actions,\r\n * fetches the record from the data provider.\r\n * It is not responsible for rendering the actual form -\r\n * that's the job of its child component (usually `<SimpleForm>`),\r\n * to which it passes the `record` as prop.\r\n *\r\n * The <Edit> component accepts the following props:\r\n *\r\n * - actions\r\n * - aside\r\n * - component\r\n * - title\r\n * - mutationMode\r\n * - mutationOptions\r\n *\r\n * @example\r\n *\r\n * // in src/posts.js\r\n * import * as React from \"react\";\r\n * import { Edit, SimpleForm, TextInput } from 'react-admin';\r\n *\r\n * export const PostEdit = (props) => (\r\n *     <Edit {...props}>\r\n *         <SimpleForm>\r\n *             <TextInput source=\"title\" />\r\n *         </SimpleForm>\r\n *     </Edit>\r\n * );\r\n *\r\n * // in src/App.js\r\n * import * as React from \"react\";\r\n * import { Admin, Resource } from 'react-admin';\r\n *\r\n * import { PostEdit } from './posts';\r\n *\r\n * const App = () => (\r\n *     <Admin dataProvider={...}>\r\n *         <Resource name=\"posts\" edit={PostEdit} />\r\n *     </Admin>\r\n * );\r\n * export default App;\r\n */\r\nexport const Edit = <RecordType extends RaRecord = any>(\r\n    props: EditProps<RecordType> & { children: ReactNode }\r\n) => {\r\n    useCheckMinimumRequiredProps('Edit', ['children'], props);\r\n    const {\r\n        resource,\r\n        id,\r\n        mutationMode,\r\n        mutationOptions,\r\n        queryOptions,\r\n        redirect,\r\n        transform,\r\n        disableAuthentication,\r\n        ...rest\r\n    } = props;\r\n    return (\r\n        <EditBase\r\n            resource={resource}\r\n            id={id}\r\n            mutationMode={mutationMode}\r\n            mutationOptions={mutationOptions}\r\n            queryOptions={queryOptions}\r\n            redirect={redirect}\r\n            transform={transform}\r\n            disableAuthentication={disableAuthentication}\r\n        >\r\n            <EditView {...rest} />\r\n        </EditBase>\r\n    );\r\n};\r\n\r\nEdit.propTypes = {\r\n    actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\r\n    aside: PropTypes.element,\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    disableAuthentication: PropTypes.bool,\r\n    hasCreate: PropTypes.bool,\r\n    hasEdit: PropTypes.bool,\r\n    hasShow: PropTypes.bool,\r\n    hasList: PropTypes.bool,\r\n    id: PropTypes.any,\r\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\r\n    mutationOptions: PropTypes.object,\r\n    queryOptions: PropTypes.object,\r\n    redirect: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.func,\r\n    ]),\r\n    resource: PropTypes.string,\r\n    title: PropTypes.node,\r\n    transform: PropTypes.func,\r\n    sx: PropTypes.any,\r\n};\r\n", "import * as React from 'react';\r\nimport { ReactNode } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, CardContent } from '@mui/material';\r\nimport clsx from 'clsx';\r\nimport {\r\n    EditControllerProps,\r\n    ComponentPropType,\r\n    useEditContext,\r\n    useResourceDefinition,\r\n} from 'ra-core';\r\n\r\nimport { EditActions as DefaultActions } from './EditActions';\r\nimport { Title } from '../layout';\r\nimport { EditProps } from '../types';\r\n\r\nexport const EditView = (props: EditViewProps) => {\r\n    const {\r\n        actions,\r\n        aside,\r\n        children,\r\n        className,\r\n        component: Content = Card,\r\n        title,\r\n        mutationMode,\r\n        ...rest\r\n    } = props;\r\n\r\n    const { hasShow } = useResourceDefinition();\r\n    const { resource, defaultTitle, record } = useEditContext(props);\r\n\r\n    const finalActions =\r\n        typeof actions === 'undefined' && hasShow ? (\r\n            <DefaultActions />\r\n        ) : (\r\n            actions\r\n        );\r\n    if (!children) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Root\r\n            className={clsx('edit-page', className)}\r\n            {...sanitizeRestProps(rest)}\r\n        >\r\n            <Title\r\n                title={title}\r\n                defaultTitle={defaultTitle}\r\n                preferenceKey={`${resource}.edit.title`}\r\n            />\r\n            {finalActions}\r\n            <div\r\n                className={clsx(EditClasses.main, {\r\n                    [EditClasses.noActions]: !finalActions,\r\n                })}\r\n            >\r\n                <Content className={EditClasses.card}>\r\n                    {record ? children : <CardContent>&nbsp;</CardContent>}\r\n                </Content>\r\n                {aside}\r\n            </div>\r\n        </Root>\r\n    );\r\n};\r\n\r\ninterface EditViewProps\r\n    extends EditProps,\r\n        Omit<EditControllerProps, 'resource'> {\r\n    children: ReactNode;\r\n}\r\n\r\nEditView.propTypes = {\r\n    actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\r\n    aside: PropTypes.element,\r\n    children: PropTypes.element,\r\n    className: PropTypes.string,\r\n    component: ComponentPropType,\r\n    defaultTitle: PropTypes.any,\r\n    hasList: PropTypes.bool,\r\n    hasShow: PropTypes.bool,\r\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\r\n    mutationOptions: PropTypes.object,\r\n    record: PropTypes.object,\r\n    redirect: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.func,\r\n    ]),\r\n    resource: PropTypes.string,\r\n    save: PropTypes.func,\r\n    title: PropTypes.node,\r\n};\r\n\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nconst sanitizeRestProps = ({\r\n    addMiddleware = null,\r\n    defaultTitle = null,\r\n    hasCreate = null,\r\n    hasEdit = null,\r\n    hasList = null,\r\n    hasShow = null,\r\n    history = null,\r\n    id = null,\r\n    isFetching = null,\r\n    isLoading = null,\r\n    location = null,\r\n    match = null,\r\n    options = null,\r\n    queryOptions = null,\r\n    mutationOptions = null,\r\n    permissions = null,\r\n    refetch = null,\r\n    removeMiddleware = null,\r\n    resource = null,\r\n    save = null,\r\n    saving = null,\r\n    transform = null,\r\n    ...rest\r\n}) => rest;\r\n/* eslint-enable @typescript-eslint/no-unused-vars */\r\n\r\nconst PREFIX = 'RaEdit';\r\n\r\nexport const EditClasses = {\r\n    main: `${PREFIX}-main`,\r\n    noActions: `${PREFIX}-noActions`,\r\n    card: `${PREFIX}-card`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})({\r\n    [`& .${EditClasses.main}`]: {\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n    },\r\n    [`& .${EditClasses.noActions}`]: {\r\n        marginTop: '1em',\r\n    },\r\n    [`& .${EditClasses.card}`]: {\r\n        flex: '1 1 auto',\r\n    },\r\n});\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { RaRecord, useEditContext, useResourceDefinition } from 'ra-core';\r\nimport { ShowButton } from '../button';\r\nimport TopToolbar from '../layout/TopToolbar';\r\n\r\n/**\r\n * Action Toolbar for the Edit view\r\n *\r\n * Internal component. If you want to add or remove actions for an Edit view,\r\n * write your own EditActions Component. Then, in the <Edit> component,\r\n * use it in the `actions` prop to pass a custom component.\r\n *\r\n * @example\r\n *     import Button from '@mui/material/Button';\r\n *     import { TopToolbar, EditButton, Edit } from 'react-admin';\r\n *\r\n *     const PostEditActions = () => (\r\n *         <TopToolbar>\r\n *             <EditButton />\r\n *             // Add your custom actions here\r\n *             <Button color=\"primary\" onClick={customAction}>Custom Action</Button>\r\n *         </TopToolbar>\r\n *     );\r\n *\r\n *     export const PostEdit = (props) => (\r\n *         <Edit actions={<PostEditActions />} {...props}>\r\n *             ...\r\n *         </Edit>\r\n *     );\r\n */\r\nexport const EditActions = ({ className, ...rest }: EditActionsProps) => {\r\n    const { record } = useEditContext(rest);\r\n    const { hasShow } = useResourceDefinition(rest);\r\n\r\n    return (\r\n        <TopToolbar className={className} {...sanitizeRestProps(rest)}>\r\n            {hasShow && <ShowButton record={record} />}\r\n        </TopToolbar>\r\n    );\r\n};\r\n\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nconst sanitizeRestProps = ({\r\n    hasCreate = null,\r\n    hasEdit = null,\r\n    hasShow = null,\r\n    hasList = null,\r\n    ...rest\r\n}) => rest;\r\n/* eslint-enable @typescript-eslint/no-unused-vars */\r\n\r\nexport interface EditActionsProps {\r\n    className?: string;\r\n    data?: RaRecord;\r\n    hasCreate?: boolean;\r\n    hasEdit?: boolean;\r\n    hasList?: boolean;\r\n    hasShow?: boolean;\r\n    resource?: string;\r\n}\r\n\r\nEditActions.propTypes = {\r\n    className: PropTypes.string,\r\n    data: PropTypes.object,\r\n    hasCreate: PropTypes.bool,\r\n    hasEdit: PropTypes.bool,\r\n    hasShow: PropTypes.bool,\r\n    hasList: PropTypes.bool,\r\n    resource: PropTypes.string,\r\n};\r\n", "import * as React from 'react';\r\nimport { ReactNode, ReactElement } from 'react';\r\nimport { SimpleForm } from '../form';\r\nimport {\r\n    ArrayInput,\r\n    BooleanInput,\r\n    DateInput,\r\n    NumberInput,\r\n    ReferenceInput,\r\n    ReferenceInputProps,\r\n    ReferenceArrayInput,\r\n    ReferenceArrayInputProps,\r\n    SelectInput,\r\n    SimpleFormIterator,\r\n    TextInput,\r\n} from '../input';\r\nimport { InferredElement, InferredTypeMap, InputProps } from 'ra-core';\r\n\r\nexport const editFieldTypes: InferredTypeMap = {\r\n    form: {\r\n        component: SimpleForm,\r\n        representation: (\r\n            _,\r\n            children: InferredElement[]\r\n        ) => `        <SimpleForm>\r\n${children.map(child => `            ${child.getRepresentation()}`).join('\\n')}\r\n        </SimpleForm>`,\r\n    },\r\n    array: {\r\n        // eslint-disable-next-line react/display-name\r\n        component: ({\r\n            children,\r\n            ...props\r\n        }: { children: ReactNode } & InputProps) => (\r\n            <ArrayInput {...props}>\r\n                <SimpleFormIterator>{children}</SimpleFormIterator>\r\n            </ArrayInput>\r\n        ),\r\n        representation: (props: InputProps, children: InferredElement[]) =>\r\n            `<ArrayInput source=\"${\r\n                props.source\r\n            }\"><SimpleFormIterator>${children\r\n                .map(child => child.getRepresentation())\r\n                .join('\\n')}</SimpleFormIterator></ArrayInput>`,\r\n    },\r\n    boolean: {\r\n        component: BooleanInput,\r\n        representation: (props: InputProps) =>\r\n            `<BooleanInput source=\"${props.source}\" />`,\r\n    },\r\n    date: {\r\n        component: DateInput,\r\n        representation: (props: InputProps) =>\r\n            `<DateInput source=\"${props.source}\" />`,\r\n    },\r\n    email: {\r\n        component: TextInput,\r\n        representation: (props: InputProps) =>\r\n            `<TextInput source=\"${props.source}\" />`,\r\n    },\r\n    id: {\r\n        component: TextInput,\r\n        representation: (props: InputProps) =>\r\n            `<TextInput source=\"${props.source}\" />`,\r\n    },\r\n    number: {\r\n        component: NumberInput,\r\n        representation: (props: InputProps) =>\r\n            `<NumberInput source=\"${props.source}\" />`,\r\n    },\r\n    reference: {\r\n        component: ReferenceInput,\r\n        representation: (props: ReferenceInputProps) =>\r\n            `<ReferenceInput source=\"${props.source}\" reference=\"${props.reference}\" />`,\r\n    },\r\n    referenceArray: {\r\n        component: ReferenceArrayInput,\r\n        representation: (props: ReferenceArrayInputProps) =>\r\n            `<ReferenceArrayInput source=\"${props.source}\" reference=\"${props.reference}\"><TextInput source=\"id\" /></ReferenceArrayInput>`,\r\n    },\r\n    referenceArrayChild: {\r\n        component: (\r\n            props: { children: ReactNode } & InputProps\r\n        ): ReactElement => <SelectInput optionText=\"id\" {...props} />, // eslint-disable-line react/display-name\r\n        representation: () => `<SelectInput optionText=\"id\" />`,\r\n    },\r\n    richText: {\r\n        component: TextInput,\r\n        representation: (props: InputProps) =>\r\n            `<TextInput source=\"${props.source}\" />`,\r\n    },\r\n    string: {\r\n        component: TextInput,\r\n        representation: (props: InputProps) =>\r\n            `<TextInput source=\"${props.source}\" />`,\r\n    },\r\n    url: {\r\n        component: TextInput,\r\n        representation: (props: InputProps) =>\r\n            `<TextInput source=\"${props.source}\" />`,\r\n    },\r\n};\r\n", "import * as React from 'react';\r\nimport {\r\n    Children,\r\n    isValidElement,\r\n    ReactElement,\r\n    ReactNode,\r\n    HtmlHTMLAttributes,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, FormProps, MutationMode, RaRecord } from 'ra-core';\r\nimport get from 'lodash/get';\r\n\r\nimport { TabbedFormView, TabbedFormViewProps } from './TabbedFormView';\r\nimport { useFormRootPath } from './useFormRootPath';\r\nimport { FormTab } from './FormTab';\r\n\r\n/**\r\n * Form layout where inputs are divided by tab, one input per line.\r\n *\r\n * Pass <TabbedForm.Tab> components as children.\r\n *\r\n * @example\r\n *\r\n * import * as React from \"react\";\r\n * import {\r\n *     Edit,\r\n *     TabbedForm,\r\n *     Datagrid,\r\n *     TextField,\r\n *     DateField,\r\n *     TextInput,\r\n *     ReferenceManyField,\r\n *     NumberInput,\r\n *     DateInput,\r\n *     BooleanInput,\r\n *     EditButton\r\n * } from 'react-admin';\r\n *\r\n * export const PostEdit = (props) => (\r\n *     <Edit {...props}>\r\n *         <TabbedForm>\r\n *             <TabbedForm.Tab label=\"summary\">\r\n *                 <TextInput disabled label=\"Id\" source=\"id\" />\r\n *                 <TextInput source=\"title\" validate={required()} />\r\n *                 <TextInput multiline source=\"teaser\" validate={required()} />\r\n *             </TabbedForm.Tab>\r\n *             <TabbedForm.Tab label=\"body\">\r\n *                 <RichTextInput source=\"body\" validate={required()} label={false} />\r\n *             </TabbedForm.Tab>\r\n *             <TabbedForm.Tab label=\"Miscellaneous\">\r\n *                 <TextInput label=\"Password (if protected post)\" source=\"password\" type=\"password\" />\r\n *                 <DateInput label=\"Publication date\" source=\"published_at\" />\r\n *                 <NumberInput source=\"average_note\" validate={[ number(), minValue(0) ]} />\r\n *                 <BooleanInput label=\"Allow comments?\" source=\"commentable\" defaultValue />\r\n *                 <TextInput disabled label=\"Nb views\" source=\"views\" />\r\n *             </TabbedForm.Tab>\r\n *             <TabbedForm.Tab label=\"comments\">\r\n *                 <ReferenceManyField reference=\"comments\" target=\"post_id\" label={false}>\r\n *                     <Datagrid>\r\n *                         <TextField source=\"body\" />\r\n *                         <DateField source=\"created_at\" />\r\n *                         <EditButton />\r\n *                     </Datagrid>\r\n *                 </ReferenceManyField>\r\n *             </TabbedForm.Tab>\r\n *         </TabbedForm>\r\n *     </Edit>\r\n * );\r\n *\r\n * @typedef {Object} Props the props you can use (other props are injected by Create or Edit)\r\n * @prop {ReactElement[]} FormTab elements\r\n * @prop {Object} defaultValues\r\n * @prop {Function} validate\r\n * @prop {ReactElement} toolbar The element displayed at the bottom of the form, containing the SaveButton\r\n *\r\n * @param {Props} props\r\n */\r\nexport const TabbedForm = (props: TabbedFormProps) => {\r\n    const formRootPathname = useFormRootPath();\r\n\r\n    return (\r\n        <Form formRootPathname={formRootPathname} {...props}>\r\n            <TabbedFormView\r\n                formRootPathname={formRootPathname}\r\n                {...sanitizeRestProps(props)}\r\n            />\r\n        </Form>\r\n    );\r\n};\r\n\r\nTabbedForm.Tab = FormTab;\r\n\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nconst sanitizeRestProps = ({\r\n    criteriaMode,\r\n    defaultValues,\r\n    delayError,\r\n    formRootPathname,\r\n    mode,\r\n    noValidate,\r\n    onSubmit,\r\n    record,\r\n    resetOptions,\r\n    resolver,\r\n    reValidateMode,\r\n    sanitizeEmptyValues,\r\n    shouldFocusError,\r\n    shouldUnregister,\r\n    shouldUseNativeValidation,\r\n    validate,\r\n    warnWhenUnsavedChanges,\r\n    ...rest\r\n}: TabbedFormProps) => rest;\r\n/* eslint-enable @typescript-eslint/no-unused-vars */\r\n\r\nTabbedForm.propTypes = {\r\n    children: PropTypes.node,\r\n    defaultValues: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n    formRootPathname: PropTypes.string,\r\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\r\n    // @ts-ignore\r\n    record: PropTypes.object,\r\n    saving: PropTypes.bool,\r\n    validate: PropTypes.func,\r\n};\r\n\r\nexport interface TabbedFormProps\r\n    extends Omit<FormProps, 'render'>,\r\n        Omit<\r\n            HtmlHTMLAttributes<HTMLFormElement>,\r\n            'defaultValue' | 'onSubmit' | 'children'\r\n        >,\r\n        Partial<TabbedFormViewProps> {\r\n    children: ReactNode;\r\n    className?: string;\r\n    defaultValues?: any;\r\n    formRootPathname?: string;\r\n    mutationMode?: MutationMode;\r\n    record?: RaRecord;\r\n    resource?: string;\r\n    syncWithLocation?: boolean;\r\n    tabs?: ReactElement;\r\n    toolbar?: ReactElement | false;\r\n    warnWhenUnsavedChanges?: boolean;\r\n}\r\n\r\nexport const findTabsWithErrors = (children, errors) => {\r\n    console.warn(\r\n        'Deprecated. FormTab now wrap their content inside a FormGroupContextProvider. If you implemented custom forms with tabs, please use the FormGroupContextProvider. See https://marmelab.com/react-admin/EditTutorial.html#grouping-inputs'\r\n    );\r\n\r\n    return Children.toArray(children).reduce((acc: any[], child) => {\r\n        if (!isValidElement(child)) {\r\n            return acc;\r\n        }\r\n\r\n        const inputs = Children.toArray(child.props.children);\r\n\r\n        if (\r\n            inputs.some(\r\n                input =>\r\n                    isValidElement(input) && get(errors, input.props.source)\r\n            )\r\n        ) {\r\n            return [...acc, child.props.label];\r\n        }\r\n\r\n        return acc;\r\n    }, []);\r\n};\r\n", "import * as React from 'react';\r\nimport {\r\n    ChangeEvent,\r\n    Children,\r\n    ComponentType,\r\n    cloneElement,\r\n    isValidElement,\r\n    ReactElement,\r\n    ReactNode,\r\n    useState,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n    Routes,\r\n    Route,\r\n    matchPath,\r\n    useResolvedPath,\r\n    useLocation,\r\n} from 'react-router-dom';\r\nimport { CardContent, Divider, SxProps } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useResourceContext } from 'ra-core';\r\nimport { Toolbar } from './Toolbar';\r\nimport { TabbedFormTabs, getTabbedFormTabFullPath } from './TabbedFormTabs';\r\n\r\nexport const TabbedFormView = (props: TabbedFormViewProps): ReactElement => {\r\n    const {\r\n        children,\r\n        className,\r\n        component: Component = DefaultComponent,\r\n        formRootPathname,\r\n        syncWithLocation = true,\r\n        tabs = DefaultTabs,\r\n        toolbar = DefaultToolbar,\r\n        ...rest\r\n    } = props;\r\n    const location = useLocation();\r\n    const resolvedPath = useResolvedPath('');\r\n    const resource = useResourceContext(props);\r\n    const [tabValue, setTabValue] = useState(0);\r\n\r\n    const handleTabChange = (event: ChangeEvent<{}>, value: any): void => {\r\n        if (!syncWithLocation) {\r\n            setTabValue(value);\r\n        }\r\n    };\r\n\r\n    const renderTabHeaders = () =>\r\n        cloneElement(\r\n            tabs,\r\n            {\r\n                onChange: handleTabChange,\r\n                syncWithLocation,\r\n                url: formRootPathname,\r\n                value: tabValue,\r\n            },\r\n            children\r\n        );\r\n\r\n    return (\r\n        <Root\r\n            className={clsx('tabbed-form', className)}\r\n            {...sanitizeRestProps(rest)}\r\n        >\r\n            {syncWithLocation ? (\r\n                <Routes>\r\n                    <Route path=\"/*\" element={renderTabHeaders()} />\r\n                </Routes>\r\n            ) : (\r\n                renderTabHeaders()\r\n            )}\r\n            <Divider />\r\n            <Component>\r\n                {/* All tabs are rendered (not only the one in focus), to allow validation\r\n                on tabs not in focus. The tabs receive a `hidden` property, which they'll\r\n                use to hide the tab using CSS if it's not the one in focus.\r\n                See https://github.com/marmelab/react-admin/issues/1866 */}\r\n                {Children.map(children, (tab: ReactElement, index) => {\r\n                    if (!tab) {\r\n                        return null;\r\n                    }\r\n                    const tabPath = getTabbedFormTabFullPath(tab, index);\r\n                    const hidden = syncWithLocation\r\n                        ? !matchPath(\r\n                              `${resolvedPath.pathname}/${tabPath}`,\r\n                              location.pathname\r\n                          )\r\n                        : tabValue !== index;\r\n\r\n                    return isValidElement<any>(tab)\r\n                        ? React.cloneElement(tab, {\r\n                              intent: 'content',\r\n                              resource,\r\n                              hidden,\r\n                              value: syncWithLocation ? tabPath : index,\r\n                          })\r\n                        : null;\r\n                })}\r\n            </Component>\r\n            {toolbar !== false ? toolbar : null}\r\n        </Root>\r\n    );\r\n};\r\n\r\nTabbedFormView.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    location: PropTypes.object,\r\n    match: PropTypes.object,\r\n    // @ts-ignore\r\n    resource: PropTypes.string,\r\n    tabs: PropTypes.element,\r\n    toolbar: PropTypes.oneOfType([PropTypes.element, PropTypes.oneOf([false])]),\r\n    validate: PropTypes.func,\r\n    value: PropTypes.number,\r\n};\r\n\r\nconst DefaultTabs = <TabbedFormTabs />;\r\nconst DefaultComponent = ({ children }) => (\r\n    <CardContent>{children}</CardContent>\r\n);\r\nconst DefaultToolbar = <Toolbar />;\r\n\r\nexport interface TabbedFormViewProps {\r\n    children?: ReactNode;\r\n    className?: string;\r\n    component?: ComponentType<any>;\r\n    resource?: string;\r\n    formRootPathname?: string;\r\n    syncWithLocation?: boolean;\r\n    tabs?: ReactElement;\r\n    toolbar?: ReactElement | false;\r\n    sx?: SxProps;\r\n}\r\n\r\nconst PREFIX = 'RaTabbedForm';\r\n\r\nexport const TabbedFormClasses = {\r\n    errorTabButton: `${PREFIX}-errorTabButton`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    [`& .MuiTab-root.${TabbedFormClasses.errorTabButton}`]: {\r\n        color: theme.palette.error.main,\r\n    },\r\n}));\r\n\r\nconst sanitizeRestProps = ({ record, resource, ...rest }: any) => rest;\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Children, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Toolbar as MuiToolbar,\r\n    ToolbarProps as MuiToolbarProps,\r\n    useMediaQuery,\r\n    Theme,\r\n} from '@mui/material';\r\nimport clsx from 'clsx';\r\n\r\nimport { SaveButton, DeleteButton } from '../button';\r\n\r\n/**\r\n * The Toolbar displayed at the bottom of forms.\r\n *\r\n * @example Always enable the <SaveButton />\r\n *\r\n * import * as React from 'react';\r\n * import {\r\n *     Create,\r\n *     DateInput,\r\n *     TextInput,\r\n *     SimpleForm,\r\n *     Toolbar,\r\n *     SaveButton,\r\n *     required,\r\n * } from 'react-admin';\r\n *\r\n * const now = new Date();\r\n * const defaultSort = { field: 'title', order: 'ASC' };\r\n *\r\n * const MyToolbar = props => (\r\n *     <Toolbar {...props} >\r\n *         <SaveButton alwaysEnable />\r\n *     </Toolbar>\r\n * );\r\n *\r\n * const CommentCreate = () => (\r\n *     <Create>\r\n *         <SimpleForm redirect={false} toolbar={<MyToolbar />}>\r\n *             <TextInput\r\n *                 source=\"author.name\"\r\n *                 fullWidth\r\n *             />\r\n *             <DateInput source=\"created_at\" defaultValue={now} />\r\n *             <TextInput source=\"body\" fullWidth={true} multiline={true} />\r\n *         </SimpleForm>\r\n *     </Create>\r\n * );\r\n *\r\n * @typedef {Object} Props the props you can use (other props are injected by the <SimpleForm>)\r\n * @prop {ReactElement[]} children Customize the buttons you want to display in the <Toolbar>.\r\n *\r\n */\r\nexport const Toolbar = (props: ToolbarProps) => {\r\n    const { children, className, resource, ...rest } = props;\r\n\r\n    const isXs = useMediaQuery<Theme>(theme => theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <StyledToolbar\r\n            className={clsx(\r\n                {\r\n                    [ToolbarClasses.mobileToolbar]: isXs,\r\n                    [ToolbarClasses.desktopToolbar]: !isXs,\r\n                },\r\n                className\r\n            )}\r\n            role=\"toolbar\"\r\n            {...rest}\r\n        >\r\n            {Children.count(children) === 0 ? (\r\n                <div className={ToolbarClasses.defaultToolbar}>\r\n                    <SaveButton />\r\n                    <DeleteButton resource={resource} />\r\n                </div>\r\n            ) : (\r\n                children\r\n            )}\r\n        </StyledToolbar>\r\n    );\r\n};\r\n\r\nexport interface ToolbarProps extends Omit<MuiToolbarProps, 'classes'> {\r\n    children?: ReactNode;\r\n    className?: string;\r\n    resource?: string;\r\n}\r\n\r\nToolbar.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n\r\n    resource: PropTypes.string,\r\n};\r\n\r\nconst PREFIX = 'RaToolbar';\r\n\r\nexport const ToolbarClasses = {\r\n    desktopToolbar: `${PREFIX}-desktopToolbar`,\r\n    mobileToolbar: `${PREFIX}-mobileToolbar`,\r\n    defaultToolbar: `${PREFIX}-defaultToolbar`,\r\n};\r\n\r\nconst StyledToolbar = styled(MuiToolbar, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    backgroundColor:\r\n        theme.palette.mode === 'light'\r\n            ? theme.palette.grey[100]\r\n            : theme.palette.grey[900],\r\n\r\n    [`&.${ToolbarClasses.desktopToolbar}`]: {},\r\n\r\n    [`&.${ToolbarClasses.mobileToolbar}`]: {\r\n        position: 'fixed',\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        padding: '16px',\r\n        width: '100%',\r\n        boxSizing: 'border-box',\r\n        flexShrink: 0,\r\n        zIndex: 2,\r\n    },\r\n\r\n    [`& .${ToolbarClasses.defaultToolbar}`]: {\r\n        flex: 1,\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n}));\r\n", "import * as React from 'react';\r\nimport { Children, cloneElement, isValidElement, ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs, { TabsProps } from '@mui/material/Tabs';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport const TabbedFormTabs = (props: TabbedFormTabsProps) => {\r\n    const { children, url, syncWithLocation, value, ...rest } = props;\r\n\r\n    const params = useParams();\r\n\r\n    // params will include eventual parameters from the root pathname and * for the remaining part\r\n    // which should match the tabs paths\r\n    const tabValue = params['*'];\r\n\r\n    return (\r\n        <Tabs\r\n            value={syncWithLocation ? tabValue : value}\r\n            indicatorColor=\"primary\"\r\n            {...rest}\r\n        >\r\n            {Children.map(children, (tab: ReactElement, index) => {\r\n                if (!isValidElement<any>(tab)) return null;\r\n\r\n                // Builds the full tab which is the concatenation of the last matched route in the\r\n                // TabbedShowLayout hierarchy (ex: '/posts/create', '/posts/12', , '/posts/12/show')\r\n                // and the tab path.\r\n                // This will be used as the Tab's value\r\n                const tabPath = getTabbedFormTabFullPath(tab, index);\r\n\r\n                return cloneElement(tab, {\r\n                    intent: 'header',\r\n                    value: syncWithLocation ? tabPath : index,\r\n                    syncWithLocation,\r\n                });\r\n            })}\r\n        </Tabs>\r\n    );\r\n};\r\n\r\nTabbedFormTabs.propTypes = {\r\n    children: PropTypes.node,\r\n    url: PropTypes.string,\r\n    tabsWithErrors: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nexport const getTabbedFormTabFullPath = (\r\n    tab: ReactElement,\r\n    index: number\r\n): string =>\r\n    tab.props.path != null ? tab.props.path : index > 0 ? index.toString() : '';\r\n\r\nexport interface TabbedFormTabsProps extends TabsProps {\r\n    url?: string;\r\n    tabsWithErrors?: string[];\r\n    syncWithLocation?: boolean;\r\n}\r\n", "import { matchPath, useLocation } from 'react-router-dom';\r\n\r\n/**\r\n * This hook infers the tabbed form root path from the current location.\r\n */\r\nexport const useFormRootPath = () => {\r\n    const location = useLocation();\r\n    const createMatch = matchPath(':resource/create/*', location.pathname);\r\n    const editMatch = matchPath(':resource/:id/*', location.pathname);\r\n\r\n    if (createMatch) {\r\n        return createMatch.pathnameBase;\r\n    }\r\n\r\n    if (editMatch) {\r\n        return editMatch.pathnameBase;\r\n    }\r\n\r\n    return '';\r\n};\r\n", "import * as React from 'react';\r\nimport { ReactElement, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormGroupContextProvider } from 'ra-core';\r\nimport { Stack, StackProps, TabProps as MuiTabProps } from '@mui/material';\r\n\r\nimport { FormTabHeader } from './FormTabHeader';\r\n\r\nexport const FormTab = (props: FormTabProps) => {\r\n    const {\r\n        children,\r\n        className,\r\n        contentClassName,\r\n        count,\r\n        hidden,\r\n        icon,\r\n        intent,\r\n        label,\r\n        onChange,\r\n        path,\r\n        resource,\r\n        syncWithLocation,\r\n        value,\r\n        ...rest\r\n    } = props;\r\n\r\n    const renderHeader = () => (\r\n        <FormTabHeader\r\n            label={label}\r\n            count={count}\r\n            value={value}\r\n            icon={icon}\r\n            className={className}\r\n            syncWithLocation={syncWithLocation}\r\n            onChange={onChange}\r\n            {...sanitizeRestProps(rest)}\r\n        />\r\n    );\r\n\r\n    const renderContent = () => (\r\n        <FormGroupContextProvider name={value.toString()}>\r\n            <Stack\r\n                alignItems=\"flex-start\"\r\n                style={hidden ? hiddenStyle : null}\r\n                className={contentClassName}\r\n                id={`tabpanel-${value}`}\r\n                aria-labelledby={`tabheader-${value}`}\r\n                // Set undefined instead of false because WAI-ARIA Authoring Practices 1.1\r\n                // notes that aria-hidden=\"false\" currently behaves inconsistently across browsers.\r\n                aria-hidden={hidden || undefined}\r\n                {...rest}\r\n            >\r\n                {children}\r\n            </Stack>\r\n        </FormGroupContextProvider>\r\n    );\r\n\r\n    return intent === 'header' ? renderHeader() : renderContent();\r\n};\r\n\r\nFormTab.propTypes = {\r\n    className: PropTypes.string,\r\n    contentClassName: PropTypes.string,\r\n    children: PropTypes.node,\r\n    count: PropTypes.node,\r\n    intent: PropTypes.oneOf(['header', 'content']),\r\n    hidden: PropTypes.bool,\r\n    icon: PropTypes.element,\r\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\r\n        .isRequired,\r\n    path: PropTypes.string,\r\n    // @ts-ignore\r\n    resource: PropTypes.string,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nexport interface FormTabProps\r\n    extends Omit<StackProps, 'color'>,\r\n        Omit<MuiTabProps, 'children' | 'classes' | 'ref'> {\r\n    className?: string;\r\n    children?: ReactNode;\r\n    contentClassName?: string;\r\n    count?: ReactNode;\r\n    hidden?: boolean;\r\n    icon?: ReactElement;\r\n    intent?: 'header' | 'content';\r\n    label: string | ReactElement;\r\n    path?: string;\r\n    resource?: string;\r\n    syncWithLocation?: boolean;\r\n    value?: string | number;\r\n}\r\n\r\nFormTab.displayName = 'FormTab';\r\n\r\nconst hiddenStyle = { display: 'none' };\r\n\r\nconst sanitizeRestProps = ({\r\n    classes,\r\n    ref,\r\n    margin,\r\n    ...rest\r\n}: Omit<\r\n    FormTabProps,\r\n    | 'className'\r\n    | 'contentClassName'\r\n    | 'children'\r\n    | 'hidden'\r\n    | 'icon'\r\n    | 'intent'\r\n    | 'label'\r\n    | 'onChange'\r\n    | 'path'\r\n    | 'resource'\r\n    | 'syncWithLocation'\r\n    | 'value'\r\n>) => rest;\r\n", "import * as React from 'react';\r\nimport { ReactElement, ReactNode } from 'react';\r\nimport { isElement } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Tab as MuiTab, TabProps as MuiTabProps } from '@mui/material';\r\nimport clsx from 'clsx';\r\nimport { useTranslate, useFormGroup } from 'ra-core';\r\nimport { useFormState } from 'react-hook-form';\r\n\r\nimport { TabbedFormClasses } from './TabbedFormView';\r\n\r\nexport const FormTabHeader = ({\r\n    count,\r\n    label,\r\n    value,\r\n    icon,\r\n    className,\r\n    onChange,\r\n    syncWithLocation,\r\n    ...rest\r\n}: FormTabHeaderProps): ReactElement => {\r\n    const translate = useTranslate();\r\n    const location = useLocation();\r\n    const { isSubmitted } = useFormState();\r\n    const formGroup = useFormGroup(value.toString());\r\n\r\n    const propsForLink = {\r\n        component: Link,\r\n        to: { ...location, pathname: value },\r\n    };\r\n\r\n    let tabLabel = isElement(label) ? label : translate(label, { _: label });\r\n    if (count !== undefined) {\r\n        tabLabel = (\r\n            <span>\r\n                {tabLabel} ({count})\r\n            </span>\r\n        );\r\n    }\r\n    return (\r\n        <MuiTab\r\n            label={tabLabel}\r\n            value={value}\r\n            icon={icon}\r\n            className={clsx('form-tab', className, {\r\n                [TabbedFormClasses.errorTabButton]:\r\n                    !formGroup.isValid && (formGroup.isTouched || isSubmitted),\r\n                error:\r\n                    !formGroup.isValid && (formGroup.isTouched || isSubmitted),\r\n            })}\r\n            {...(syncWithLocation ? propsForLink : {})} // to avoid TypeScript screams, see https://github.com/mui/material-ui/issues/9106#issuecomment-451270521\r\n            id={`tabheader-${value}`}\r\n            aria-controls={`tabpanel-${value}`}\r\n            onChange={onChange}\r\n            {...rest}\r\n        />\r\n    );\r\n};\r\n\r\ninterface FormTabHeaderProps extends Omit<MuiTabProps, 'children'> {\r\n    className?: string;\r\n    count?: ReactNode;\r\n    hidden?: boolean;\r\n    icon?: ReactElement;\r\n    intent?: 'header' | 'content';\r\n    label: string | ReactElement;\r\n    margin?: 'none' | 'normal' | 'dense';\r\n    onChange?: (event: any) => void;\r\n    path?: string;\r\n    resource?: string;\r\n    syncWithLocation?: boolean;\r\n    value?: string | number;\r\n    variant?: 'standard' | 'outlined' | 'filled';\r\n}\r\n\r\nFormTabHeader.propTypes = {\r\n    className: PropTypes.string,\r\n    contentClassName: PropTypes.string,\r\n    count: PropTypes.node,\r\n    children: PropTypes.node,\r\n    intent: PropTypes.oneOf(['header', 'content']),\r\n    hidden: PropTypes.bool,\r\n    icon: PropTypes.element,\r\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\r\n        .isRequired,\r\n    margin: PropTypes.oneOf(['none', 'dense', 'normal']),\r\n    path: PropTypes.string,\r\n    // @ts-ignore\r\n    record: PropTypes.object,\r\n    resource: PropTypes.string,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    variant: PropTypes.oneOf(['standard', 'outlined', 'filled']),\r\n};\r\n", "import * as React from 'react';\r\nimport { ReactElement, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, FormProps } from 'ra-core';\r\nimport { Stack, CardContent, SxProps, StackProps } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport { Toolbar } from './Toolbar';\r\n\r\n/**\r\n * Form with a one column layout, one input per line.\r\n *\r\n * Pass input components as children.\r\n *\r\n * @example\r\n *\r\n * import * as React from \"react\";\r\n * import { Create, Edit, SimpleForm, TextInput, DateInput, ReferenceManyField, Datagrid, TextField, DateField, EditButton } from 'react-admin';\r\n * import RichTextInput from 'ra-input-rich-text';\r\n *\r\n * export const PostCreate = (props) => (\r\n *     <Create {...props}>\r\n *         <SimpleForm>\r\n *             <TextInput source=\"title\" />\r\n *             <TextInput source=\"teaser\" options={{ multiline: true }} />\r\n *             <RichTextInput source=\"body\" />\r\n *             <DateInput label=\"Publication date\" source=\"published_at\" defaultValue={new Date()} />\r\n *         </SimpleForm>\r\n *     </Create>\r\n * );\r\n *\r\n * @typedef {Object} Props the props you can use (other props are injected by Create or Edit)\r\n * @prop {ReactElement[]} children Input elements\r\n * @prop {Object} defaultValues\r\n * @prop {Function} validate\r\n * @prop {ReactElement} toolbar The element displayed at the bottom of the form, containing the SaveButton\r\n *\r\n * @param {Props} props\r\n */\r\nexport const SimpleForm = (props: SimpleFormProps) => {\r\n    const {\r\n        children,\r\n        className,\r\n        component: Component = DefaultComponent,\r\n        sx,\r\n        toolbar = DefaultToolbar,\r\n        ...rest\r\n    } = props;\r\n    return (\r\n        <Form {...rest}>\r\n            <Component className={className} sx={sx}>\r\n                <Stack alignItems=\"flex-start\" {...sanitizeRestProps(props)}>\r\n                    {children}\r\n                </Stack>\r\n            </Component>\r\n            {toolbar !== false ? toolbar : null}\r\n        </Form>\r\n    );\r\n};\r\n\r\nSimpleForm.propTypes = {\r\n    children: PropTypes.node,\r\n    defaultValues: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n    // @ts-ignore\r\n    record: PropTypes.object,\r\n    toolbar: PropTypes.oneOfType([PropTypes.element, PropTypes.oneOf([false])]),\r\n    validate: PropTypes.func,\r\n};\r\n\r\nexport interface SimpleFormProps\r\n    extends Omit<FormProps, 'render'>,\r\n        Omit<StackProps, 'onSubmit'> {\r\n    children: ReactNode;\r\n    className?: string;\r\n    component?: React.ComponentType<any>;\r\n    defaultValues?: any;\r\n    toolbar?: ReactElement | false;\r\n    sx?: SxProps;\r\n}\r\n\r\nconst PREFIX = 'RaSimpleForm';\r\n\r\nconst DefaultComponent = styled(CardContent, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    [theme.breakpoints.down('sm')]: {\r\n        paddingBottom: '5em',\r\n    },\r\n}));\r\n\r\nconst DefaultToolbar = <Toolbar />;\r\n\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nconst sanitizeRestProps = ({\r\n    children,\r\n    className,\r\n    component,\r\n    criteriaMode,\r\n    defaultValues,\r\n    delayError,\r\n    onSubmit,\r\n    record,\r\n    resource,\r\n    reValidateMode,\r\n    sx,\r\n    toolbar,\r\n    validate,\r\n    resetOptions,\r\n    resolver,\r\n    sanitizeEmptyValues,\r\n    shouldFocusError,\r\n    shouldUnregister,\r\n    shouldUseNativeValidation,\r\n    warnWhenUnsavedChanges,\r\n    ...props\r\n}: SimpleFormProps) => props;\r\n/* eslint-enable @typescript-eslint/no-unused-vars */\r\n", "import * as React from 'react';\r\nimport {\r\n    useResourceContext,\r\n    usePreference,\r\n    useStore,\r\n    useTranslate,\r\n} from 'ra-core';\r\n\r\nimport { Configurable } from '../preferences';\r\nimport { SimpleForm, SimpleFormProps } from './SimpleForm';\r\nimport { SimpleFormEditor } from './SimpleFormEditor';\r\n\r\nexport const SimpleFormConfigurable = ({\r\n    preferenceKey,\r\n    omit,\r\n    ...props\r\n}: SimpleFormConfigurableProps) => {\r\n    const translate = useTranslate();\r\n    const resource = useResourceContext(props);\r\n    const finalPreferenceKey = preferenceKey || `${resource}.simpleForm`;\r\n\r\n    const [availableInputs, setAvailableInputs] = useStore<\r\n        SimpleFormConfigurableColumn[]\r\n    >(`preferences.${finalPreferenceKey}.availableInputs`, []);\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [_, setOmit] = useStore<string[]>(\r\n        `preferences.${finalPreferenceKey}.omit`,\r\n        omit\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        // first render, or the preference have been cleared\r\n        const inputs = React.Children.map(props.children, (child, index) =>\r\n            React.isValidElement(child)\r\n                ? {\r\n                      index: String(index),\r\n                      source: child.props.source,\r\n                      label:\r\n                          child.props.source || child.props.label\r\n                              ? child.props.label\r\n                              : translate(\r\n                                    'ra.configurable.SimpleForm.unlabeled',\r\n                                    {\r\n                                        input: index,\r\n                                        _: `Unlabeled input #%{input}`,\r\n                                    }\r\n                                ),\r\n                  }\r\n                : null\r\n        ).filter(column => column != null);\r\n        if (inputs.length !== availableInputs.length) {\r\n            setAvailableInputs(inputs);\r\n            setOmit(omit);\r\n        }\r\n    }, [availableInputs]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <Configurable\r\n            editor={<SimpleFormEditor />}\r\n            preferenceKey={finalPreferenceKey}\r\n            sx={{\r\n                display: 'block',\r\n                '&.RaConfigurable-editMode': {\r\n                    margin: '2px',\r\n                },\r\n            }}\r\n        >\r\n            <SimpleFormWithPreferences {...props} />\r\n        </Configurable>\r\n    );\r\n};\r\n\r\nexport interface SimpleFormConfigurableProps extends SimpleFormProps {\r\n    /**\r\n     * Key to use to store the user's preferences for this SimpleForm.\r\n     *\r\n     * Set to '[resource].simpleForm' by default. Pass a custom key if you need\r\n     * to display more than one SimpleFormConfigurable per resource.\r\n     */\r\n    preferenceKey?: string;\r\n    /**\r\n     * columns to hide by default\r\n     *\r\n     * @example\r\n     * // by default, hide the id and author columns\r\n     * // users can choose to show show them in configuration mode\r\n     * const PostEdit = () => (\r\n     *     <Edit>\r\n     *         <SimpleFormConfigurable omit={['id', 'author']}>\r\n     *             <TextInput source=\"id\" />\r\n     *             <TextInput source=\"title\" />\r\n     *             <TextInput source=\"author\" />\r\n     *             <TextInput source=\"year\" />\r\n     *         </SimpleFormConfigurable>\r\n     *     </Edit>\r\n     * );\r\n     */\r\n    omit?: string[];\r\n}\r\n\r\nexport interface SimpleFormConfigurableColumn {\r\n    index: string;\r\n    source: string;\r\n    label?: string;\r\n}\r\n\r\n/**\r\n * This SimpleForm filters its children depending on preferences\r\n */\r\nconst SimpleFormWithPreferences = ({ children, ...props }: SimpleFormProps) => {\r\n    const [availableInputs] = usePreference('availableInputs', []);\r\n    const [omit] = usePreference('omit', []);\r\n    const [inputs] = usePreference(\r\n        'inputs',\r\n        availableInputs\r\n            .filter(input => !omit?.includes(input.source))\r\n            .map(input => input.index)\r\n    );\r\n    const childrenArray = React.Children.toArray(children);\r\n    return (\r\n        <SimpleForm {...props}>\r\n            {inputs === undefined\r\n                ? children\r\n                : inputs.map(index => childrenArray[index])}\r\n        </SimpleForm>\r\n    );\r\n};\r\n", "import * as React from 'react';\r\nimport { useSetInspectorTitle } from 'ra-core';\r\n\r\nimport { FieldsSelector } from '../preferences';\r\n\r\nexport const SimpleFormEditor = () => {\r\n    useSetInspectorTitle('ra.inspector.SimpleForm.title', { _: 'Form' });\r\n\r\n    return <FieldsSelector name=\"inputs\" availableName=\"availableInputs\" />;\r\n};\r\n", "import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport inflection from 'inflection';\r\nimport {\r\n    EditBase,\r\n    InferredElement,\r\n    useResourceContext,\r\n    useEditContext,\r\n    getElementsFromRecords,\r\n    RaRecord,\r\n} from 'ra-core';\r\n\r\nimport { EditProps } from '../types';\r\nimport { EditView } from './EditView';\r\nimport { editFieldTypes } from './editFieldTypes';\r\n\r\nexport const EditGuesser = <RecordType extends RaRecord = RaRecord>(\r\n    props: EditProps<RecordType>\r\n) => {\r\n    const {\r\n        resource,\r\n        id,\r\n        mutationMode,\r\n        mutationOptions,\r\n        queryOptions,\r\n        redirect,\r\n        transform,\r\n        disableAuthentication,\r\n        ...rest\r\n    } = props;\r\n    return (\r\n        <EditBase<RecordType>\r\n            resource={resource}\r\n            id={id}\r\n            mutationMode={mutationMode}\r\n            mutationOptions={mutationOptions}\r\n            queryOptions={queryOptions}\r\n            redirect={redirect}\r\n            transform={transform}\r\n            disableAuthentication={disableAuthentication}\r\n        >\r\n            <EditViewGuesser {...rest} />\r\n        </EditBase>\r\n    );\r\n};\r\n\r\nconst EditViewGuesser = props => {\r\n    const resource = useResourceContext(props);\r\n    const { record } = useEditContext();\r\n    const [child, setChild] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setChild(null);\r\n    }, [resource]);\r\n\r\n    useEffect(() => {\r\n        if (record && !child) {\r\n            const inferredElements = getElementsFromRecords(\r\n                [record],\r\n                editFieldTypes\r\n            );\r\n            const inferredChild = new InferredElement(\r\n                editFieldTypes.form,\r\n                null,\r\n                inferredElements\r\n            );\r\n            setChild(inferredChild.getElement());\r\n\r\n            if (process.env.NODE_ENV === 'production') return;\r\n\r\n            const representation = inferredChild.getRepresentation();\r\n\r\n            const components = ['Edit']\r\n                .concat(\r\n                    Array.from(\r\n                        new Set(\r\n                            Array.from(representation.matchAll(/<([^/\\s>]+)/g))\r\n                                .map(match => match[1])\r\n                                .filter(component => component !== 'span')\r\n                        )\r\n                    )\r\n                )\r\n                .sort();\r\n\r\n            // eslint-disable-next-line no-console\r\n            console.log(\r\n                `Guessed Edit:\r\n\r\nimport { ${components.join(', ')} } from 'react-admin';\r\n\r\nexport const ${inflection.capitalize(\r\n                    inflection.singularize(resource)\r\n                )}Edit = () => (\r\n    <Edit>\r\n${representation}\r\n    </Edit>\r\n);`\r\n            );\r\n        }\r\n    }, [record, child, resource]);\r\n\r\n    return <EditView {...props}>{child}</EditView>;\r\n};\r\n\r\nEditViewGuesser.propTypes = EditView.propTypes;\r\n", "import * as React from 'react';\r\nimport { ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ShowBase, RaRecord } from 'ra-core';\r\n\r\nimport { ShowProps } from '../types';\r\nimport { ShowView } from './ShowView';\r\n\r\n/**\r\n * Page component for the Show view\r\n *\r\n * The `<Show>` component handles the headless logic of the Show page:\r\n * - it calls useShowController to fetch the record from the data provider,\r\n * - it creates a ShowContext and a RecordContext,\r\n * - it computes the default page title\r\n * - it renders the page layout with the correct title and actions\r\n *\r\n * `<Show>` is not responsible for rendering the actual page -\r\n * that's the job of its child component (usually `<SimpleShowLayout>`).\r\n *\r\n * @example\r\n *\r\n * // in src/posts.js\r\n * import * as React from \"react\";\r\n * import { Show, SimpleShowLayout, TextField } from 'react-admin';\r\n *\r\n * export const PostShow = () => (\r\n *     <Show>\r\n *         <SimpleShowLayout>\r\n *             <TextField source=\"title\" />\r\n *         </SimpleShowLayout>\r\n *     </Show>\r\n * );\r\n *\r\n * // in src/App.js\r\n * import * as React from \"react\";\r\n * import { Admin, Resource } from 'react-admin';\r\n *\r\n * import { PostShow } from './posts';\r\n *\r\n * const App = () => (\r\n *     <Admin dataProvider={...}>\r\n *         <Resource name=\"posts\" show={PostShow} />\r\n *     </Admin>\r\n * );\r\n * export default App;\r\n *\r\n * @param {ShowProps} props\r\n * @param {ReactElement|false} props.actions An element to display above the page content, or false to disable actions.\r\n * @param {string} props.className A className to apply to the page content.\r\n * @param {ElementType} props.component The component to use as root component (div by default).\r\n * @param {boolean} props.emptyWhileLoading Do not display the page content while loading the initial data.\r\n * @param {string} props.id The id of the resource to display (grabbed from the route params if not defined).\r\n * @param {Object} props.queryClient Options to pass to the react-query useQuery hook.\r\n * @param {string} props.resource The resource to fetch from the data provider (grabbed from the ResourceContext if not defined).\r\n * @param {Object} props.sx Custom style object.\r\n * @param {ElementType|string} props.title The title of the page. Defaults to `#{resource} #${id}`.\r\n *\r\n * @see ShowView for the actual rendering\r\n */\r\nexport const Show = <RecordType extends RaRecord = any>({\r\n    id,\r\n    resource,\r\n    queryOptions,\r\n    disableAuthentication,\r\n    ...rest\r\n}: ShowProps<RecordType>): ReactElement => (\r\n    <ShowBase<RecordType>\r\n        id={id}\r\n        disableAuthentication={disableAuthentication}\r\n        queryOptions={queryOptions}\r\n        resource={resource}\r\n    >\r\n        <ShowView {...rest} />\r\n    </ShowBase>\r\n);\r\n\r\nShow.propTypes = {\r\n    actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\r\n    children: PropTypes.node.isRequired,\r\n    className: PropTypes.string,\r\n    disableAuthentication: PropTypes.bool,\r\n    emptyWhileLoading: PropTypes.bool,\r\n    component: PropTypes.elementType,\r\n    resource: PropTypes.string,\r\n    title: PropTypes.node,\r\n    sx: PropTypes.any,\r\n};\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport clsx from 'clsx';\r\nimport { useShowContext, useResourceDefinition } from 'ra-core';\r\n\r\nimport { ShowProps } from '../types';\r\nimport { ShowActions } from './ShowActions';\r\nimport { Title } from '../layout';\r\n\r\nconst defaultActions = <ShowActions />;\r\n\r\nexport const ShowView = (props: ShowViewProps) => {\r\n    const {\r\n        actions,\r\n        aside,\r\n        children,\r\n        className,\r\n        component: Content = Card,\r\n        emptyWhileLoading = false,\r\n        title,\r\n        ...rest\r\n    } = props;\r\n\r\n    const { resource, defaultTitle, record } = useShowContext(props);\r\n    const { hasEdit } = useResourceDefinition(props);\r\n\r\n    const finalActions =\r\n        typeof actions === 'undefined' && hasEdit ? defaultActions : actions;\r\n\r\n    if (!children || (!record && emptyWhileLoading)) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Root\r\n            className={clsx('show-page', className)}\r\n            {...sanitizeRestProps(rest)}\r\n        >\r\n            <Title\r\n                title={title}\r\n                defaultTitle={defaultTitle}\r\n                preferenceKey={`${resource}.show.title`}\r\n            />\r\n            {finalActions !== false && finalActions}\r\n            <div\r\n                className={clsx(ShowClasses.main, {\r\n                    [ShowClasses.noActions]: !finalActions,\r\n                })}\r\n            >\r\n                <Content className={ShowClasses.card}>{children}</Content>\r\n                {aside}\r\n            </div>\r\n        </Root>\r\n    );\r\n};\r\n\r\nexport type ShowViewProps = ShowProps;\r\n\r\nShowView.propTypes = {\r\n    actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    emptyWhileLoading: PropTypes.bool,\r\n    title: PropTypes.any,\r\n};\r\n\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nconst sanitizeRestProps = ({\r\n    defaultTitle = null,\r\n    hasCreate = null,\r\n    hasEdit = null,\r\n    hasList = null,\r\n    hasShow = null,\r\n    history = null,\r\n    id = null,\r\n    isLoading = null,\r\n    isFetching = null,\r\n    location = null,\r\n    match = null,\r\n    options = null,\r\n    refetch = null,\r\n    permissions = null,\r\n    ...rest\r\n}) => rest;\r\n/* eslint-enable @typescript-eslint/no-unused-vars */\r\n\r\nconst PREFIX = 'RaShow';\r\n\r\nexport const ShowClasses = {\r\n    main: `${PREFIX}-main`,\r\n    noActions: `${PREFIX}-noActions`,\r\n    card: `${PREFIX}-card`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})({\r\n    [`& .${ShowClasses.main}`]: {\r\n        display: 'flex',\r\n    },\r\n    [`& .${ShowClasses.noActions}`]: {\r\n        marginTop: '1em',\r\n    },\r\n    [`& .${ShowClasses.card}`]: {\r\n        flex: '1 1 auto',\r\n    },\r\n});\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { RaRecord, useResourceDefinition, useRecordContext } from 'ra-core';\r\n\r\nimport { EditButton } from '../button';\r\nimport TopToolbar from '../layout/TopToolbar';\r\n\r\n/**\r\n * Action Toolbar for the Show view\r\n *\r\n * Internal component. If you want to add or remove actions for a Show view,\r\n * write your own ShowActions Component. Then, in the <Show> component,\r\n * use it in the `actions` prop to pass a custom component.\r\n *\r\n * @example\r\n *     import Button from '@mui/material/Button';\r\n *     import { TopToolbar, ShowButton, Show } from 'react-admin';\r\n *\r\n *     const PostShowActions = () => (\r\n *         <TopToolbar>\r\n *             <ShowButton />\r\n *             // Add your custom actions here //\r\n *             <Button color=\"primary\" onClick={customAction}>Custom Action</Button>\r\n *         </TopToolbar>\r\n *     );\r\n *\r\n *     export const PostShow = (props) => (\r\n *         <Show actions={<PostShowActions />} {...props}>\r\n *             ...\r\n *         </Show>\r\n *     );\r\n */\r\nexport const ShowActions = (props: ShowActionsProps) => {\r\n    const record = useRecordContext(props);\r\n    const { hasEdit } = useResourceDefinition();\r\n    if (!hasEdit) {\r\n        return null;\r\n    }\r\n    return (\r\n        <TopToolbar className={props.className}>\r\n            <EditButton record={record} />\r\n        </TopToolbar>\r\n    );\r\n};\r\n\r\nexport interface ShowActionsProps {\r\n    className?: string;\r\n    record?: RaRecord;\r\n}\r\n\r\nShowActions.propTypes = {\r\n    className: PropTypes.string,\r\n    record: PropTypes.any,\r\n};\r\n", "import * as React from 'react';\r\nimport { ReactNode } from 'react';\r\nimport { Datagrid } from '../list/datagrid/Datagrid';\r\nimport {\r\n    ArrayField,\r\n    BooleanField,\r\n    DateField,\r\n    EmailField,\r\n    NumberField,\r\n    ReferenceField,\r\n    ReferenceFieldProps,\r\n    ReferenceArrayField,\r\n    ReferenceArrayFieldProps,\r\n    RichTextField,\r\n    TextField,\r\n    UrlField,\r\n} from '../field';\r\nimport { SimpleShowLayout, SimpleShowLayoutProps } from './SimpleShowLayout';\r\nimport { InferredElement, InferredTypeMap, InputProps } from 'ra-core';\r\n\r\nexport const showFieldTypes: InferredTypeMap = {\r\n    show: {\r\n        component: (props: SimpleShowLayoutProps) => (\r\n            <SimpleShowLayout {...props} />\r\n        ), // eslint-disable-line react/display-name\r\n        representation: (_, children) => `        <SimpleShowLayout>\r\n${children.map(child => `            ${child.getRepresentation()}`).join('\\n')}\r\n        </SimpleShowLayout>`,\r\n    },\r\n    array: {\r\n        // eslint-disable-next-line react/display-name\r\n        component: ({\r\n            children,\r\n            ...props\r\n        }: { children: ReactNode } & InputProps) => (\r\n            <ArrayField {...props}>\r\n                <Datagrid>{children}</Datagrid>\r\n            </ArrayField>\r\n        ),\r\n        representation: (props: InputProps, children: InferredElement[]) =>\r\n            `<ArrayField source=\"${\r\n                props.source\r\n            }\"><Datagrid>${children\r\n                .map(child => child.getRepresentation())\r\n                .join('\\n')}</Datagrid></ArrayField>`,\r\n    },\r\n    boolean: {\r\n        component: BooleanField,\r\n        representation: (props: InputProps) =>\r\n            `<BooleanField source=\"${props.source}\" />`,\r\n    },\r\n    date: {\r\n        component: DateField,\r\n        representation: (props: InputProps) =>\r\n            `<DateField source=\"${props.source}\" />`,\r\n    },\r\n    email: {\r\n        component: EmailField,\r\n        representation: (props: InputProps) =>\r\n            `<EmailField source=\"${props.source}\" />`,\r\n    },\r\n    id: {\r\n        component: TextField,\r\n        representation: (props: InputProps) =>\r\n            `<TextField source=\"${props.source}\" />`,\r\n    },\r\n    number: {\r\n        component: NumberField,\r\n        representation: (props: InputProps) =>\r\n            `<NumberField source=\"${props.source}\" />`,\r\n    },\r\n    reference: {\r\n        component: ReferenceField,\r\n        representation: (props: ReferenceFieldProps) =>\r\n            `<ReferenceField source=\"${props.source}\" reference=\"${props.reference}\" />`,\r\n    },\r\n    referenceChild: {\r\n        component: (props: { children: ReactNode } & InputProps) => (\r\n            <TextField source=\"id\" {...props} />\r\n        ), // eslint-disable-line react/display-name\r\n        representation: () => `<TextField source=\"id\" />`,\r\n    },\r\n    referenceArray: {\r\n        component: ReferenceArrayField,\r\n        representation: (props: ReferenceArrayFieldProps) =>\r\n            `<ReferenceArrayField source=\"${props.source}\" reference=\"${props.reference}\"><TextField source=\"id\" /></ReferenceArrayField>`,\r\n    },\r\n    referenceArrayChild: {\r\n        component: (props: { children: ReactNode } & InputProps) => (\r\n            <TextField source=\"id\" {...props} />\r\n        ), // eslint-disable-line react/display-name\r\n        representation: () => `<TextField source=\"id\" />`,\r\n    },\r\n    richText: {\r\n        component: RichTextField,\r\n        representation: (props: InputProps) =>\r\n            `<RichTextField source=\"${props.source}\" />`,\r\n    },\r\n    string: {\r\n        component: TextField,\r\n        representation: (props: InputProps) =>\r\n            `<TextField source=\"${props.source}\" />`,\r\n    },\r\n    url: {\r\n        component: UrlField,\r\n        representation: (props: InputProps) =>\r\n            `<UrlField source=\"${props.source}\" />`,\r\n    },\r\n};\r\n", "import * as React from 'react';\r\nimport { ReactNode } from 'react';\r\nimport get from 'lodash/get';\r\nimport {\r\n    ListContextProvider,\r\n    useRecordContext,\r\n    useList,\r\n    SortPayload,\r\n    FilterPayload,\r\n} from 'ra-core';\r\n\r\nimport { FieldProps, fieldPropTypes } from './types';\r\nimport { genericMemo } from './genericMemo';\r\n\r\n/**\r\n * Renders an embedded array of objects.\r\n *\r\n * ArrayField creates a ListContext with the field value, and renders its children components -\r\n * usually iterator components like Datagrid, SingleFieldList, or SimpleList.\r\n *\r\n * @example // Display all the tags of the current post as `<Chip>` components\r\n * // const post = {\r\n * //   id: 123\r\n * //   tags: [\r\n * //     { name: 'foo' },\r\n * //     { name: 'bar' }\r\n * //   ]\r\n * // };\r\n * const PostShow = () => (\r\n *    <Show>\r\n *       <SimpleShowLayout>\r\n *           <ArrayField source=\"tags\">\r\n *               <SingleFieldList>\r\n *                   <ChipField source=\"name\" />\r\n *               </SingleFieldList>\r\n *           </ArrayField>\r\n *      </SimpleShowLayout>\r\n *   </Show>\r\n * );\r\n *\r\n * @example // Display all the backlinks of the current post as a `<Datagrid>`\r\n * // const post = {\r\n * //   id: 123\r\n * //   backlinks: [\r\n * //       {\r\n * //           uuid: '34fdf393-f449-4b04-a423-38ad02ae159e',\r\n * //           date: '2012-08-10T00:00:00.000Z',\r\n * //           url: 'http://example.com/foo/bar.html',\r\n * //       },\r\n * //       {\r\n * //           uuid: 'd907743a-253d-4ec1-8329-404d4c5e6cf1',\r\n * //           date: '2012-08-14T00:00:00.000Z',\r\n * //           url: 'https://blog.johndoe.com/2012/08/12/foobar.html',\r\n * //       }\r\n * //    ]\r\n * // };\r\n * <ArrayField source=\"backlinks\">\r\n *     <Datagrid>\r\n *         <DateField source=\"date\" />\r\n *         <UrlField source=\"url\" />\r\n *     </Datagrid>\r\n * </ArrayField>\r\n *\r\n * @example // If you need to render a collection of strings, it's often simpler to write your own component\r\n * const TagsField = () => {\r\n *     const record = useRecordContext();\r\n *     return (\r\n *         <ul>\r\n *             {record.tags.map(item => (\r\n *                 <li key={item.name}>{item.name}</li>\r\n *             ))}\r\n *         </ul>\r\n *     );\r\n * };\r\n *\r\n * @see useListContext\r\n */\r\nconst ArrayFieldImpl = <\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n>(\r\n    props: ArrayFieldProps<RecordType>\r\n) => {\r\n    const { children, resource, source, perPage, sort, filter } = props;\r\n    const record = useRecordContext(props);\r\n    const data =\r\n        (get(record, source, emptyArray) as Record<string, any>[]) ||\r\n        emptyArray;\r\n    const listContext = useList({ data, resource, perPage, sort, filter });\r\n    return (\r\n        <ListContextProvider value={listContext}>\r\n            {children}\r\n        </ListContextProvider>\r\n    );\r\n};\r\nArrayFieldImpl.propTypes = { ...fieldPropTypes };\r\nArrayFieldImpl.displayName = 'ArrayFieldImpl';\r\n\r\nexport const ArrayField = genericMemo(ArrayFieldImpl);\r\n\r\nexport interface ArrayFieldProps<\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n> extends FieldProps<RecordType> {\r\n    children?: ReactNode;\r\n    perPage?: number;\r\n    sort?: SortPayload;\r\n    filter?: FilterPayload;\r\n}\r\n\r\nconst emptyArray = [];\r\n", "import { ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TableCellProps } from '@mui/material/TableCell';\r\nimport { Call, Objects } from 'hotscript';\r\n\r\ntype TextAlign = TableCellProps['align'];\r\ntype SortOrder = 'ASC' | 'DESC';\r\ntype AnyString = string & {};\r\n\r\nexport interface FieldProps<\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n> {\r\n    sortBy?: Call<Objects.AllPaths, RecordType> | AnyString;\r\n    sortByOrder?: SortOrder;\r\n    source?: Call<Objects.AllPaths, RecordType> extends never\r\n        ? AnyString\r\n        : Call<Objects.AllPaths, RecordType>;\r\n    label?: string | ReactElement | boolean;\r\n    sortable?: boolean;\r\n    className?: string;\r\n    cellClassName?: string;\r\n    headerClassName?: string;\r\n    /*\r\n     * @deprecated this property is not used anymore\r\n     */\r\n    formClassName?: string;\r\n    textAlign?: TextAlign;\r\n    emptyText?: string;\r\n    fullWidth?: boolean;\r\n    record?: RecordType;\r\n    resource?: string;\r\n}\r\n\r\n/**\r\n * @deprecated use FieldProps instead\r\n */\r\nexport interface PublicFieldProps<\r\n    RecordType extends Record<string, any> = Record<string, any>,\r\n    SortByType = unknown\r\n> {\r\n    sortBy?: unknown extends SortByType\r\n        ? Call<Objects.AllPaths, RecordType>\r\n        : SortByType;\r\n    sortByOrder?: SortOrder;\r\n    source?: Call<Objects.AllPaths, RecordType>;\r\n    label?: string | ReactElement | boolean;\r\n    sortable?: boolean;\r\n    className?: string;\r\n    cellClassName?: string;\r\n    headerClassName?: string;\r\n    /*\r\n     * @deprecated this property is not used anymore\r\n     */\r\n    formClassName?: string;\r\n    textAlign?: TextAlign;\r\n    emptyText?: string;\r\n    fullWidth?: boolean;\r\n    record?: RecordType;\r\n    resource?: string;\r\n}\r\n\r\n/**\r\n * @deprecated use FieldProps instead\r\n */\r\nexport interface InjectedFieldProps<RecordType = any> {\r\n    record?: RecordType;\r\n    resource?: string;\r\n}\r\n\r\nexport const fieldPropTypes = {\r\n    sortBy: PropTypes.string,\r\n    sortByOrder: PropTypes.oneOf<SortOrder>(['ASC', 'DESC']),\r\n    source: PropTypes.string,\r\n    label: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.element,\r\n        PropTypes.bool,\r\n    ]),\r\n    sortable: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    cellClassName: PropTypes.string,\r\n    headerClassName: PropTypes.string,\r\n    textAlign: PropTypes.oneOf<TextAlign>([\r\n        'inherit',\r\n        'left',\r\n        'center',\r\n        'right',\r\n        'justify',\r\n    ]),\r\n    emptyText: PropTypes.string,\r\n};\r\n", "import { FunctionComponent, memo } from 'react';\r\n\r\n/**\r\n * A version of React.memo that preserves the original component type allowing it to accept generics.\r\n * See {@link https://stackoverflow.com/a/70890101}\r\n */\r\nexport const genericMemo: <T extends FunctionComponent>(component: T) => T = <\r\n    T extends FunctionComponent\r\n>(\r\n    component: T\r\n) => {\r\n    const result = (memo(component) as unknown) as T;\r\n\r\n    // We have to set the propTypes, defaultProps and displayName on both the field implementation and the memoized version.\r\n    // On the implementation so that the memoized version can pick them up and users may reference the defaultProps in their components.\r\n    // On the memoized version so that components that inspect their children props may read them.\r\n    result.propTypes = component.propTypes;\r\n    result.defaultProps = component.defaultProps;\r\n    result.displayName = component.displayName?.replace('Impl', '');\r\n    return result;\r\n};\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { SvgIconComponent } from '@mui/icons-material';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport { Tooltip, Typography, TypographyProps } from '@mui/material';\r\nimport { useTranslate, useRecordContext } from 'ra-core';\r\nimport { genericMemo } from './genericMemo';\r\nimport { FieldProps, fieldPropTypes } from './types';\r\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\r\n\r\nconst BooleanFieldImpl = <\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n>(\r\n    props: BooleanFieldProps<RecordType>\r\n) => {\r\n    const {\r\n        className,\r\n        emptyText,\r\n        source,\r\n        valueLabelTrue,\r\n        valueLabelFalse,\r\n        TrueIcon = DoneIcon,\r\n        FalseIcon = ClearIcon,\r\n        looseValue = false,\r\n        ...rest\r\n    } = props;\r\n    const record = useRecordContext<RecordType>(props);\r\n    const translate = useTranslate();\r\n\r\n    const value = get(record, source);\r\n    const isTruthyValue = value === true || (looseValue && value);\r\n    let ariaLabel = value ? valueLabelTrue : valueLabelFalse;\r\n\r\n    if (!ariaLabel) {\r\n        ariaLabel = isTruthyValue ? 'ra.boolean.true' : 'ra.boolean.false';\r\n    }\r\n\r\n    if (looseValue || value === false || value === true) {\r\n        return (\r\n            <StyledTypography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={className}\r\n                {...sanitizeFieldRestProps(rest)}\r\n            >\r\n                <Tooltip title={translate(ariaLabel, { _: ariaLabel })}>\r\n                    {isTruthyValue ? (\r\n                        TrueIcon ? (\r\n                            <TrueIcon data-testid=\"true\" fontSize=\"small\" />\r\n                        ) : (\r\n                            <></>\r\n                        )\r\n                    ) : FalseIcon ? (\r\n                        <FalseIcon data-testid=\"false\" fontSize=\"small\" />\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </Tooltip>\r\n            </StyledTypography>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Typography\r\n            component=\"span\"\r\n            variant=\"body2\"\r\n            className={className}\r\n            {...sanitizeFieldRestProps(rest)}\r\n        >\r\n            {emptyText && translate(emptyText, { _: emptyText })}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nBooleanFieldImpl.propTypes = {\r\n    // @ts-ignore\r\n    ...Typography.propTypes,\r\n    ...fieldPropTypes,\r\n    valueLabelFalse: PropTypes.string,\r\n    valueLabelTrue: PropTypes.string,\r\n    TrueIcon: PropTypes.elementType,\r\n    FalseIcon: PropTypes.elementType,\r\n    looseValue: PropTypes.bool,\r\n};\r\nBooleanFieldImpl.displayName = 'BooleanFieldImpl';\r\n\r\nexport const BooleanField = genericMemo(BooleanFieldImpl);\r\n\r\nexport interface BooleanFieldProps<\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n> extends FieldProps<RecordType>,\r\n        Omit<TypographyProps, 'textAlign'> {\r\n    valueLabelTrue?: string;\r\n    valueLabelFalse?: string;\r\n    TrueIcon?: SvgIconComponent | null;\r\n    FalseIcon?: SvgIconComponent | null;\r\n    looseValue?: boolean;\r\n}\r\n\r\nconst PREFIX = 'RaBooleanField';\r\n\r\nconst StyledTypography = styled(Typography, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})({\r\n    display: 'inline-flex',\r\n    verticalAlign: 'middle',\r\n    lineHeight: 0,\r\n});\r\n", "export const sanitizeFieldRestProps: (props: any) => any = ({\r\n    cellClassName,\r\n    className,\r\n    emptyText,\r\n    formClassName,\r\n    fullWidth,\r\n    headerClassName,\r\n    label,\r\n    linkType,\r\n    link,\r\n    locale,\r\n    record,\r\n    refetch,\r\n    resource,\r\n    sortable,\r\n    sortBy,\r\n    sortByOrder,\r\n    source,\r\n    textAlign,\r\n    translateChoice,\r\n    ...props\r\n}) => props;\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport get from 'lodash/get';\r\nimport Chip, { ChipProps } from '@mui/material/Chip';\r\nimport Typography from '@mui/material/Typography';\r\nimport clsx from 'clsx';\r\nimport { useRecordContext, useTranslate } from 'ra-core';\r\n\r\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\r\nimport { FieldProps, fieldPropTypes } from './types';\r\nimport { genericMemo } from './genericMemo';\r\n\r\nconst ChipFieldImpl = <\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n>(\r\n    props: ChipFieldProps<RecordType>\r\n) => {\r\n    const { className, source, emptyText, ...rest } = props;\r\n    const record = useRecordContext<RecordType>(props);\r\n    const value = get(record, source);\r\n    const translate = useTranslate();\r\n\r\n    if (value == null && emptyText) {\r\n        return (\r\n            <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={className}\r\n                {...sanitizeFieldRestProps(rest)}\r\n            >\r\n                {emptyText && translate(emptyText, { _: emptyText })}\r\n            </Typography>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <StyledChip\r\n            className={clsx(ChipFieldClasses.chip, className)}\r\n            label={value}\r\n            {...sanitizeFieldRestProps(rest)}\r\n        />\r\n    );\r\n};\r\n\r\nChipFieldImpl.propTypes = {\r\n    // @ts-ignore\r\n    ...Chip.propTypes,\r\n    ...fieldPropTypes,\r\n};\r\nChipFieldImpl.displayName = 'ChipFieldImpl';\r\n\r\nexport const ChipField = genericMemo(ChipFieldImpl);\r\n\r\nexport interface ChipFieldProps<\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n> extends FieldProps<RecordType>,\r\n        Omit<ChipProps, 'label' | 'children'> {\r\n    /**\r\n     * @internal do not use (prop required for TS to be able to cast ChipField as FunctionComponent)\r\n     */\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst PREFIX = 'RaChipField';\r\n\r\nconst ChipFieldClasses = {\r\n    chip: `${PREFIX}-chip`,\r\n};\r\n\r\nconst StyledChip = styled(Chip, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})({\r\n    [`&.${ChipFieldClasses.chip}`]: { margin: 4, cursor: 'inherit' },\r\n});\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\nimport { Typography, TypographyProps } from '@mui/material';\r\nimport { useRecordContext, useTranslate } from 'ra-core';\r\n\r\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\r\nimport { FieldProps, fieldPropTypes } from './types';\r\nimport { genericMemo } from './genericMemo';\r\n\r\n/**\r\n * Display a date value as a locale string.\r\n *\r\n * Uses Intl.DateTimeFormat() if available, passing the locales and options props as arguments.\r\n * If Intl is not available, it outputs date as is (and ignores the locales and options props).\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\r\n * @example\r\n * <DateField source=\"published_at\" />\r\n * // renders the record { id: 1234, published_at: new Date('2012-11-07') } as\r\n * <span>07/11/2012</span>\r\n *\r\n * <DateField source=\"published_at\" className=\"red\" />\r\n * // renders the record { id: 1234, new Date('2012-11-07') } as\r\n * <span class=\"red\">07/11/2012</span>\r\n *\r\n * <DateField source=\"share\" options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }} />\r\n * // renders the record { id: 1234, new Date('2012-11-07') } as\r\n * <span>Wednesday, November 7, 2012</span>\r\n *\r\n * <DateField source=\"price\" locales=\"fr-FR\" options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }} />\r\n * // renders the record { id: 1234, new Date('2012-11-07') } as\r\n * <span>mercredi 7 novembre 2012</span>\r\n */\r\nconst DateFieldImpl = <\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n>(\r\n    props: DateFieldProps<RecordType>\r\n) => {\r\n    const {\r\n        className,\r\n        emptyText,\r\n        locales,\r\n        options,\r\n        showTime = false,\r\n        showDate = true,\r\n        source,\r\n        transform = defaultTransform,\r\n        ...rest\r\n    } = props;\r\n    const translate = useTranslate();\r\n\r\n    if (!showTime && !showDate) {\r\n        throw new Error(\r\n            '<DateField> cannot have showTime and showDate false at the same time'\r\n        );\r\n    }\r\n\r\n    const record = useRecordContext<RecordType>(props);\r\n    if (!record) {\r\n        return null;\r\n    }\r\n\r\n    const value = get(record, source) as any;\r\n    if (value == null || value === '') {\r\n        return emptyText ? (\r\n            <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={className}\r\n                {...sanitizeFieldRestProps(rest)}\r\n            >\r\n                {emptyText && translate(emptyText, { _: emptyText })}\r\n            </Typography>\r\n        ) : null;\r\n    }\r\n\r\n    const date = transform(value);\r\n\r\n    let dateString = '';\r\n    if (showTime && showDate) {\r\n        dateString = toLocaleStringSupportsLocales\r\n            ? date.toLocaleString(locales, options)\r\n            : date.toLocaleString();\r\n    } else if (showDate) {\r\n        // If input is a date string (e.g. '2022-02-15') without time and time zone,\r\n        // force timezone to UTC to fix issue with people in negative time zones\r\n        // who may see a different date when calling toLocaleDateString().\r\n        const dateOptions =\r\n            options ??\r\n            (typeof value === 'string' && value.length <= 10\r\n                ? { timeZone: 'UTC' }\r\n                : undefined);\r\n        dateString = toLocaleStringSupportsLocales\r\n            ? date.toLocaleDateString(locales, dateOptions)\r\n            : date.toLocaleDateString();\r\n    } else if (showTime) {\r\n        dateString = toLocaleStringSupportsLocales\r\n            ? date.toLocaleTimeString(locales, options)\r\n            : date.toLocaleTimeString();\r\n    }\r\n\r\n    return (\r\n        <Typography\r\n            component=\"span\"\r\n            variant=\"body2\"\r\n            className={className}\r\n            {...sanitizeFieldRestProps(rest)}\r\n        >\r\n            {dateString}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nDateFieldImpl.propTypes = {\r\n    // @ts-ignore\r\n    ...Typography.propTypes,\r\n    ...fieldPropTypes,\r\n    locales: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.arrayOf(PropTypes.string),\r\n    ]),\r\n    options: PropTypes.object,\r\n    showTime: PropTypes.bool,\r\n    showDate: PropTypes.bool,\r\n};\r\nDateFieldImpl.displayName = 'DateFieldImpl';\r\n\r\nexport const DateField = genericMemo(DateFieldImpl);\r\n\r\nexport interface DateFieldProps<\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n> extends FieldProps<RecordType>,\r\n        Omit<TypographyProps, 'textAlign'> {\r\n    locales?: Intl.LocalesArgument;\r\n    options?: Intl.DateTimeFormatOptions;\r\n    showTime?: boolean;\r\n    showDate?: boolean;\r\n    transform?: (value: any) => Date;\r\n}\r\n\r\nconst defaultTransform = value =>\r\n    value instanceof Date\r\n        ? value\r\n        : typeof value === 'string' || typeof value === 'number'\r\n        ? new Date(value)\r\n        : undefined;\r\n\r\nconst toLocaleStringSupportsLocales = (() => {\r\n    // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\r\n    try {\r\n        new Date().toLocaleString('i');\r\n    } catch (error) {\r\n        return error instanceof RangeError;\r\n    }\r\n    return false;\r\n})();\r\n", "import * as React from 'react';\r\nimport get from 'lodash/get';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Link, LinkProps } from '@mui/material';\r\nimport { useRecordContext, useTranslate } from 'ra-core';\r\n\r\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\r\nimport { FieldProps, fieldPropTypes } from './types';\r\nimport { genericMemo } from './genericMemo';\r\n\r\nconst EmailFieldImpl = <\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n>(\r\n    props: EmailFieldProps<RecordType>\r\n) => {\r\n    const { className, source, emptyText, ...rest } = props;\r\n    const record = useRecordContext(props);\r\n    const value = get(record, source);\r\n    const translate = useTranslate();\r\n\r\n    if (value == null) {\r\n        return emptyText ? (\r\n            <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={className}\r\n                {...sanitizeFieldRestProps(rest)}\r\n            >\r\n                {emptyText && translate(emptyText, { _: emptyText })}\r\n            </Typography>\r\n        ) : null;\r\n    }\r\n\r\n    return (\r\n        <Link\r\n            className={className}\r\n            href={`mailto:${value}`}\r\n            onClick={stopPropagation}\r\n            variant=\"body2\"\r\n            {...sanitizeFieldRestProps(rest)}\r\n        >\r\n            {value}\r\n        </Link>\r\n    );\r\n};\r\n\r\nEmailFieldImpl.propTypes = fieldPropTypes;\r\nEmailFieldImpl.displayName = 'EmailFieldImpl';\r\n\r\nexport const EmailField = genericMemo(EmailFieldImpl);\r\n\r\nexport interface EmailFieldProps<\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n> extends FieldProps<RecordType>,\r\n        Omit<LinkProps, 'textAlign'> {}\r\n\r\n// useful to prevent click bubbling in a Datagrid with rowClick\r\nconst stopPropagation = e => e.stopPropagation();\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useRecordContext, useTranslate } from 'ra-core';\r\n\r\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\r\nimport { FieldProps, fieldPropTypes } from './types';\r\nimport { SxProps } from '@mui/system';\r\nimport { Link } from '@mui/material';\r\n\r\n/**\r\n * Render a link to a file based on a path contained in a record field\r\n *\r\n * @example\r\n * import { FileField } from 'react-admin';\r\n *\r\n * <FileField source=\"url\" title=\"title\" />\r\n *\r\n * // renders the record { id: 123, url: 'doc.pdf', title: 'Presentation' } as\r\n * <div>\r\n *     <a href=\"doc.pdf\" title=\"Presentation\">Presentation</a>\r\n * </div>\r\n */\r\nexport const FileField = <\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n>(\r\n    props: FileFieldProps<RecordType>\r\n) => {\r\n    const {\r\n        className,\r\n        emptyText,\r\n        source,\r\n        title,\r\n        src,\r\n        target,\r\n        download,\r\n        ping,\r\n        rel,\r\n        ...rest\r\n    } = props;\r\n    const record = useRecordContext(props);\r\n    const sourceValue = get(record, source);\r\n    const translate = useTranslate();\r\n\r\n    if (!sourceValue) {\r\n        return emptyText ? (\r\n            <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={className}\r\n                {...sanitizeFieldRestProps(rest)}\r\n            >\r\n                {emptyText && translate(emptyText, { _: emptyText })}\r\n            </Typography>\r\n        ) : (\r\n            <Root className={className} {...sanitizeFieldRestProps(rest)} />\r\n        );\r\n    }\r\n\r\n    if (Array.isArray(sourceValue)) {\r\n        return (\r\n            <StyledList className={className} {...sanitizeFieldRestProps(rest)}>\r\n                {sourceValue.map((file, index) => {\r\n                    const fileTitleValue = get(file, title) || title;\r\n                    const srcValue = get(file, src) || title;\r\n\r\n                    return (\r\n                        <li key={index}>\r\n                            <Link\r\n                                href={srcValue}\r\n                                title={fileTitleValue}\r\n                                target={target}\r\n                                download={download}\r\n                                ping={ping}\r\n                                rel={rel}\r\n                                variant=\"body2\"\r\n                                onClick={e => e.stopPropagation()}\r\n                            >\r\n                                {fileTitleValue}\r\n                            </Link>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </StyledList>\r\n        );\r\n    }\r\n\r\n    const titleValue = get(record, title)?.toString() || title;\r\n\r\n    return (\r\n        <Root className={className} {...sanitizeFieldRestProps(rest)}>\r\n            <Link\r\n                href={sourceValue?.toString()}\r\n                title={titleValue}\r\n                target={target}\r\n                download={download}\r\n                ping={ping}\r\n                rel={rel}\r\n                variant=\"body2\"\r\n            >\r\n                {titleValue}\r\n            </Link>\r\n        </Root>\r\n    );\r\n};\r\n\r\nexport interface FileFieldProps<\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n> extends FieldProps<RecordType> {\r\n    src?: string;\r\n    title?: string;\r\n    target?: string;\r\n    download?: boolean | string;\r\n    ping?: string;\r\n    rel?: string;\r\n    sx?: SxProps;\r\n}\r\n\r\nFileField.propTypes = {\r\n    ...fieldPropTypes,\r\n    src: PropTypes.string,\r\n    title: PropTypes.string,\r\n    target: PropTypes.string,\r\n    download: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    ping: PropTypes.string,\r\n    rel: PropTypes.string,\r\n};\r\n\r\nconst PREFIX = 'RaFileField';\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})({\r\n    display: 'inline-block',\r\n});\r\n\r\nconst StyledList = styled('ul')({\r\n    display: 'inline-block',\r\n});\r\n", "import * as React from 'react';\r\nimport { useMemo, ReactNode } from 'react';\r\nimport { useRecordContext } from 'ra-core';\r\nimport PropTypes from 'prop-types';\r\nimport Typography, { TypographyProps } from '@mui/material/Typography';\r\n\r\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\r\nimport { FieldProps, fieldPropTypes } from './types';\r\n\r\n/**\r\n * Field using a render function\r\n *\r\n * @example\r\n * <FunctionField\r\n *     source=\"last_name\" // used for sorting\r\n *     label=\"Name\"\r\n *     render={record => `${record.first_name} ${record.last_name}`}\r\n * />\r\n */\r\n\r\nexport const FunctionField = <RecordType extends Record<string, any> = any>(\r\n    props: FunctionFieldProps<RecordType>\r\n) => {\r\n    const { className, source = '', render, ...rest } = props;\r\n    const record = useRecordContext(props);\r\n    return useMemo(\r\n        () =>\r\n            record ? (\r\n                <Typography\r\n                    component=\"span\"\r\n                    variant=\"body2\"\r\n                    className={className}\r\n                    {...sanitizeFieldRestProps(rest)}\r\n                >\r\n                    {render(record, source)}\r\n                </Typography>\r\n            ) : null,\r\n        [className, record, source, render, rest]\r\n    );\r\n};\r\n\r\nFunctionField.propTypes = {\r\n    // @ts-ignore\r\n    ...Typography.propTypes,\r\n    ...fieldPropTypes,\r\n    render: PropTypes.func.isRequired,\r\n};\r\n\r\nexport interface FunctionFieldProps<\r\n    RecordType extends Record<string, any> = any\r\n> extends FieldProps<RecordType>,\r\n        Omit<TypographyProps, 'textAlign'> {\r\n    render: (record: RecordType, source?: string) => ReactNode;\r\n}\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Typography } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\nimport { useRecordContext, useTranslate } from 'ra-core';\r\n\r\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\r\nimport { FieldProps, fieldPropTypes } from './types';\r\nimport { SxProps } from '@mui/system';\r\n\r\nexport const ImageField = <\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n>(\r\n    props: ImageFieldProps<RecordType>\r\n) => {\r\n    const { className, emptyText, source, src, title, ...rest } = props;\r\n    const record = useRecordContext(props);\r\n    const sourceValue = get(record, source);\r\n    const translate = useTranslate();\r\n\r\n    if (!sourceValue) {\r\n        return emptyText ? (\r\n            <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={className}\r\n                {...sanitizeFieldRestProps(rest)}\r\n            >\r\n                {emptyText && translate(emptyText, { _: emptyText })}\r\n            </Typography>\r\n        ) : (\r\n            <Typography\r\n                component=\"div\"\r\n                className={className}\r\n                {...sanitizeFieldRestProps(rest)}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (Array.isArray(sourceValue)) {\r\n        return (\r\n            <Root className={className} {...sanitizeFieldRestProps(rest)}>\r\n                <ul className={ImageFieldClasses.list}>\r\n                    {sourceValue.map((file, index) => {\r\n                        const fileTitleValue = get(file, title) || title;\r\n                        const srcValue = get(file, src) || title;\r\n\r\n                        return (\r\n                            <li key={index}>\r\n                                <img\r\n                                    alt={fileTitleValue}\r\n                                    title={fileTitleValue}\r\n                                    src={srcValue}\r\n                                    className={ImageFieldClasses.image}\r\n                                />\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </Root>\r\n        );\r\n    }\r\n\r\n    const titleValue = get(record, title)?.toString() || title;\r\n\r\n    return (\r\n        <Root className={className} {...sanitizeFieldRestProps(rest)}>\r\n            <img\r\n                title={titleValue}\r\n                alt={titleValue}\r\n                src={sourceValue?.toString()}\r\n                className={ImageFieldClasses.image}\r\n            />\r\n        </Root>\r\n    );\r\n};\r\n\r\n// What? TypeScript loses the displayName if we don't set it explicitly\r\nImageField.displayName = 'ImageField';\r\n\r\nImageField.propTypes = {\r\n    ...fieldPropTypes,\r\n    src: PropTypes.string,\r\n    title: PropTypes.string,\r\n};\r\n\r\nconst PREFIX = 'RaImageField';\r\n\r\nexport const ImageFieldClasses = {\r\n    list: `${PREFIX}-list`,\r\n    image: `${PREFIX}-image`,\r\n};\r\n\r\nconst Root = styled(Box, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})({\r\n    [`& .${ImageFieldClasses.list}`]: {\r\n        display: 'flex',\r\n        listStyleType: 'none',\r\n    },\r\n    [`& .${ImageFieldClasses.image}`]: {\r\n        margin: '0.25rem',\r\n        width: 200,\r\n        height: 100,\r\n        objectFit: 'contain',\r\n    },\r\n});\r\n\r\nexport interface ImageFieldProps<\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n> extends FieldProps<RecordType> {\r\n    src?: string;\r\n    title?: string;\r\n    sx?: SxProps;\r\n}\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\nimport Typography, { TypographyProps } from '@mui/material/Typography';\r\nimport { useRecordContext, useTranslate } from 'ra-core';\r\n\r\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\r\nimport { FieldProps, fieldPropTypes } from './types';\r\nimport { genericMemo } from './genericMemo';\r\n\r\n/**\r\n * Display a numeric value as a locale string.\r\n *\r\n * Uses Intl.NumberFormat() if available, passing the locales and options props as arguments.\r\n * If Intl is not available, it outputs number as is (and ignores the locales and options props).\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString\r\n * @example\r\n * <NumberField source=\"score\" />\r\n * // renders the record { id: 1234, score: 567 } as\r\n * <span>567</span>\r\n *\r\n * <NumberField source=\"score\" className=\"red\" />\r\n * // renders the record { id: 1234, score: 567 } as\r\n * <span class=\"red\">567</span>\r\n *\r\n * <NumberField source=\"share\" options={{ style: 'percent' }} />\r\n * // renders the record { id: 1234, share: 0.2545 } as\r\n * <span>25%</span>\r\n *\r\n * <NumberField source=\"price\" options={{ style: 'currency', currency: 'USD' }} />\r\n * // renders the record { id: 1234, price: 25.99 } as\r\n * <span>$25.99</span>\r\n *\r\n * <NumberField source=\"price\" locales=\"fr-FR\" options={{ style: 'currency', currency: 'USD' }} />\r\n * // renders the record { id: 1234, price: 25.99 } as\r\n * <span>25,99 $US</span>\r\n */\r\nconst NumberFieldImpl = <\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n>(\r\n    props: NumberFieldProps<RecordType>\r\n) => {\r\n    const {\r\n        className,\r\n        emptyText,\r\n        source,\r\n        locales,\r\n        options,\r\n        textAlign,\r\n        transform = defaultTransform,\r\n        ...rest\r\n    } = props;\r\n    const record = useRecordContext<RecordType>(props);\r\n    const translate = useTranslate();\r\n\r\n    if (!record) {\r\n        return null;\r\n    }\r\n    let value: any = get(record, source);\r\n\r\n    if (value == null) {\r\n        return emptyText ? (\r\n            <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={className}\r\n                {...sanitizeFieldRestProps(rest)}\r\n            >\r\n                {emptyText && translate(emptyText, { _: emptyText })}\r\n            </Typography>\r\n        ) : null;\r\n    }\r\n\r\n    if (transform) {\r\n        value = transform(value);\r\n    }\r\n\r\n    return (\r\n        <Typography\r\n            variant=\"body2\"\r\n            component=\"span\"\r\n            className={className}\r\n            {...sanitizeFieldRestProps(rest)}\r\n        >\r\n            {hasNumberFormat && typeof value === 'number'\r\n                ? value.toLocaleString(locales, options)\r\n                : value}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst defaultTransform = value =>\r\n    value && typeof value === 'string' && !isNaN(value as any) ? +value : value;\r\n\r\nNumberFieldImpl.propTypes = {\r\n    // @ts-ignore\r\n    ...Typography.propTypes,\r\n    ...fieldPropTypes,\r\n    locales: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.arrayOf(PropTypes.string),\r\n    ]),\r\n    options: PropTypes.object,\r\n};\r\n\r\n// what? TypeScript loses the displayName if we don't set it explicitly\r\nNumberFieldImpl.displayName = 'NumberFieldImpl';\r\nNumberFieldImpl.defaultProps = {\r\n    textAlign: 'right',\r\n};\r\n\r\nexport const NumberField = genericMemo(NumberFieldImpl);\r\n\r\nexport interface NumberFieldProps<\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n> extends FieldProps<RecordType>,\r\n        Omit<TypographyProps, 'textAlign'> {\r\n    locales?: string | string[];\r\n    options?: object;\r\n    transform?: (value: any) => number;\r\n}\r\n\r\nconst hasNumberFormat = !!(\r\n    typeof Intl === 'object' &&\r\n    Intl &&\r\n    typeof Intl.NumberFormat === 'function'\r\n);\r\n", "import * as React from 'react';\r\nimport { FC, memo, ReactElement, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    ListContextProvider,\r\n    useListContext,\r\n    ListControllerProps,\r\n    useReferenceArrayFieldController,\r\n    SortPayload,\r\n    FilterPayload,\r\n    ResourceContextProvider,\r\n    useRecordContext,\r\n    useResourceDefinition,\r\n    RaRecord,\r\n} from 'ra-core';\r\nimport { styled } from '@mui/material/styles';\r\nimport { SxProps } from '@mui/system';\r\n\r\nimport { fieldPropTypes, FieldProps } from './types';\r\nimport { LinearProgress } from '../layout';\r\nimport { SingleFieldList } from '../list/SingleFieldList';\r\nimport { ChipField } from './ChipField';\r\n\r\n/**\r\n * A container component that fetches records from another resource specified\r\n * by an array of *ids* in current record.\r\n *\r\n * You must define the fields to be passed to the iterator component as children.\r\n *\r\n * @example Display all the products of the current order as datagrid\r\n * // order = {\r\n * //   id: 123,\r\n * //   product_ids: [456, 457, 458],\r\n * // }\r\n * <ReferenceArrayField label=\"Products\" reference=\"products\" source=\"product_ids\">\r\n *     <Datagrid>\r\n *         <TextField source=\"id\" />\r\n *         <TextField source=\"description\" />\r\n *         <NumberField source=\"price\" options={{ style: 'currency', currency: 'USD' }} />\r\n *         <EditButton />\r\n *     </Datagrid>\r\n * </ReferenceArrayField>\r\n *\r\n * @example Display all the categories of the current product as a list of chips\r\n * // product = {\r\n * //   id: 456,\r\n * //   category_ids: [11, 22, 33],\r\n * // }\r\n * <ReferenceArrayField label=\"Categories\" reference=\"categories\" source=\"category_ids\">\r\n *     <SingleFieldList>\r\n *         <ChipField source=\"name\" />\r\n *     </SingleFieldList>\r\n * </ReferenceArrayField>\r\n *\r\n * By default, restricts the displayed values to 1000. You can extend this limit\r\n * by setting the `perPage` prop.\r\n *\r\n * @example\r\n * <ReferenceArrayField perPage={10} reference=\"categories\" source=\"category_ids\">\r\n *    ...\r\n * </ReferenceArrayField>\r\n *\r\n * By default, the field displays the results in the order in which they are referenced\r\n * (i.e. in the order of the list of ids). You can change this order\r\n * by setting the `sort` prop (an object with `field` and `order` properties).\r\n *\r\n * @example\r\n * <ReferenceArrayField sort={{ field: 'name', order: 'ASC' }} reference=\"categories\" source=\"category_ids\">\r\n *    ...\r\n * </ReferenceArrayField>\r\n *\r\n * Also, you can filter the results to display only a subset of values. Use the\r\n * `filter` prop for that.\r\n *\r\n * @example\r\n * <ReferenceArrayField filter={{ is_published: true }} reference=\"categories\" source=\"category_ids\">\r\n *    ...\r\n * </ReferenceArrayField>\r\n */\r\nexport const ReferenceArrayField = <\r\n    RecordType extends RaRecord = RaRecord,\r\n    ReferenceRecordType extends RaRecord = RaRecord\r\n>(\r\n    props: ReferenceArrayFieldProps<RecordType>\r\n) => {\r\n    const {\r\n        filter,\r\n        page = 1,\r\n        perPage,\r\n        reference,\r\n        resource,\r\n        sort,\r\n        source,\r\n    } = props;\r\n    const record = useRecordContext(props);\r\n    const controllerProps = useReferenceArrayFieldController<\r\n        RecordType,\r\n        ReferenceRecordType\r\n    >({\r\n        filter,\r\n        page,\r\n        perPage,\r\n        record,\r\n        reference,\r\n        resource,\r\n        sort,\r\n        source,\r\n    });\r\n    return (\r\n        <ResourceContextProvider value={reference}>\r\n            <ListContextProvider value={controllerProps}>\r\n                <PureReferenceArrayFieldView {...props} />\r\n            </ListContextProvider>\r\n        </ResourceContextProvider>\r\n    );\r\n};\r\n\r\nReferenceArrayField.propTypes = {\r\n    ...fieldPropTypes,\r\n    className: PropTypes.string,\r\n    children: PropTypes.node,\r\n    label: fieldPropTypes.label,\r\n    record: PropTypes.any,\r\n    reference: PropTypes.string.isRequired,\r\n    resource: PropTypes.string,\r\n    sortBy: PropTypes.string,\r\n    sortByOrder: fieldPropTypes.sortByOrder,\r\n    source: PropTypes.string.isRequired,\r\n};\r\n\r\nexport interface ReferenceArrayFieldProps<\r\n    RecordType extends RaRecord = RaRecord\r\n> extends FieldProps<RecordType> {\r\n    children?: ReactNode;\r\n    filter?: FilterPayload;\r\n    page?: number;\r\n    pagination?: ReactElement;\r\n    perPage?: number;\r\n    reference: string;\r\n    sort?: SortPayload;\r\n    sx?: SxProps;\r\n}\r\n\r\nexport interface ReferenceArrayFieldViewProps\r\n    extends Omit<ReferenceArrayFieldProps, 'resource' | 'page' | 'perPage'>,\r\n        ListControllerProps {}\r\n\r\nexport const ReferenceArrayFieldView: FC<ReferenceArrayFieldViewProps> = props => {\r\n    const { children, pagination, reference, className, sx } = props;\r\n    const { isLoading, total } = useListContext(props);\r\n\r\n    const { recordRepresentation } = useResourceDefinition({\r\n        resource: reference,\r\n    });\r\n    let child = children ? (\r\n        children\r\n    ) : (\r\n        <SingleFieldList>\r\n            <ChipField\r\n                source={\r\n                    typeof recordRepresentation === 'string'\r\n                        ? recordRepresentation\r\n                        : 'id'\r\n                }\r\n                size=\"small\"\r\n            />\r\n        </SingleFieldList>\r\n    );\r\n\r\n    return (\r\n        <Root className={className} sx={sx}>\r\n            {isLoading ? (\r\n                <LinearProgress\r\n                    className={ReferenceArrayFieldClasses.progress}\r\n                />\r\n            ) : (\r\n                <span>\r\n                    {child}\r\n                    {pagination && total !== undefined ? pagination : null}\r\n                </span>\r\n            )}\r\n        </Root>\r\n    );\r\n};\r\n\r\nReferenceArrayFieldView.propTypes = {\r\n    className: PropTypes.string,\r\n    children: PropTypes.node,\r\n    reference: PropTypes.string.isRequired,\r\n};\r\n\r\nconst PREFIX = 'RaReferenceArrayField';\r\n\r\nexport const ReferenceArrayFieldClasses = {\r\n    progress: `${PREFIX}-progress`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    [`& .${ReferenceArrayFieldClasses.progress}`]: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst PureReferenceArrayFieldView = memo(ReferenceArrayFieldView);\r\n", "import * as React from 'react';\r\nimport { LinearProgress, styled, SxProps } from '@mui/material';\r\nimport {\r\n    cloneElement,\r\n    Children,\r\n    HtmlHTMLAttributes,\r\n    ComponentType,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    sanitizeListRestProps,\r\n    useListContext,\r\n    useResourceContext,\r\n    RaRecord,\r\n    RecordContextProvider,\r\n    ComponentPropType,\r\n    useCreatePath,\r\n} from 'ra-core';\r\n\r\nimport { Link } from '../Link';\r\n\r\n/**\r\n * Iterator component to be used to display a list of entities, using a single field\r\n *\r\n * @example Display all the books by the current author\r\n * <ReferenceManyField reference=\"books\" target=\"author_id\">\r\n *     <SingleFieldList>\r\n *         <ChipField source=\"title\" />\r\n *     </SingleFieldList>\r\n * </ReferenceManyField>\r\n *\r\n * By default, it includes a link to the <Edit> page of the related record\r\n * (`/books/:id` in the previous example).\r\n *\r\n * Set the linkType prop to \"show\" to link to the <Show> page instead.\r\n *\r\n * @example\r\n * <ReferenceManyField reference=\"books\" target=\"author_id\">\r\n *     <SingleFieldList linkType=\"show\">\r\n *         <ChipField source=\"title\" />\r\n *     </SingleFieldList>\r\n * </ReferenceManyField>\r\n *\r\n * You can also prevent `<SingleFieldList>` from adding link to children by setting\r\n * `linkType` to false.\r\n *\r\n * @example\r\n * <ReferenceManyField reference=\"books\" target=\"author_id\">\r\n *     <SingleFieldList linkType={false}>\r\n *         <ChipField source=\"title\" />\r\n *     </SingleFieldList>\r\n * </ReferenceManyField>\r\n */\r\nexport const SingleFieldList = (props: SingleFieldListProps) => {\r\n    const {\r\n        className,\r\n        children,\r\n        linkType = 'edit',\r\n        component: Component = Root,\r\n        ...rest\r\n    } = props;\r\n    const { data, isLoading } = useListContext(props);\r\n    const resource = useResourceContext(props);\r\n    const createPath = useCreatePath();\r\n\r\n    if (isLoading === true) {\r\n        return <LinearProgress />;\r\n    }\r\n\r\n    return (\r\n        <Component className={className} {...sanitizeListRestProps(rest)}>\r\n            {data.map((record, rowIndex) => {\r\n                const resourceLinkPath = !linkType\r\n                    ? false\r\n                    : createPath({\r\n                          resource,\r\n                          type: linkType,\r\n                          id: record.id,\r\n                      });\r\n\r\n                if (resourceLinkPath) {\r\n                    return (\r\n                        <RecordContextProvider\r\n                            value={record}\r\n                            key={record.id ?? `row${rowIndex}`}\r\n                        >\r\n                            <Link\r\n                                className={SingleFieldListClasses.link}\r\n                                to={resourceLinkPath}\r\n                                onClick={stopPropagation}\r\n                            >\r\n                                {cloneElement(Children.only(children), {\r\n                                    record,\r\n                                    resource,\r\n                                    // Workaround to force ChipField to be clickable\r\n                                    onClick: handleClick,\r\n                                })}\r\n                            </Link>\r\n                        </RecordContextProvider>\r\n                    );\r\n                }\r\n\r\n                return (\r\n                    <RecordContextProvider\r\n                        value={record}\r\n                        key={record.id ?? `row${rowIndex}`}\r\n                    >\r\n                        {children}\r\n                    </RecordContextProvider>\r\n                );\r\n            })}\r\n        </Component>\r\n    );\r\n};\r\n\r\nSingleFieldList.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    classes: PropTypes.object,\r\n    className: PropTypes.string,\r\n    component: ComponentPropType,\r\n    data: PropTypes.any,\r\n    ids: PropTypes.array,\r\n    // @ts-ignore\r\n    linkType: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n    resource: PropTypes.string,\r\n    sx: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(\r\n            PropTypes.oneOfType([\r\n                PropTypes.func,\r\n                PropTypes.object,\r\n                PropTypes.bool,\r\n            ])\r\n        ),\r\n        PropTypes.func,\r\n        PropTypes.object,\r\n    ]),\r\n};\r\n\r\nexport interface SingleFieldListProps<RecordType extends RaRecord = any>\r\n    extends HtmlHTMLAttributes<HTMLDivElement> {\r\n    className?: string;\r\n\r\n    component?: string | ComponentType<any>;\r\n    linkType?: string | false;\r\n    children: React.ReactElement;\r\n    // can be injected when using the component without context\r\n    data?: RecordType[];\r\n    total?: number;\r\n    loaded?: boolean;\r\n    sx?: SxProps;\r\n}\r\n\r\nconst PREFIX = 'RaSingleFieldList';\r\n\r\nexport const SingleFieldListClasses = {\r\n    link: `${PREFIX}-link`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n\r\n    [`& .${SingleFieldListClasses.link}`]: {\r\n        textDecoration: 'none',\r\n        '& > *': {\r\n            color: theme.palette.primary.main,\r\n        },\r\n    },\r\n}));\r\n\r\n// useful to prevent click bubbling in a datagrid with rowClick\r\nconst stopPropagation = e => e.stopPropagation();\r\n\r\n// Our handleClick does nothing as we wrap the children inside a Link but it is\r\n// required by ChipField, which uses a Chip from Material UI.\r\n// The Material UI Chip requires an onClick handler to behave like a clickable element.\r\nconst handleClick = () => {};\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { Link as RRLink, LinkProps as RRLinkProps } from 'react-router-dom';\r\nimport {\r\n    styled,\r\n    Link as MuiLink,\r\n    LinkProps as MuiLinkProps,\r\n} from '@mui/material';\r\n\r\nexport const Link = (props: LinkProps) => {\r\n    const { to, children, className, ...rest } = props;\r\n\r\n    return (\r\n        <StyledMuiLink\r\n            component={RRLink}\r\n            to={to}\r\n            className={clsx(LinkClasses.link, className)}\r\n            underline=\"none\"\r\n            {...rest}\r\n        >\r\n            {children}\r\n        </StyledMuiLink>\r\n    );\r\n};\r\n\r\nconst PREFIX = 'RaLink';\r\n\r\nexport const LinkClasses = {\r\n    link: `${PREFIX}-link`,\r\n};\r\n\r\nconst StyledMuiLink = styled(MuiLink)({}) as typeof MuiLink; // @see https://mui.com/material-ui/guides/typescript/#complications-with-the-component-prop\r\n\r\n// @see https://mui.com/material-ui/guides/composition/#with-typescript\r\nexport interface LinkProps\r\n    extends MuiLinkProps<React.ElementType<any>, RRLinkProps> {\r\n    className?: string;\r\n}\r\n\r\nLink.propTypes = {\r\n    className: PropTypes.string,\r\n    children: PropTypes.node,\r\n    to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n};\r\n", "import * as React from 'react';\r\nimport { ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\nimport { Typography, SxProps } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport {\r\n    useReference,\r\n    UseReferenceResult,\r\n    LinkToType,\r\n    ResourceContextProvider,\r\n    RecordContextProvider,\r\n    useRecordContext,\r\n    useCreatePath,\r\n    Identifier,\r\n    useGetRecordRepresentation,\r\n    useResourceDefinition,\r\n    useTranslate,\r\n    RaRecord,\r\n} from 'ra-core';\r\nimport { UseQueryOptions } from 'react-query';\r\n\r\nimport { LinearProgress } from '../layout';\r\nimport { Link } from '../Link';\r\nimport { FieldProps, fieldPropTypes } from './types';\r\nimport { genericMemo } from './genericMemo';\r\n\r\n/**\r\n * Fetch reference record, and render its representation, or delegate rendering to child component.\r\n *\r\n * The reference prop should be the name of one of the <Resource> components\r\n * added as <Admin> child.\r\n *\r\n * @example // using recordRepresentation\r\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" />\r\n *\r\n * @example // using a Field component to represent the record\r\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\">\r\n *     <TextField source=\"name\" />\r\n * </ReferenceField>\r\n *\r\n * @example // By default, includes a link to the <Edit> page of the related record\r\n * // (`/users/:userId` in the previous example).\r\n * // Set the `link` prop to \"show\" to link to the <Show> page instead.\r\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link=\"show\" />\r\n *\r\n * @example // You can also prevent `<ReferenceField>` from adding link to children\r\n * // by setting `link` to false.\r\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link={false} />\r\n *\r\n * @example // Alternatively, you can also pass a custom function to `link`.\r\n * // It must take reference and record as arguments and return a string\r\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link={(record, reference) => \"/path/to/${reference}/${record}\"} />\r\n *\r\n * @default\r\n * In previous versions of React-Admin, the prop `linkType` was used. It is now deprecated and replaced with `link`. However\r\n * backward-compatibility is still kept\r\n */\r\nexport const ReferenceField = <\r\n    RecordType extends Record<string, any> = Record<string, any>,\r\n    ReferenceRecordType extends RaRecord = RaRecord\r\n>(\r\n    props: ReferenceFieldProps<RecordType, ReferenceRecordType>\r\n) => {\r\n    const { source, emptyText, link = 'edit', ...rest } = props;\r\n    const record = useRecordContext<RecordType>(props);\r\n    const id = get(record, source);\r\n    const translate = useTranslate();\r\n\r\n    return id == null ? (\r\n        emptyText ? (\r\n            <Typography component=\"span\" variant=\"body2\">\r\n                {emptyText && translate(emptyText, { _: emptyText })}\r\n            </Typography>\r\n        ) : null\r\n    ) : (\r\n        <NonEmptyReferenceField<RecordType, ReferenceRecordType>\r\n            {...rest}\r\n            link={link}\r\n            emptyText={emptyText}\r\n            record={record}\r\n            id={id as Identifier}\r\n        />\r\n    );\r\n};\r\n\r\nReferenceField.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    cellClassName: PropTypes.string,\r\n    headerClassName: PropTypes.string,\r\n    label: fieldPropTypes.label,\r\n    record: PropTypes.any,\r\n    reference: PropTypes.string.isRequired,\r\n    resource: PropTypes.string,\r\n    sortBy: PropTypes.string,\r\n    sortByOrder: fieldPropTypes.sortByOrder,\r\n    source: PropTypes.string.isRequired,\r\n    translateChoice: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\r\n    // @ts-ignore\r\n    link: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.func,\r\n    ]),\r\n};\r\n\r\nexport interface ReferenceFieldProps<\r\n    RecordType extends Record<string, any> = Record<string, any>,\r\n    ReferenceRecordType extends RaRecord = RaRecord\r\n> extends Omit<FieldProps<RecordType>, 'source'>,\r\n        Required<Pick<FieldProps<RecordType>, 'source'>> {\r\n    children?: ReactNode;\r\n    queryOptions?: UseQueryOptions<ReferenceRecordType[], Error> & {\r\n        meta?: any;\r\n    };\r\n    reference: string;\r\n    translateChoice?: Function | boolean;\r\n    link?: LinkToType<ReferenceRecordType>;\r\n    sx?: SxProps;\r\n}\r\n\r\n/**\r\n * This intermediate component is made necessary by the useReference hook,\r\n * which cannot be called conditionally when get(record, source) is empty.\r\n */\r\nexport const NonEmptyReferenceField = <\r\n    RecordType extends Record<string, any> = Record<string, any>,\r\n    ReferenceRecordType extends RaRecord = RaRecord\r\n>({\r\n    children,\r\n    id,\r\n    reference,\r\n    queryOptions,\r\n    link,\r\n    ...props\r\n}: Omit<ReferenceFieldProps<RecordType, ReferenceRecordType>, 'source'> & {\r\n    id: Identifier;\r\n}) => {\r\n    return (\r\n        <ResourceContextProvider value={reference}>\r\n            {/* @ts-ignore */}\r\n            <PureReferenceFieldView<RecordType, ReferenceRecordType>\r\n                reference={reference}\r\n                {...props}\r\n                {...useReference<ReferenceRecordType>({\r\n                    reference,\r\n                    id,\r\n                    options: queryOptions,\r\n                })}\r\n                resourceLinkPath={link}\r\n            >\r\n                {children}\r\n            </PureReferenceFieldView>\r\n        </ResourceContextProvider>\r\n    );\r\n};\r\n\r\n// useful to prevent click bubbling in a datagrid with rowClick\r\nconst stopPropagation = e => e.stopPropagation();\r\n\r\nexport const ReferenceFieldView = <\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n>(\r\n    props: ReferenceFieldViewProps<RecordType>\r\n) => {\r\n    const {\r\n        children,\r\n        className,\r\n        emptyText,\r\n        error,\r\n        isLoading,\r\n        reference,\r\n        referenceRecord,\r\n        resourceLinkPath,\r\n        sx,\r\n    } = props;\r\n    const getRecordRepresentation = useGetRecordRepresentation(reference);\r\n    const translate = useTranslate();\r\n    const createPath = useCreatePath();\r\n    const resourceDefinition = useResourceDefinition({ resource: reference });\r\n\r\n    if (error) {\r\n        return (\r\n            /* eslint-disable jsx-a11y/role-supports-aria-props */\r\n            <ErrorIcon\r\n                aria-errormessage={error.message ? error.message : error}\r\n                role=\"presentation\"\r\n                color=\"error\"\r\n                fontSize=\"small\"\r\n            />\r\n            /* eslint-enable */\r\n        );\r\n    }\r\n    if (isLoading) {\r\n        return <LinearProgress />;\r\n    }\r\n    if (!referenceRecord) {\r\n        return emptyText ? (\r\n            <>{emptyText && translate(emptyText, { _: emptyText })}</>\r\n        ) : null;\r\n    }\r\n\r\n    const link =\r\n        resourceLinkPath === false ||\r\n        (resourceLinkPath === 'edit' && !resourceDefinition.hasEdit) ||\r\n        (resourceLinkPath === 'show' && !resourceDefinition.hasShow)\r\n            ? false\r\n            : createPath({\r\n                  resource: reference,\r\n                  id: referenceRecord.id,\r\n                  type:\r\n                      typeof resourceLinkPath === 'function'\r\n                          ? resourceLinkPath(referenceRecord, reference)\r\n                          : resourceLinkPath,\r\n              });\r\n\r\n    let child = children || (\r\n        <Typography component=\"span\" variant=\"body2\">\r\n            {getRecordRepresentation(referenceRecord)}\r\n        </Typography>\r\n    );\r\n\r\n    if (link) {\r\n        return (\r\n            <Root className={className} sx={sx}>\r\n                <RecordContextProvider value={referenceRecord}>\r\n                    <Link\r\n                        to={link}\r\n                        className={ReferenceFieldClasses.link}\r\n                        onClick={stopPropagation}\r\n                    >\r\n                        {child}\r\n                    </Link>\r\n                </RecordContextProvider>\r\n            </Root>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <RecordContextProvider value={referenceRecord}>\r\n            {child}\r\n        </RecordContextProvider>\r\n    );\r\n};\r\n\r\nReferenceFieldView.propTypes = {\r\n    children: PropTypes.element,\r\n    className: PropTypes.string,\r\n    isLoading: PropTypes.bool,\r\n    record: PropTypes.any,\r\n    reference: PropTypes.string,\r\n    referenceRecord: PropTypes.any,\r\n    resource: PropTypes.string,\r\n    // @ts-ignore\r\n    resourceLinkPath: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.func,\r\n    ]).isRequired,\r\n    source: PropTypes.string,\r\n    translateChoice: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\r\n};\r\n\r\nexport interface ReferenceFieldViewProps<\r\n    RecordType extends Record<string, any> = Record<string, any>,\r\n    ReferenceRecordType extends RaRecord = RaRecord\r\n> extends FieldProps<RecordType>,\r\n        UseReferenceResult {\r\n    children?: ReactNode;\r\n    reference: string;\r\n    resource?: string;\r\n    translateChoice?: Function | boolean;\r\n    resourceLinkPath?: LinkToType<ReferenceRecordType>;\r\n    sx?: SxProps;\r\n}\r\n\r\nconst PureReferenceFieldView = genericMemo(ReferenceFieldView);\r\n\r\nconst PREFIX = 'RaReferenceField';\r\n\r\nexport const ReferenceFieldClasses = {\r\n    link: `${PREFIX}-link`,\r\n};\r\n\r\nconst Root = styled('span', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    lineHeight: 'initial',\r\n    [`& .${ReferenceFieldClasses.link}`]: {\r\n        '& > *': {\r\n            color: theme.palette.primary.main,\r\n        },\r\n    },\r\n}));\r\n", "import React from 'react';\r\nimport {\r\n    useReferenceManyFieldController,\r\n    useRecordContext,\r\n    useTimeout,\r\n    useCreatePath,\r\n    SortPayload,\r\n    RaRecord,\r\n} from 'ra-core';\r\nimport { Typography, TypographyProps, CircularProgress } from '@mui/material';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\n\r\nimport { FieldProps } from './types';\r\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\r\nimport { Link } from '../Link';\r\n\r\n/**\r\n * Fetch and render the number of records related to the current one\r\n *\r\n * Relies on dataProvider.getManyReference() returning a total property\r\n *\r\n * @example // Display the number of comments for the current post\r\n * <ReferenceManyCount reference=\"comments\" target=\"post_id\" />\r\n *\r\n * @example // Display the number of published comments for the current post\r\n * <ReferenceManyCount reference=\"comments\" target=\"post_id\" filter={{ is_published: true }} />\r\n *\r\n * @example // Display the number of comments for the current post, with a custom Typography variant\r\n * <ReferenceManyCount reference=\"comments\" target=\"post_id\" variant=\"h1\" />\r\n */\r\nexport const ReferenceManyCount = <RecordType extends RaRecord = RaRecord>(\r\n    props: ReferenceManyCountProps<RecordType>\r\n) => {\r\n    const {\r\n        reference,\r\n        target,\r\n        filter,\r\n        sort,\r\n        link,\r\n        resource,\r\n        source = 'id',\r\n        timeout = 1000,\r\n        ...rest\r\n    } = props;\r\n    const record = useRecordContext(props);\r\n    const oneSecondHasPassed = useTimeout(timeout);\r\n    const createPath = useCreatePath();\r\n\r\n    const { isLoading, error, total } = useReferenceManyFieldController<\r\n        RecordType\r\n    >({\r\n        filter,\r\n        sort,\r\n        page: 1,\r\n        perPage: 1,\r\n        record,\r\n        reference,\r\n        // @ts-ignore remove when #8491 is released\r\n        resource,\r\n        source,\r\n        target,\r\n    });\r\n\r\n    const body = isLoading ? (\r\n        oneSecondHasPassed ? (\r\n            <CircularProgress size={14} />\r\n        ) : (\r\n            ''\r\n        )\r\n    ) : error ? (\r\n        <ErrorIcon color=\"error\" fontSize=\"small\" titleAccess=\"error\" />\r\n    ) : (\r\n        total\r\n    );\r\n\r\n    return link ? (\r\n        <Link\r\n            to={{\r\n                pathname: createPath({ resource: reference, type: 'list' }),\r\n                search: `filter=${JSON.stringify({\r\n                    ...(filter || {}),\r\n                    [target]: record[source],\r\n                })}`,\r\n            }}\r\n            variant=\"body2\"\r\n            onClick={e => e.stopPropagation()}\r\n            {...sanitizeFieldRestProps(rest)}\r\n        >\r\n            {body}\r\n        </Link>\r\n    ) : (\r\n        <Typography\r\n            component=\"span\"\r\n            variant=\"body2\"\r\n            {...sanitizeFieldRestProps(rest)}\r\n        >\r\n            {body}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nexport interface ReferenceManyCountProps<RecordType extends RaRecord = RaRecord>\r\n    extends FieldProps<RecordType>,\r\n        Omit<TypographyProps, 'textAlign'> {\r\n    reference: string;\r\n    target: string;\r\n    sort?: SortPayload;\r\n    filter?: any;\r\n    link?: boolean;\r\n    timeout?: number;\r\n}\r\n", "import React, { FC, ReactElement, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    FilterPayload,\r\n    SortPayload,\r\n    useReferenceManyFieldController,\r\n    ListContextProvider,\r\n    ListControllerResult,\r\n    ResourceContextProvider,\r\n    useRecordContext,\r\n    RaRecord,\r\n} from 'ra-core';\r\n\r\nimport { fieldPropTypes, FieldProps } from './types';\r\n\r\n/**\r\n * Render related records to the current one.\r\n *\r\n * You must define the fields to be passed to the iterator component as children.\r\n *\r\n * @example Display all the comments of the current post as a datagrid\r\n * <ReferenceManyField reference=\"comments\" target=\"post_id\">\r\n *     <Datagrid>\r\n *         <TextField source=\"id\" />\r\n *         <TextField source=\"body\" />\r\n *         <DateField source=\"created_at\" />\r\n *         <EditButton />\r\n *     </Datagrid>\r\n * </ReferenceManyField>\r\n *\r\n * @example Display all the books by the current author, only the title\r\n * <ReferenceManyField reference=\"books\" target=\"author_id\">\r\n *     <SingleFieldList>\r\n *         <ChipField source=\"title\" />\r\n *     </SingleFieldList>\r\n * </ReferenceManyField>\r\n *\r\n * By default, restricts the displayed values to 25. You can extend this limit\r\n * by setting the `perPage` prop.\r\n *\r\n * @example\r\n * <ReferenceManyField perPage={10} reference=\"comments\" target=\"post_id\">\r\n *    ...\r\n * </ReferenceManyField>\r\n *\r\n * By default, orders the possible values by id desc. You can change this order\r\n * by setting the `sort` prop (an object with `field` and `order` properties).\r\n *\r\n * @example\r\n * <ReferenceManyField sort={{ field: 'created_at', order: 'DESC' }} reference=\"comments\" target=\"post_id\">\r\n *    ...\r\n * </ReferenceManyField>\r\n *\r\n * Also, you can filter the query used to populate the possible values. Use the\r\n * `filter` prop for that.\r\n *\r\n * @example\r\n * <ReferenceManyField filter={{ is_published: true }} reference=\"comments\" target=\"post_id\">\r\n *    ...\r\n * </ReferenceManyField>\r\n */\r\nexport const ReferenceManyField = <\r\n    RecordType extends RaRecord = RaRecord,\r\n    ReferenceRecordType extends RaRecord = RaRecord\r\n>(\r\n    props: ReferenceManyFieldProps<RecordType>\r\n) => {\r\n    const {\r\n        children,\r\n        filter = defaultFilter,\r\n        page = 1,\r\n        pagination = null,\r\n        perPage = 25,\r\n        reference,\r\n        resource,\r\n        sort = defaultSort,\r\n        source = 'id',\r\n        target,\r\n    } = props;\r\n    const record = useRecordContext(props);\r\n\r\n    const controllerProps = useReferenceManyFieldController<\r\n        RecordType,\r\n        ReferenceRecordType\r\n    >({\r\n        filter,\r\n        page,\r\n        perPage,\r\n        record,\r\n        reference,\r\n        resource,\r\n        sort,\r\n        source,\r\n        target,\r\n    });\r\n\r\n    return (\r\n        <ResourceContextProvider value={reference}>\r\n            <ListContextProvider value={controllerProps}>\r\n                {children}\r\n                {pagination}\r\n            </ListContextProvider>\r\n        </ResourceContextProvider>\r\n    );\r\n};\r\n\r\nexport interface ReferenceManyFieldProps<\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n> extends FieldProps<RecordType> {\r\n    children: ReactNode;\r\n    filter?: FilterPayload;\r\n    page?: number;\r\n    pagination?: ReactElement;\r\n    perPage?: number;\r\n    reference: string;\r\n    sort?: SortPayload;\r\n    target: string;\r\n}\r\n\r\nReferenceManyField.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    className: PropTypes.string,\r\n    filter: PropTypes.object,\r\n    label: fieldPropTypes.label,\r\n    perPage: PropTypes.number,\r\n    record: PropTypes.any,\r\n    reference: PropTypes.string.isRequired,\r\n    resource: PropTypes.string,\r\n    sortBy: PropTypes.string,\r\n    sortByOrder: fieldPropTypes.sortByOrder,\r\n    source: PropTypes.string,\r\n    sort: PropTypes.exact({\r\n        field: PropTypes.string,\r\n        order: PropTypes.string,\r\n    }),\r\n    target: PropTypes.string.isRequired,\r\n};\r\n\r\n// FIXME kept for backwards compatibility, unused, to be removed in v5\r\nexport const ReferenceManyFieldView: FC<ReferenceManyFieldViewProps> = props => {\r\n    const { children, pagination } = props;\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        console.error(\r\n            '<ReferenceManyFieldView> is deprecated, use <ReferenceManyField> directly'\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            {children}\r\n            {pagination && props.total !== undefined ? pagination : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport interface ReferenceManyFieldViewProps\r\n    extends Omit<\r\n            ReferenceManyFieldProps,\r\n            'resource' | 'page' | 'perPage' | 'sort'\r\n        >,\r\n        ListControllerResult {\r\n    children: ReactElement;\r\n}\r\n\r\nReferenceManyFieldView.propTypes = {\r\n    children: PropTypes.element,\r\n    className: PropTypes.string,\r\n    sort: PropTypes.exact({\r\n        field: PropTypes.string,\r\n        order: PropTypes.string,\r\n    }),\r\n    data: PropTypes.any,\r\n    isLoading: PropTypes.bool,\r\n    pagination: PropTypes.element,\r\n    reference: PropTypes.string,\r\n    setSort: PropTypes.func,\r\n};\r\n\r\nconst defaultFilter = {};\r\nconst defaultSort = { field: 'id', order: 'DESC' };\r\n", "import React, { ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { UseQueryOptions } from 'react-query';\r\nimport { Typography } from '@mui/material';\r\nimport {\r\n    useReferenceOneFieldController,\r\n    useRecordContext,\r\n    ResourceContextProvider,\r\n    LinkToType,\r\n    useCreatePath,\r\n    useTranslate,\r\n    SortPayload,\r\n    RaRecord,\r\n} from 'ra-core';\r\n\r\nimport { fieldPropTypes, FieldProps } from './types';\r\nimport { ReferenceFieldView } from './ReferenceField';\r\n\r\n/**\r\n * Render the related record in a one-to-one relationship\r\n *\r\n * Expects a single field as child\r\n *\r\n * @example // display the bio of the current author\r\n * <ReferenceOneField reference=\"bios\" target=\"author_id\">\r\n *     <TextField source=\"body\" />\r\n * </ReferenceOneField>\r\n */\r\nexport const ReferenceOneField = <\r\n    RecordType extends RaRecord = RaRecord,\r\n    ReferenceRecordType extends RaRecord = RaRecord\r\n>(\r\n    props: ReferenceOneFieldProps<RecordType, ReferenceRecordType>\r\n) => {\r\n    const {\r\n        children,\r\n        reference,\r\n        source = 'id',\r\n        target,\r\n        emptyText,\r\n        sort,\r\n        filter,\r\n        link = false,\r\n        queryOptions,\r\n    } = props;\r\n    const record = useRecordContext<RecordType>(props);\r\n    const createPath = useCreatePath();\r\n    const translate = useTranslate();\r\n\r\n    const {\r\n        isLoading,\r\n        isFetching,\r\n        referenceRecord,\r\n        error,\r\n        refetch,\r\n    } = useReferenceOneFieldController<ReferenceRecordType>({\r\n        record,\r\n        reference,\r\n        source,\r\n        target,\r\n        sort,\r\n        filter,\r\n        queryOptions,\r\n    });\r\n\r\n    const resourceLinkPath =\r\n        link === false\r\n            ? false\r\n            : createPath({\r\n                  resource: reference,\r\n                  id: referenceRecord?.id,\r\n                  type:\r\n                      typeof link === 'function'\r\n                          ? link(record, reference)\r\n                          : link,\r\n              });\r\n\r\n    return !record || (!isLoading && referenceRecord == null) ? (\r\n        emptyText ? (\r\n            <Typography component=\"span\" variant=\"body2\">\r\n                {emptyText && translate(emptyText, { _: emptyText })}\r\n            </Typography>\r\n        ) : null\r\n    ) : (\r\n        <ResourceContextProvider value={reference}>\r\n            <ReferenceFieldView\r\n                isLoading={isLoading}\r\n                isFetching={isFetching}\r\n                referenceRecord={referenceRecord}\r\n                resourceLinkPath={resourceLinkPath}\r\n                reference={reference}\r\n                refetch={refetch}\r\n                error={error}\r\n            >\r\n                {children}\r\n            </ReferenceFieldView>\r\n        </ResourceContextProvider>\r\n    );\r\n};\r\n\r\nexport interface ReferenceOneFieldProps<\r\n    RecordType extends RaRecord = RaRecord,\r\n    ReferenceRecordType extends RaRecord = RaRecord\r\n> extends FieldProps<RecordType> {\r\n    children?: ReactNode;\r\n    reference: string;\r\n    target: string;\r\n    sort?: SortPayload;\r\n    filter?: any;\r\n    link?: LinkToType<RecordType>;\r\n    queryOptions?: UseQueryOptions<{\r\n        data: ReferenceRecordType[];\r\n        total: number;\r\n    }> & { meta?: any };\r\n}\r\n\r\nReferenceOneField.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    label: fieldPropTypes.label,\r\n    record: PropTypes.any,\r\n    reference: PropTypes.string.isRequired,\r\n    source: PropTypes.string,\r\n    target: PropTypes.string.isRequired,\r\n    queryOptions: PropTypes.any,\r\n};\r\n\r\nReferenceOneField.defaultProps = {\r\n    // disable sorting on this field by default as its default source prop ('id')\r\n    // will match the default sort ({ field: 'id', order: 'DESC'})\r\n    // leading to an incorrect sort indicator in a datagrid header\r\n    sortable: false,\r\n};\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\nimport Typography, { TypographyProps } from '@mui/material/Typography';\r\nimport { useRecordContext, useTranslate } from 'ra-core';\r\nimport purify from 'dompurify';\r\n\r\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\r\nimport { FieldProps, fieldPropTypes } from './types';\r\nimport { genericMemo } from './genericMemo';\r\n\r\n/**\r\n * Render an HTML string as rich text\r\n *\r\n * Note: This component leverages the `dangerouslySetInnerHTML` attribute,\r\n * but uses the DomPurify library to sanitize the HTML before rendering it.\r\n *\r\n * It means it is safe from Cross-Site Scripting (XSS) attacks - but it's still\r\n * a good practice to sanitize the value server-side.\r\n *\r\n * @example\r\n * <RichTextField source=\"description\" />\r\n *\r\n * @example // remove all tags and output text only\r\n * <RichTextField source=\"description\" stripTags />\r\n */\r\nconst RichTextFieldImpl = <\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n>(\r\n    props: RichTextFieldProps<RecordType>\r\n) => {\r\n    const {\r\n        className,\r\n        emptyText,\r\n        source,\r\n        stripTags = false,\r\n        purifyOptions,\r\n        ...rest\r\n    } = props;\r\n    const record = useRecordContext(props);\r\n    const value = get(record, source)?.toString();\r\n    const translate = useTranslate();\r\n\r\n    return (\r\n        <Typography\r\n            className={className}\r\n            variant=\"body2\"\r\n            component=\"span\"\r\n            {...sanitizeFieldRestProps(rest)}\r\n        >\r\n            {value == null && emptyText ? (\r\n                translate(emptyText, { _: emptyText })\r\n            ) : stripTags ? (\r\n                removeTags(value)\r\n            ) : (\r\n                <span\r\n                    dangerouslySetInnerHTML={{\r\n                        __html: purify.sanitize(value, purifyOptions),\r\n                    }}\r\n                />\r\n            )}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nRichTextFieldImpl.propTypes = {\r\n    // @ts-ignore\r\n    ...Typography.propTypes,\r\n    ...fieldPropTypes,\r\n    stripTags: PropTypes.bool,\r\n    purifyOptions: PropTypes.any,\r\n};\r\nRichTextFieldImpl.displayName = 'RichTextFieldImpl';\r\n\r\nexport const RichTextField = genericMemo(RichTextFieldImpl);\r\n\r\n// We only support the case when sanitize() returns a string\r\n// hence we need to force the RETURN_DOM_FRAGMENT and RETURN_DOM\r\n// options to false\r\nexport type PurifyOptions = purify.Config & {\r\n    RETURN_DOM_FRAGMENT?: false | undefined;\r\n    RETURN_DOM?: false | undefined;\r\n};\r\n\r\nexport interface RichTextFieldProps<\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n> extends FieldProps<RecordType>,\r\n        Omit<TypographyProps, 'textAlign'> {\r\n    stripTags?: boolean;\r\n    purifyOptions?: PurifyOptions;\r\n}\r\n\r\nexport const removeTags = (input: string) =>\r\n    input ? input.replace(/<[^>]+>/gm, '') : '';\r\n", "const {\n  hasOwnProperty,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array, transformCaseFunc) {\n  transformCaseFunc = transformCaseFunc ?? stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  let property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property]) === true) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n", "import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\n", "import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof getParentNode === 'function' &&\n    implementation &&\n    implementation.createHTMLDocument !== undefined &&\n    documentMode !== 9;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(\n    Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? (PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE)\n        : (PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE);\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n        : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES =\n      'ALLOWED_NAMESPACES' in cfg\n        ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n        : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(\n            clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n            cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(\n            clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n            cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS =\n      'FORBID_TAGS' in cfg\n        ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n        : {};\n    FORBID_ATTR =\n      'FORBID_ATTR' in cfg\n        ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n        : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT\n          ? emptyHTML\n          : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function' ||\n        typeof elm.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (regExpTest(/[\\u0080-\\uFFFF]/, currentNode.nodeName)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Mitigate a problem with templates inside select */\n    if (\n      tagName === 'select' &&\n      regExpTest(/<template/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        )\n          return false;\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        )\n          return false;\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if (\n      (tagName === 'noscript' ||\n        tagName === 'noembed' ||\n        tagName === 'noframes') &&\n      regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      content = stringReplace(content, TMPLIT_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_basicCustomElementTest(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n    } else if (value) {\n      return false;\n    } else {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    }\n\n    return true;\n  };\n\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n  const _basicCustomElementTest = function (tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = name === 'value' ? attr.value : stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n        value = stringReplace(value, TMPLIT_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML': {\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            }\n\n            case 'TrustedScriptURL': {\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            }\n\n            default: {\n              break;\n            }\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let oldNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (\n        typeof window.toStaticHTML === 'object' ||\n        typeof window.toStaticHTML === 'function'\n      ) {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmod) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\nimport {\r\n    ChoicesProps,\r\n    useChoices,\r\n    useRecordContext,\r\n    useTranslate,\r\n} from 'ra-core';\r\nimport { Typography, TypographyProps } from '@mui/material';\r\n\r\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\r\nimport { FieldProps, fieldPropTypes } from './types';\r\nimport { genericMemo } from './genericMemo';\r\n\r\n/**\r\n * Display a value in an enumeration\r\n *\r\n * Pass possible options as an array of objects in the 'choices' attribute.\r\n *\r\n * @example\r\n * const choices = [\r\n *    { id: 'M', name: 'Male' },\r\n *    { id: 'F', name: 'Female' },\r\n * ];\r\n * <SelectField source=\"gender\" choices={choices} />\r\n *\r\n * By default, the text is built by\r\n * - finding a choice where the 'id' property equals the field value\r\n * - using the 'name' property as the option text\r\n *\r\n * You can also customize the properties to use for the value and text,\r\n * thanks to the 'optionValue' and 'optionText' attributes.\r\n *\r\n * @example\r\n * const choices = [\r\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\r\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\r\n * ];\r\n * <SelectField source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\r\n *\r\n * `optionText` also accepts a function, so you can shape the option text at will:\r\n * @example\r\n * const choices = [\r\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\r\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\r\n * ];\r\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\r\n * <SelectField source=\"author_id\" choices={choices} optionText={optionRenderer} />\r\n *\r\n * `optionText` also accepts a React Element, that can access\r\n * the related choice through the `useRecordContext` hook. You can use Field components there.\r\n * @example\r\n * const choices = [\r\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\r\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\r\n * ];\r\n * const FullNameField = () => {\r\n *     const record = useRecordContext();\r\n *     return (<Chip>{record.first_name} {record.last_name}</Chip>)\r\n * };\r\n * <SelectField source=\"gender\" choices={choices} optionText={<FullNameField />}/>\r\n *\r\n * The current choice is translated by default, so you can use translation identifiers as choices:\r\n * @example\r\n * const choices = [\r\n *    { id: 'M', name: 'myroot.gender.male' },\r\n *    { id: 'F', name: 'myroot.gender.female' },\r\n * ];\r\n *\r\n * However, in some cases (e.g. inside a `<ReferenceField>`), you may not want\r\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\r\n * @example\r\n * <SelectField source=\"gender\" choices={choices} translateChoice={false}/>\r\n *\r\n * **Tip**: <ReferenceField> sets `translateChoice` to false by default.\r\n */\r\nconst SelectFieldImpl = <\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n>(\r\n    props: SelectFieldProps<RecordType>\r\n) => {\r\n    const {\r\n        className,\r\n        emptyText,\r\n        source,\r\n        choices,\r\n        optionValue = 'id',\r\n        optionText = 'name',\r\n        translateChoice = true,\r\n        ...rest\r\n    } = props;\r\n    const record = useRecordContext(props);\r\n    const value = get(record, source);\r\n    const { getChoiceText, getChoiceValue } = useChoices({\r\n        optionText,\r\n        optionValue,\r\n        translateChoice,\r\n    });\r\n    const translate = useTranslate();\r\n\r\n    const choice = choices.find(choice => getChoiceValue(choice) === value);\r\n\r\n    if (!choice) {\r\n        return emptyText ? (\r\n            <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={className}\r\n                {...sanitizeFieldRestProps(rest)}\r\n            >\r\n                {emptyText && translate(emptyText, { _: emptyText })}\r\n            </Typography>\r\n        ) : null;\r\n    }\r\n\r\n    let choiceText = getChoiceText(choice);\r\n\r\n    return (\r\n        <Typography\r\n            component=\"span\"\r\n            variant=\"body2\"\r\n            className={className}\r\n            {...sanitizeFieldRestProps(rest)}\r\n        >\r\n            {choiceText}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nSelectFieldImpl.propTypes = {\r\n    // @ts-ignore\r\n    ...Typography.propTypes,\r\n    ...fieldPropTypes,\r\n    choices: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    optionText: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.func,\r\n        PropTypes.element,\r\n    ]),\r\n    optionValue: PropTypes.string,\r\n    translateChoice: PropTypes.bool,\r\n};\r\n\r\nSelectFieldImpl.displayName = 'SelectFieldImpl';\r\n\r\nexport const SelectField = genericMemo(SelectFieldImpl);\r\n\r\nexport interface SelectFieldProps<\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n> extends ChoicesProps,\r\n        FieldProps<RecordType>,\r\n        Omit<TypographyProps, 'textAlign'> {}\r\n", "import * as React from 'react';\r\nimport { ElementType } from 'react';\r\nimport get from 'lodash/get';\r\nimport Typography, { TypographyProps } from '@mui/material/Typography';\r\nimport { useRecordContext, useTranslate } from 'ra-core';\r\n\r\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\r\nimport { FieldProps, fieldPropTypes } from './types';\r\nimport { genericMemo } from './genericMemo';\r\n\r\nconst TextFieldImpl = <\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n>(\r\n    props: TextFieldProps<RecordType>\r\n) => {\r\n    const { className, source, emptyText, ...rest } = props;\r\n    const record = useRecordContext(props);\r\n    const value = get(record, source)?.toString();\r\n    const translate = useTranslate();\r\n\r\n    return (\r\n        <Typography\r\n            component=\"span\"\r\n            variant=\"body2\"\r\n            className={className}\r\n            {...sanitizeFieldRestProps(rest)}\r\n        >\r\n            {value != null && typeof value !== 'string'\r\n                ? JSON.stringify(value)\r\n                : value ||\r\n                  (emptyText ? translate(emptyText, { _: emptyText }) : null)}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nTextFieldImpl.propTypes = {\r\n    // @ts-ignore\r\n    ...Typography.propTypes,\r\n    ...fieldPropTypes,\r\n};\r\n\r\n// what? TypeScript loses the displayName if we don't set it explicitly\r\nTextFieldImpl.displayName = 'TextFieldImpl';\r\n\r\nexport const TextField = genericMemo(TextFieldImpl);\r\n\r\nexport interface TextFieldProps<\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n> extends FieldProps<RecordType>,\r\n        Omit<TypographyProps, 'textAlign'> {\r\n    // TypographyProps do not expose the component props, see https://github.com/mui/material-ui/issues/19512\r\n    component?: ElementType<any>;\r\n}\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { ReactElement, ReactNode } from 'react';\r\nimport {\r\n    TranslatableContextProvider,\r\n    useTranslatable,\r\n    UseTranslatableOptions,\r\n    RaRecord,\r\n    useRecordContext,\r\n} from 'ra-core';\r\nimport { TranslatableFieldsTabs } from './TranslatableFieldsTabs';\r\nimport { TranslatableFieldsTabContent } from './TranslatableFieldsTabContent';\r\n\r\n/**\r\n * Provides a way to show multiple languages for any field passed as children.\r\n * It expects the translatable values to have the following structure:\r\n * {\r\n *     name: {\r\n *         en: 'The english value',\r\n *         fr: 'The french value',\r\n *         tlh: 'The klingon value',\r\n *     },\r\n *     description: {\r\n *         en: 'The english value',\r\n *         fr: 'The french value',\r\n *         tlh: 'The klingon value',\r\n *     }\r\n * }\r\n *\r\n * @example <caption>Basic usage</caption>\r\n * <TranslatableFields locales={['en', 'fr']}>\r\n *     <TextField source={getSource('title')} />\r\n *     <TextField source={getSource('description')} />\r\n * </TranslatableFields>\r\n *\r\n * @example <caption>With a custom language selector</caption>\r\n * <TranslatableFields\r\n *     selector={<MyLanguageSelector />}\r\n *     locales={['en', 'fr']}\r\n * >\r\n *     <TextField source={getSource('title')} />\r\n * <TranslatableFields>\r\n>\r\n *\r\n * const MyLanguageSelector = () => {\r\n *     const {\r\n *         locales,\r\n *         selectedLocale,\r\n *         selectLocale,\r\n *     } = useTranslatableContext();\r\n *\r\n *     return (\r\n *         <select onChange={selectLocale}>\r\n *             {locales.map((locale) => (\r\n *                 <option selected={locale.locale === selectedLocale}>\r\n *                     {locale.name}\r\n *                 </option>\r\n *             ))}\r\n *        </select>\r\n *     );\r\n * }\r\n *\r\n * @param props The component props\r\n * @param {string} props.defaultLocale The locale selected by default. Default to 'en'.\r\n * @param {string[]} props.locales An array of the possible locales in the form. For example [{ 'en', 'fr' }].\r\n * @param {ReactElement} props.selector The element responsible for selecting a locale. Defaults to Material UI tabs.\r\n */\r\nexport const TranslatableFields = (\r\n    props: TranslatableFieldsProps\r\n): ReactElement => {\r\n    const {\r\n        defaultLocale,\r\n        locales,\r\n        groupKey = '',\r\n        selector = <TranslatableFieldsTabs groupKey={groupKey} />,\r\n        children,\r\n        resource,\r\n        className,\r\n    } = props;\r\n    const record = useRecordContext(props);\r\n    const context = useTranslatable({ defaultLocale, locales });\r\n\r\n    return (\r\n        <Root className={className}>\r\n            <TranslatableContextProvider value={context}>\r\n                {selector}\r\n                {locales.map(locale => (\r\n                    <TranslatableFieldsTabContent\r\n                        key={locale}\r\n                        locale={locale}\r\n                        record={record}\r\n                        resource={resource}\r\n                        groupKey={groupKey}\r\n                    >\r\n                        {children}\r\n                    </TranslatableFieldsTabContent>\r\n                ))}\r\n            </TranslatableContextProvider>\r\n        </Root>\r\n    );\r\n};\r\n\r\nexport interface TranslatableFieldsProps extends UseTranslatableOptions {\r\n    children: ReactNode;\r\n    className?: string;\r\n    record?: RaRecord;\r\n    resource?: string;\r\n    selector?: ReactElement;\r\n    groupKey?: string;\r\n}\r\n\r\nconst PREFIX = 'RaTranslatableFields';\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    flexGrow: 1,\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(0.5),\r\n}));\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { ReactElement } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Tabs, { TabsProps } from '@mui/material/Tabs';\r\nimport { useTranslatableContext } from 'ra-core';\r\nimport { TranslatableFieldsTab } from './TranslatableFieldsTab';\r\nimport { AppBarProps } from '../layout';\r\n\r\n/**\r\n * Default locale selector for the TranslatableFields component. Generates a tab for each specified locale.\r\n * @see TranslatableFields\r\n */\r\nexport const TranslatableFieldsTabs = (\r\n    props: TranslatableFieldsTabsProps & AppBarProps\r\n): ReactElement => {\r\n    const { groupKey, TabsProps: tabsProps, className } = props;\r\n    const { locales, selectLocale, selectedLocale } = useTranslatableContext();\r\n\r\n    const handleChange = (event, newLocale): void => {\r\n        selectLocale(newLocale);\r\n    };\r\n\r\n    return (\r\n        <StyledAppBar color=\"default\" position=\"static\" className={className}>\r\n            <Tabs\r\n                value={selectedLocale}\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                {...tabsProps}\r\n            >\r\n                {locales.map(locale => (\r\n                    <TranslatableFieldsTab\r\n                        key={locale}\r\n                        value={locale}\r\n                        locale={locale}\r\n                        groupKey={groupKey}\r\n                    />\r\n                ))}\r\n            </Tabs>\r\n        </StyledAppBar>\r\n    );\r\n};\r\n\r\nexport interface TranslatableFieldsTabsProps {\r\n    TabsProps?: TabsProps;\r\n    groupKey?: string;\r\n}\r\n\r\nconst PREFIX = 'RaTranslatableFieldsTabs';\r\n\r\nconst StyledAppBar = styled(AppBar, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    boxShadow: 'none',\r\n    borderRadius: 0,\r\n    borderTopLeftRadius: theme.shape.borderRadius,\r\n    borderTopRightRadius: theme.shape.borderRadius,\r\n    border: `1px solid ${theme.palette.divider}`,\r\n}));\r\n", "import React from 'react';\r\nimport Tab, { TabProps } from '@mui/material/Tab';\r\nimport { useTranslate } from 'ra-core';\r\nimport { capitalize } from 'inflection';\r\n\r\n/**\r\n * Single tab that selects a locale in a TranslatableFields component.\r\n * @see TranslatableFields\r\n */\r\nexport const TranslatableFieldsTab = (\r\n    props: TranslatableFieldsTabProps & TabProps\r\n) => {\r\n    const { locale, groupKey = '', ...rest } = props;\r\n    const translate = useTranslate();\r\n\r\n    return (\r\n        <Tab\r\n            id={`translatable-header-${groupKey}${locale}`}\r\n            label={translate(`ra.locales.${groupKey}${locale}`, {\r\n                _: capitalize(locale),\r\n            })}\r\n            {...rest}\r\n        />\r\n    );\r\n};\r\n\r\nexport interface TranslatableFieldsTabProps {\r\n    locale: string;\r\n    groupKey?: string;\r\n}\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n    Children,\r\n    cloneElement,\r\n    isValidElement,\r\n    ReactElement,\r\n    ReactNode,\r\n} from 'react';\r\nimport { useTranslatableContext, RaRecord } from 'ra-core';\r\nimport { Labeled } from '../Labeled';\r\n\r\n/**\r\n * Default container for a group of translatable fields inside a TranslatableFields components.\r\n * @see TranslatableFields\r\n */\r\nexport const TranslatableFieldsTabContent = (\r\n    props: TranslatableFieldsTabContentProps\r\n): ReactElement => {\r\n    const {\r\n        children,\r\n        groupKey = '',\r\n        locale,\r\n        record,\r\n        resource,\r\n        className,\r\n        ...other\r\n    } = props;\r\n    const { selectedLocale, getLabel, getSource } = useTranslatableContext();\r\n\r\n    const addLabel = Children.count(children) > 1;\r\n\r\n    return (\r\n        <Root\r\n            role=\"tabpanel\"\r\n            hidden={selectedLocale !== locale}\r\n            id={`translatable-content-${groupKey}${locale}`}\r\n            aria-labelledby={`translatable-header-${groupKey}${locale}`}\r\n            className={className}\r\n            {...other}\r\n        >\r\n            {Children.map(children, field =>\r\n                field && isValidElement<any>(field) ? (\r\n                    <div key={field.props.source}>\r\n                        {addLabel ? (\r\n                            <Labeled\r\n                                resource={resource}\r\n                                label={field.props.label}\r\n                                source={field.props.source}\r\n                            >\r\n                                {cloneElement(field, {\r\n                                    ...field.props,\r\n                                    label: getLabel(field.props.source),\r\n                                    record,\r\n                                    source: getSource(\r\n                                        field.props.source,\r\n                                        locale\r\n                                    ),\r\n                                })}\r\n                            </Labeled>\r\n                        ) : typeof field === 'string' ? (\r\n                            field\r\n                        ) : (\r\n                            cloneElement(field, {\r\n                                ...field.props,\r\n                                label: getLabel(field.props.source),\r\n                                record,\r\n                                source: getSource(field.props.source, locale),\r\n                            })\r\n                        )}\r\n                    </div>\r\n                ) : null\r\n            )}\r\n        </Root>\r\n    );\r\n};\r\n\r\nexport type TranslatableFieldsTabContentProps = {\r\n    children: ReactNode;\r\n    className?: string;\r\n    formGroupKeyPrefix?: string;\r\n    groupKey: string;\r\n    locale: string;\r\n    record: RaRecord;\r\n    resource: string;\r\n};\r\n\r\nconst PREFIX = 'RaTranslatableFieldsTabContent';\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n    borderRadius: 0,\r\n    borderBottomLeftRadius: theme.shape.borderRadius,\r\n    borderBottomRightRadius: theme.shape.borderRadius,\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    borderTop: 0,\r\n}));\r\n", "import * as React from 'react';\r\nimport { AnchorHTMLAttributes } from 'react';\r\nimport get from 'lodash/get';\r\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\r\nimport { Typography, Link } from '@mui/material';\r\nimport { useRecordContext, useTranslate } from 'ra-core';\r\nimport { FieldProps, fieldPropTypes } from './types';\r\nimport { genericMemo } from './genericMemo';\r\n\r\nconst UrlFieldImpl = <\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n>(\r\n    props: UrlFieldProps<RecordType>\r\n) => {\r\n    const { className, emptyText, source, ...rest } = props;\r\n    const record = useRecordContext(props);\r\n    const value = get(record, source);\r\n    const translate = useTranslate();\r\n\r\n    if (value == null) {\r\n        return (\r\n            <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={className}\r\n                {...sanitizeFieldRestProps(rest)}\r\n            >\r\n                {emptyText && translate(emptyText, { _: emptyText })}\r\n            </Typography>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Link\r\n            className={className}\r\n            href={value}\r\n            onClick={stopPropagation}\r\n            variant=\"body2\"\r\n            {...sanitizeFieldRestProps(rest)}\r\n        >\r\n            {value}\r\n        </Link>\r\n    );\r\n};\r\n\r\nUrlFieldImpl.propTypes = fieldPropTypes;\r\nUrlFieldImpl.displayName = 'UrlFieldImpl';\r\n\r\nexport const UrlField = genericMemo(UrlFieldImpl);\r\n\r\nexport interface UrlFieldProps<\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n> extends FieldProps<RecordType>,\r\n        AnchorHTMLAttributes<HTMLAnchorElement> {}\r\n\r\n// useful to prevent click bubbling in a Datagrid with rowClick\r\nconst stopPropagation = e => e.stopPropagation();\r\n", "import * as React from 'react';\r\nimport { ReactNode } from 'react';\r\n\r\nimport { FieldProps, fieldPropTypes } from './types';\r\n\r\n/**\r\n * A field rendering its children.\r\n *\r\n * Designed as a wrapper for several fields, to support props read by\r\n * the parent element (e.g. `<SimpleShowLayout>`, `<Datagrid`).\r\n *\r\n * @example\r\n * import { WrapperField, TextField } from 'react-admin';\r\n *\r\n * const PostShow = () => (\r\n *    <Show>\r\n *        <SimpleShowLayout>\r\n *            <WrapperField label=\"author\" sortBy=\"last_name\">\r\n *               <TextField source=\"first_name\" />\r\n *               <TextField source=\"last_name\" />\r\n *            </WrapperField>\r\n *       </SimpleShowLayout>\r\n *   </Show>\r\n * );\r\n */\r\nexport const WrapperField = <\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n>({\r\n    children,\r\n}: WrapperFieldProps<RecordType>) => <>{children}</>;\r\n\r\nWrapperField.displayName = 'WrapperField';\r\n\r\nWrapperField.propTypes = fieldPropTypes;\r\n\r\nexport interface WrapperFieldProps<\r\n    RecordType extends Record<string, any> = Record<string, any>\r\n> extends FieldProps<RecordType> {\r\n    children: ReactNode;\r\n}\r\n", "import * as React from 'react';\r\nimport { Children, isValidElement, ReactNode } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Stack } from '@mui/material';\r\nimport { ResponsiveStyleValue, SxProps } from '@mui/system';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n    RaRecord,\r\n    useRecordContext,\r\n    OptionalRecordContextProvider,\r\n} from 'ra-core';\r\nimport { Labeled } from '../Labeled';\r\n\r\n/**\r\n * Layout for a Show view showing fields in one column.\r\n *\r\n * It pulls the record from the RecordContext. It renders the record fields in\r\n * a single-column layout (via Material UI's `<Stack>` component).\r\n * `<SimpleShowLayout>` delegates the actual rendering of fields to its children.\r\n * It wraps each field inside a `<Labeled>` component to add a label.\r\n *\r\n * @example\r\n * // in src/posts.js\r\n * import * as React from \"react\";\r\n * import { Show, SimpleShowLayout, TextField } from 'react-admin';\r\n *\r\n * export const PostShow = () => (\r\n *     <Show>\r\n *         <SimpleShowLayout>\r\n *             <TextField source=\"title\" />\r\n *         </SimpleShowLayout>\r\n *     </Show>\r\n * );\r\n *\r\n * // in src/App.js\r\n * import * as React from \"react\";\r\n * import { Admin, Resource } from 'react-admin';\r\n *\r\n * import { PostShow } from './posts';\r\n *\r\n * const App = () => (\r\n *     <Admin dataProvider={...}>\r\n *         <Resource name=\"posts\" show={PostShow} />\r\n *     </Admin>\r\n * );\r\n *\r\n * @param {SimpleShowLayoutProps} props\r\n * @param {string} props.className A className to apply to the page content.\r\n * @param {ElementType} props.component The component to use as root component (div by default).\r\n * @param {ReactNode} props.divider An optional divider between each field, passed to `<Stack>`.\r\n * @param {number} props.spacing The spacing to use between each field, passed to `<Stack>`. Defaults to 1.\r\n * @param {Object} props.sx Custom style object.\r\n */\r\nexport const SimpleShowLayout = (props: SimpleShowLayoutProps) => {\r\n    const { className, children, divider, spacing = 1, ...rest } = props;\r\n    const record = useRecordContext(props);\r\n    if (!record) {\r\n        return null;\r\n    }\r\n    return (\r\n        <OptionalRecordContextProvider value={props.record}>\r\n            <Root className={className} {...sanitizeRestProps(rest)}>\r\n                <Stack\r\n                    spacing={spacing}\r\n                    divider={divider}\r\n                    className={SimpleShowLayoutClasses.stack}\r\n                >\r\n                    {Children.map(children, field =>\r\n                        field && isValidElement<any>(field) ? (\r\n                            <Labeled\r\n                                key={field.props.source}\r\n                                className={clsx(\r\n                                    'ra-field',\r\n                                    field.props.source &&\r\n                                        `ra-field-${field.props.source}`,\r\n                                    SimpleShowLayoutClasses.row,\r\n                                    field.props.className\r\n                                )}\r\n                            >\r\n                                {field}\r\n                            </Labeled>\r\n                        ) : null\r\n                    )}\r\n                </Stack>\r\n            </Root>\r\n        </OptionalRecordContextProvider>\r\n    );\r\n};\r\n\r\nexport interface SimpleShowLayoutProps {\r\n    children: ReactNode;\r\n    className?: string;\r\n    divider?: ReactNode;\r\n    record?: RaRecord;\r\n    spacing?: ResponsiveStyleValue<number | string>;\r\n    sx?: SxProps;\r\n}\r\n\r\nSimpleShowLayout.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    record: PropTypes.object,\r\n    spacing: PropTypes.any,\r\n    sx: PropTypes.any,\r\n};\r\n\r\nconst PREFIX = 'RaSimpleShowLayout';\r\n\r\nexport const SimpleShowLayoutClasses = {\r\n    stack: `${PREFIX}-stack`,\r\n    row: `${PREFIX}-row`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    flex: 1,\r\n    padding: `${theme.spacing(1)} ${theme.spacing(2)}`,\r\n    [`& .${SimpleShowLayoutClasses.stack}`]: {},\r\n    [`& .${SimpleShowLayoutClasses.row}`]: {\r\n        display: 'inline',\r\n    },\r\n}));\r\n\r\nconst sanitizeRestProps = ({\r\n    record,\r\n    resource,\r\n    initialValues,\r\n    translate,\r\n    ...rest\r\n}: any) => rest;\r\n", "import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport inflection from 'inflection';\r\nimport {\r\n    ShowBase,\r\n    InferredElement,\r\n    getElementsFromRecords,\r\n    useResourceContext,\r\n    useShowContext,\r\n} from 'ra-core';\r\n\r\nimport { ShowProps } from '../types';\r\nimport { ShowView } from './ShowView';\r\nimport { showFieldTypes } from './showFieldTypes';\r\n\r\nexport const ShowGuesser = ({\r\n    id,\r\n    queryOptions,\r\n    resource,\r\n    ...rest\r\n}: Omit<ShowProps, 'children'>) => (\r\n    <ShowBase id={id} resource={resource} queryOptions={queryOptions}>\r\n        <ShowViewGuesser {...rest} />\r\n    </ShowBase>\r\n);\r\n\r\nconst ShowViewGuesser = props => {\r\n    const resource = useResourceContext(props);\r\n    const { record } = useShowContext();\r\n    const [child, setChild] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setChild(null);\r\n    }, [resource]);\r\n\r\n    useEffect(() => {\r\n        if (record && !child) {\r\n            const inferredElements = getElementsFromRecords(\r\n                [record],\r\n                showFieldTypes\r\n            );\r\n            const inferredChild = new InferredElement(\r\n                showFieldTypes.show,\r\n                null,\r\n                inferredElements\r\n            );\r\n            setChild(inferredChild.getElement());\r\n\r\n            if (process.env.NODE_ENV === 'production') return;\r\n\r\n            const representation = inferredChild.getRepresentation();\r\n            const components = ['Show']\r\n                .concat(\r\n                    Array.from(\r\n                        new Set(\r\n                            Array.from(representation.matchAll(/<([^/\\s>]+)/g))\r\n                                .map(match => match[1])\r\n                                .filter(component => component !== 'span')\r\n                        )\r\n                    )\r\n                )\r\n                .sort();\r\n\r\n            // eslint-disable-next-line no-console\r\n            console.log(\r\n                `Guessed Show:\r\n\r\nimport { ${components.join(', ')} } from 'react-admin';\r\n\r\nexport const ${inflection.capitalize(\r\n                    inflection.singularize(resource)\r\n                )}Show = () => (\r\n    <Show>\r\n${inferredChild.getRepresentation()}\r\n    </Show>\r\n);`\r\n            );\r\n        }\r\n    }, [record, child, resource]);\r\n\r\n    return <ShowView {...props}>{child}</ShowView>;\r\n};\r\n\r\nShowViewGuesser.propTypes = ShowView.propTypes;\r\n", "import * as React from 'react';\r\nimport {\r\n    ChangeEvent,\r\n    Children,\r\n    cloneElement,\r\n    isValidElement,\r\n    ReactElement,\r\n    ReactNode,\r\n    useState,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ResponsiveStyleValue, SxProps } from '@mui/system';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Divider } from '@mui/material';\r\nimport { Outlet, Routes, Route } from 'react-router-dom';\r\nimport {\r\n    RaRecord,\r\n    useRecordContext,\r\n    OptionalRecordContextProvider,\r\n} from 'ra-core';\r\n\r\nimport {\r\n    TabbedShowLayoutTabs,\r\n    getShowLayoutTabFullPath,\r\n} from './TabbedShowLayoutTabs';\r\nimport { Tab } from './Tab';\r\n\r\n/**\r\n * Layout for a Show view showing fields grouped in tabs and laid out in a single column.\r\n *\r\n * It pulls the record from the RecordContext. It renders a set of `<Tabs>`,\r\n * each of which contains a list of record fields in a single-column layout\r\n * (via Material UI's `<Stack>` component).\r\n * `<TabbedShowLayout>` delegates the actual rendering of fields to its children,\r\n * which should be `<TabbedShowLayout.Tab>` components.\r\n * `<TabbedShowLayout.Tab>` wraps each field inside a `<Labeled>` component to add a label.\r\n *\r\n * @example\r\n * // in src/posts.js\r\n * import * as React from \"react\";\r\n * import { Show, TabbedShowLayout, TextField } from 'react-admin';\r\n *\r\n * export const PostShow = () => (\r\n *     <Show>\r\n *         <TabbedShowLayout>\r\n *             <TabbedShowLayout.Tab label=\"Content\">\r\n *                 <TextField source=\"title\" />\r\n *                 <TextField source=\"subtitle\" />\r\n *            </TabbedShowLayout.Tab>\r\n *             <TabbedShowLayout.Tab label=\"Metadata\">\r\n *                 <TextField source=\"category\" />\r\n *            </TabbedShowLayout.Tab>\r\n *         </TabbedShowLayout>\r\n *     </Show>\r\n * );\r\n *\r\n * // in src/App.js\r\n * import * as React from \"react\";\r\n * import { Admin, Resource } from 'react-admin';\r\n *\r\n * import { PostShow } from './posts';\r\n *\r\n * const App = () => (\r\n *     <Admin dataProvider={...}>\r\n *         <Resource name=\"posts\" show={PostShow} />\r\n *     </Admin>\r\n * );\r\n *\r\n * @param {TabbedShowLayoutProps} props\r\n * @param {string} props.className A className to apply to the page content.\r\n * @param {ElementType} props.component The component to use as root component (div by default).\r\n * @param {ReactNode} props.divider An optional divider between each field, passed to `<Stack>`.\r\n * @param {number} props.spacing The spacing to use between each field, passed to `<Stack>`. Defaults to 1.\r\n * @param {Object} props.sx Custom style object.\r\n * @param {boolean} props.syncWithLocation Whether to update the URL when the tab changes. Defaults to true.\r\n * @param {ElementType} props.tabs A custom component for rendering tabs.\r\n */\r\nexport const TabbedShowLayout = (props: TabbedShowLayoutProps) => {\r\n    const {\r\n        children,\r\n        className,\r\n        spacing,\r\n        divider,\r\n        syncWithLocation = true,\r\n        tabs = DefaultTabs,\r\n        value,\r\n        ...rest\r\n    } = props;\r\n    const record = useRecordContext(props);\r\n    const nonNullChildren = Children.toArray(children).filter(\r\n        child => child !== null\r\n    ) as ReactElement<{\r\n        context?: string;\r\n        spacing?: ResponsiveStyleValue<number | string>;\r\n        divider?: ReactNode;\r\n    }>[];\r\n    const [tabValue, setTabValue] = useState(0);\r\n\r\n    const handleTabChange = (event: ChangeEvent<{}>, value: any): void => {\r\n        if (!syncWithLocation) {\r\n            setTabValue(value);\r\n        }\r\n    };\r\n\r\n    if (!record) {\r\n        return null;\r\n    }\r\n\r\n    const renderTabHeaders = () =>\r\n        cloneElement(\r\n            tabs,\r\n            {\r\n                onChange: handleTabChange,\r\n                syncWithLocation,\r\n                value: tabValue,\r\n            },\r\n            nonNullChildren\r\n        );\r\n\r\n    return (\r\n        <OptionalRecordContextProvider value={props.record}>\r\n            <Root className={className} {...sanitizeRestProps(rest)}>\r\n                {syncWithLocation ? (\r\n                    <Routes>\r\n                        <Route\r\n                            path=\"/*\"\r\n                            element={\r\n                                <>\r\n                                    {renderTabHeaders()}\r\n                                    <Divider />\r\n                                    <div\r\n                                        className={\r\n                                            TabbedShowLayoutClasses.content\r\n                                        }\r\n                                    >\r\n                                        <Outlet />\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        >\r\n                            {Children.map(nonNullChildren, (tab, index) =>\r\n                                isValidElement(tab) ? (\r\n                                    <Route\r\n                                        path={getShowLayoutTabFullPath(\r\n                                            tab,\r\n                                            index\r\n                                        )}\r\n                                        element={cloneElement(tab, {\r\n                                            context: 'content',\r\n                                            spacing,\r\n                                            divider,\r\n                                        })}\r\n                                    />\r\n                                ) : null\r\n                            )}\r\n                        </Route>\r\n                    </Routes>\r\n                ) : (\r\n                    <>\r\n                        {renderTabHeaders()}\r\n                        <Divider />\r\n                        <div className={TabbedShowLayoutClasses.content}>\r\n                            {Children.map(nonNullChildren, (tab, index) => {\r\n                                if (\r\n                                    !isValidElement(tab) ||\r\n                                    tabValue !== index\r\n                                ) {\r\n                                    return null;\r\n                                }\r\n                                return cloneElement(tab, {\r\n                                    context: 'content',\r\n                                    spacing,\r\n                                    divider,\r\n                                });\r\n                            })}\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Root>\r\n        </OptionalRecordContextProvider>\r\n    );\r\n};\r\n\r\nTabbedShowLayout.Tab = Tab;\r\n\r\nexport interface TabbedShowLayoutProps {\r\n    children: ReactNode;\r\n    className?: string;\r\n    divider?: ReactNode;\r\n    record?: RaRecord;\r\n    rootPath?: string;\r\n    spacing?: ResponsiveStyleValue<number | string>;\r\n    sx?: SxProps;\r\n    syncWithLocation?: boolean;\r\n    tabs?: ReactElement;\r\n    value?: any;\r\n}\r\n\r\nTabbedShowLayout.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    record: PropTypes.object,\r\n    spacing: PropTypes.any,\r\n    sx: PropTypes.any,\r\n    syncWithLocation: PropTypes.bool,\r\n    tabs: PropTypes.element,\r\n    value: PropTypes.number,\r\n};\r\n\r\nconst DefaultTabs = <TabbedShowLayoutTabs />;\r\n\r\nconst PREFIX = 'RaTabbedShowLayout';\r\n\r\nexport const TabbedShowLayoutClasses = {\r\n    content: `${PREFIX}-content`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    flex: 1,\r\n    [`& .${TabbedShowLayoutClasses.content}`]: {\r\n        padding: `${theme.spacing(1)} ${theme.spacing(2)}`,\r\n    },\r\n}));\r\n\r\nconst sanitizeRestProps = ({\r\n    record,\r\n    resource,\r\n    initialValues,\r\n    staticContext,\r\n    translate,\r\n    tabs,\r\n    ...rest\r\n}: any) => rest;\r\n", "import * as React from 'react';\r\nimport { Children, cloneElement, ReactElement, isValidElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs, { TabsProps } from '@mui/material/Tabs';\r\nimport { useParams } from 'react-router-dom';\r\nimport { TabProps } from './Tab';\r\n\r\nexport const TabbedShowLayoutTabs = ({\r\n    children,\r\n    syncWithLocation,\r\n    value,\r\n    ...rest\r\n}: TabbedShowLayoutTabsProps) => {\r\n    const params = useParams();\r\n\r\n    // params will include eventual parameters from the root pathname and * for the remaining part\r\n    // which should match the tabs paths\r\n    const tabValue = params['*'];\r\n\r\n    return (\r\n        <Tabs\r\n            indicatorColor=\"primary\"\r\n            value={syncWithLocation ? tabValue : value}\r\n            {...rest}\r\n        >\r\n            {Children.map(children, (tab, index) => {\r\n                if (!tab || !isValidElement(tab)) return null;\r\n                // Builds the full tab which is the concatenation of the last matched route in the\r\n                // TabbedShowLayout hierarchy (ex: '/posts/create', '/posts/12', , '/posts/12/show')\r\n                // and the tab path.\r\n                // This will be used as the Tab's value\r\n                const tabPath = getShowLayoutTabFullPath(tab, index);\r\n\r\n                return cloneElement(tab, {\r\n                    context: 'header',\r\n                    value: syncWithLocation ? tabPath : index,\r\n                    syncWithLocation,\r\n                });\r\n            })}\r\n        </Tabs>\r\n    );\r\n};\r\n\r\nexport const getShowLayoutTabFullPath = (tab, index) =>\r\n    `${tab.props.path ? `${tab.props.path}` : index > 0 ? index : ''}`;\r\n\r\nexport interface TabbedShowLayoutTabsProps extends TabsProps {\r\n    children?: ReactElement<TabProps>;\r\n    syncWithLocation?: boolean;\r\n}\r\n\r\nTabbedShowLayoutTabs.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n", "import * as React from 'react';\r\nimport { isValidElement, ReactElement, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Tab as MuiTab, TabProps as MuiTabProps, Stack } from '@mui/material';\r\nimport { ResponsiveStyleValue } from '@mui/system';\r\nimport { useTranslate, RaRecord } from 'ra-core';\r\nimport clsx from 'clsx';\r\n\r\nimport { Labeled } from '../Labeled';\r\n\r\n/**\r\n * Tab element for the TabbedShowLayout.\r\n *\r\n * The `<Tab>` component accepts the following props:\r\n *\r\n * - label: The string displayed for each tab\r\n * - icon: The icon to show before the label (optional). Must be a component.\r\n * - path: The string used for custom urls\r\n *\r\n * It is also available as TabbedShowLayout.Tab.\r\n *\r\n * @example\r\n *     // in src/posts.js\r\n *     import * as React from \"react\";\r\n *     import FavoriteIcon from '@mui/icons-material/Favorite';\r\n *     import PersonPinIcon from '@mui/icons-material/PersonPin';\r\n *     import { Show, TabbedShowLayout, TextField } from 'react-admin';\r\n *\r\n *     export const PostShow = (props) => (\r\n *         <Show {...props}>\r\n *             <TabbedShowLayout>\r\n *                 <TabbedShowLayout.Tab label=\"Content\" icon={<FavoriteIcon />}>\r\n *                     <TextField source=\"title\" />\r\n *                     <TextField source=\"subtitle\" />\r\n *                </TabbedShowLayout.Tab>\r\n *                 <TabbedShowLayout.Tab label=\"Metadata\" icon={<PersonIcon />} path=\"metadata\">\r\n *                     <TextField source=\"category\" />\r\n *                </TabbedShowLayout.Tab>\r\n *             </TabbedShowLayout>\r\n *         </Show>\r\n *     );\r\n *\r\n *     // in src/App.js\r\n *     import * as React from \"react\";\r\n *     import { Admin, Resource } from 'react-admin';\r\n *\r\n *     import { PostShow } from './posts';\r\n *\r\n *     const App = () => (\r\n *         <Admin dataProvider={...}>\r\n *             <Resource name=\"posts\" show={PostShow} />\r\n *         </Admin>\r\n *     );\r\n *     export default App;\r\n */\r\nexport const Tab = ({\r\n    children,\r\n    contentClassName,\r\n    context,\r\n    count,\r\n    className,\r\n    divider,\r\n    icon,\r\n    label,\r\n    record,\r\n    spacing = 1,\r\n    syncWithLocation = true,\r\n    value,\r\n    ...rest\r\n}: TabProps) => {\r\n    const translate = useTranslate();\r\n    const location = useLocation();\r\n    const propsForLink = {\r\n        component: Link,\r\n        to: { ...location, pathname: value },\r\n    };\r\n\r\n    const renderHeader = () => {\r\n        let tabLabel =\r\n            typeof label === 'string' ? translate(label, { _: label }) : label;\r\n        if (count !== undefined) {\r\n            tabLabel = (\r\n                <span>\r\n                    {tabLabel} ({count})\r\n                </span>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <MuiTab\r\n                key={`tab-header-${value}`}\r\n                label={tabLabel}\r\n                value={value}\r\n                icon={icon}\r\n                className={clsx('show-tab', className)}\r\n                {...(syncWithLocation ? propsForLink : {})} // to avoid TypeScript screams, see https://github.com/mui/material-ui/issues/9106#issuecomment-451270521\r\n                {...rest}\r\n            />\r\n        );\r\n    };\r\n\r\n    const renderContent = () => (\r\n        <Stack className={contentClassName} spacing={spacing} divider={divider}>\r\n            {React.Children.map(children, field =>\r\n                field && isValidElement<any>(field) ? (\r\n                    <Labeled\r\n                        key={field.props.source}\r\n                        className={clsx(\r\n                            'ra-field',\r\n                            field.props.source &&\r\n                                `ra-field-${field.props.source}`,\r\n                            field.props.className\r\n                        )}\r\n                    >\r\n                        {field}\r\n                    </Labeled>\r\n                ) : null\r\n            )}\r\n        </Stack>\r\n    );\r\n\r\n    return context === 'header' ? renderHeader() : renderContent();\r\n};\r\n\r\nTab.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    contentClassName: PropTypes.string,\r\n    context: PropTypes.oneOf(['header', 'content']),\r\n    count: PropTypes.node,\r\n    icon: PropTypes.element,\r\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\r\n        .isRequired,\r\n    path: PropTypes.string,\r\n    spacing: PropTypes.any,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nexport interface TabProps extends Omit<MuiTabProps, 'children'> {\r\n    children: ReactNode;\r\n    contentClassName?: string;\r\n    context?: 'header' | 'content';\r\n    count?: ReactNode;\r\n    className?: string;\r\n    divider?: ReactNode;\r\n    icon?: ReactElement;\r\n    label: string | ReactElement;\r\n    path?: string;\r\n    record?: RaRecord;\r\n    spacing?: ResponsiveStyleValue<number | string>;\r\n    syncWithLocation?: boolean;\r\n    value?: string | number;\r\n}\r\n", "import * as React from 'react';\r\nimport {\r\n    useResourceContext,\r\n    useGetList,\r\n    useTimeout,\r\n    useCreatePath,\r\n    SortPayload,\r\n} from 'ra-core';\r\nimport { Typography, TypographyProps, CircularProgress } from '@mui/material';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\n\r\nimport { Link } from '../Link';\r\n\r\n/**\r\n * Fetch and render the number of records of a given resource\r\n *\r\n * Relies on dataProvider.getList() returning a total property\r\n *\r\n * @example // Display the number of records in the current resource (based on ResourceContext)\r\n * <Count />\r\n *\r\n * @example // Display the number of posts\r\n * <Count resource=\"posts\" />\r\n *\r\n * @example // Display the number of published posts\r\n * <Count resource=\"posts\" filter={{ is_published: true }}/>\r\n *\r\n * @example // Display the number of posts, with a custom Typography variant\r\n * <Count resource=\"posts\" variant=\"h1\" />\r\n *\r\n * @see ReferenceManyCount for a similar component which fetches the number of records related to the current one\r\n */\r\nexport const Count = (props: CountProps) => {\r\n    const {\r\n        filter,\r\n        sort,\r\n        link,\r\n        resource: resourceFromProps,\r\n        timeout = 1000,\r\n        ...rest\r\n    } = props;\r\n    const resource = useResourceContext(props);\r\n    const oneSecondHasPassed = useTimeout(timeout);\r\n    const createPath = useCreatePath();\r\n\r\n    const { total, isLoading, error } = useGetList(resource, {\r\n        filter,\r\n        sort,\r\n        pagination: { perPage: 1, page: 1 },\r\n    });\r\n\r\n    const body = isLoading ? (\r\n        oneSecondHasPassed ? (\r\n            <CircularProgress size={14} />\r\n        ) : (\r\n            ''\r\n        )\r\n    ) : error ? (\r\n        <ErrorIcon color=\"error\" fontSize=\"small\" titleAccess=\"error\" />\r\n    ) : (\r\n        total\r\n    );\r\n\r\n    return link ? (\r\n        // @ts-ignore TypeScript complains that the props for <a> aren't the same as for <span>\r\n        <Link\r\n            to={{\r\n                pathname: createPath({ resource, type: 'list' }),\r\n                search: filter ? `filter=${JSON.stringify(filter)}` : undefined,\r\n            }}\r\n            variant=\"body2\"\r\n            onClick={e => e.stopPropagation()}\r\n            {...rest}\r\n        >\r\n            {body}\r\n        </Link>\r\n    ) : (\r\n        <Typography component=\"span\" variant=\"body2\" {...rest}>\r\n            {body}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nexport interface CountProps extends TypographyProps {\r\n    filter?: any;\r\n    sort?: SortPayload;\r\n    link?: Boolean;\r\n    resource?: string;\r\n    timeout?: number;\r\n}\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Typography } from '@mui/material';\r\nimport Inbox from '@mui/icons-material/Inbox';\r\nimport {\r\n    useTranslate,\r\n    useResourceDefinition,\r\n    useResourceContext,\r\n    useGetResourceLabel,\r\n} from 'ra-core';\r\n\r\nimport { CreateButton } from '../button';\r\n\r\nexport const Empty = (props: EmptyProps) => {\r\n    const { className } = props;\r\n    const { hasCreate } = useResourceDefinition(props);\r\n    const resource = useResourceContext(props);\r\n\r\n    const translate = useTranslate();\r\n\r\n    const getResourceLabel = useGetResourceLabel();\r\n    const resourceName = translate(`resources.${resource}.forcedCaseName`, {\r\n        smart_count: 0,\r\n        _: getResourceLabel(resource, 0),\r\n    });\r\n\r\n    const emptyMessage = translate('ra.page.empty', { name: resourceName });\r\n    const inviteMessage = translate('ra.page.invite');\r\n\r\n    return (\r\n        <Root className={className}>\r\n            <div className={EmptyClasses.message}>\r\n                <Inbox className={EmptyClasses.icon} />\r\n                <Typography variant=\"h4\" paragraph>\r\n                    {translate(`resources.${resource}.empty`, {\r\n                        _: emptyMessage,\r\n                    })}\r\n                </Typography>\r\n                {hasCreate && (\r\n                    <Typography variant=\"body1\">\r\n                        {translate(`resources.${resource}.invite`, {\r\n                            _: inviteMessage,\r\n                        })}\r\n                    </Typography>\r\n                )}\r\n            </div>\r\n            {hasCreate && (\r\n                <div className={EmptyClasses.toolbar}>\r\n                    <CreateButton variant=\"contained\" />\r\n                </div>\r\n            )}\r\n        </Root>\r\n    );\r\n};\r\n\r\nexport interface EmptyProps {\r\n    resource?: string;\r\n    hasCreate?: boolean;\r\n    className?: string;\r\n}\r\n\r\nconst PREFIX = 'RaEmpty';\r\n\r\nexport const EmptyClasses = {\r\n    message: `${PREFIX}-message`,\r\n    icon: `${PREFIX}-icon`,\r\n    toolbar: `${PREFIX}-toolbar`,\r\n};\r\n\r\nconst Root = styled('span', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    flex: 1,\r\n    [`& .${EmptyClasses.message}`]: {\r\n        textAlign: 'center',\r\n        opacity: theme.palette.mode === 'light' ? 0.5 : 0.8,\r\n        margin: '0 1em',\r\n        color:\r\n            theme.palette.mode === 'light'\r\n                ? 'inherit'\r\n                : theme.palette.text.primary,\r\n    },\r\n\r\n    [`& .${EmptyClasses.icon}`]: {\r\n        width: '9em',\r\n        height: '9em',\r\n    },\r\n\r\n    [`& .${EmptyClasses.toolbar}`]: {\r\n        textAlign: 'center',\r\n        marginTop: '2em',\r\n    },\r\n}));\r\n", "import * as React from 'react';\r\nimport { ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    InfiniteListBase,\r\n    InfiniteListControllerProps,\r\n    RaRecord,\r\n} from 'ra-core';\r\n\r\nimport { TitlePropType } from '../layout/Title';\r\nimport { InfinitePagination } from './pagination';\r\nimport { ListView, ListViewProps } from './ListView';\r\n\r\n/**\r\n * Infinite List page component\r\n *\r\n * The <InfiniteList> component renders the list layout (title, buttons, filters),\r\n * and fetches the list of records from the REST API.\r\n *\r\n * It then delegates the rendering of the list of records to its child component.\r\n * Usually, it's a <Datagrid>, responsible for displaying a table with one row for each post.\r\n *\r\n * It contains an <InfinitePagination> component, which fetches the next page of records\r\n * when the user scrolls to the bottom of the list.\r\n *\r\n * The <InfiniteList> component accepts the following props:\r\n *\r\n * - actions\r\n * - aside: Side Component\r\n * - children: List Layout\r\n * - component\r\n * - disableAuthentication\r\n * - disableSyncWithLocation\r\n * - empty: Empty Page Component\r\n * - emptyWhileLoading\r\n * - exporter\r\n * - filters: Filter Inputs\r\n * - filter: Permanent Filter\r\n * - filterDefaultValues\r\n * - pagination: Pagination Component\r\n * - perPage: Pagination Size\r\n * - queryOptions\r\n * - sort: Default Sort Field & Order\r\n * - title\r\n * - sx: CSS API\r\n *\r\n * @example\r\n * const postFilters = [\r\n *     <TextInput label=\"Search\" source=\"q\" alwaysOn />,\r\n *     <TextInput label=\"Title\" source=\"title\" />\r\n * ];\r\n * export const PostList = () => (\r\n *     <InfiniteList\r\n *         title=\"List of posts\"\r\n *         sort={{ field: 'published_at' }}\r\n *         filter={{ is_published: true }}\r\n *         filters={postFilters}\r\n *     >\r\n *         <Datagrid>\r\n *             <TextField source=\"id\" />\r\n *             <TextField source=\"title\" />\r\n *             <EditButton />\r\n *         </Datagrid>\r\n *     </List>\r\n * );\r\n */\r\nexport const InfiniteList = <RecordType extends RaRecord = any>({\r\n    debounce,\r\n    disableAuthentication,\r\n    disableSyncWithLocation,\r\n    exporter,\r\n    filter = defaultFilter,\r\n    filterDefaultValues,\r\n    pagination = defaultPagination,\r\n    perPage = 10,\r\n    queryOptions,\r\n    resource,\r\n    sort,\r\n    storeKey,\r\n    ...rest\r\n}: InfiniteListProps<RecordType>): ReactElement => (\r\n    <InfiniteListBase<RecordType>\r\n        debounce={debounce}\r\n        disableAuthentication={disableAuthentication}\r\n        disableSyncWithLocation={disableSyncWithLocation}\r\n        exporter={exporter}\r\n        filter={filter}\r\n        filterDefaultValues={filterDefaultValues}\r\n        perPage={perPage}\r\n        queryOptions={queryOptions}\r\n        resource={resource}\r\n        sort={sort}\r\n        storeKey={storeKey}\r\n    >\r\n        <ListView<RecordType> {...rest} pagination={pagination} />\r\n    </InfiniteListBase>\r\n);\r\n\r\nconst defaultPagination = <InfinitePagination />;\r\nconst defaultFilter = {};\r\n\r\nexport interface InfiniteListProps<RecordType extends RaRecord = any>\r\n    extends InfiniteListControllerProps<RecordType>,\r\n        ListViewProps {}\r\n\r\nInfiniteList.propTypes = {\r\n    // the props you can change\r\n    // @ts-ignore-line\r\n    actions: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\r\n    aside: PropTypes.element,\r\n    children: PropTypes.node.isRequired,\r\n    className: PropTypes.string,\r\n    emptyWhileLoading: PropTypes.bool,\r\n    filter: PropTypes.object,\r\n    filterDefaultValues: PropTypes.object,\r\n    filters: PropTypes.oneOfType([\r\n        PropTypes.element,\r\n        PropTypes.arrayOf(PropTypes.element),\r\n    ]),\r\n    // @ts-ignore-line\r\n    pagination: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\r\n    perPage: PropTypes.number,\r\n    //@ts-ignore-line\r\n    sort: PropTypes.shape({\r\n        field: PropTypes.string,\r\n        order: PropTypes.string,\r\n    }),\r\n    sx: PropTypes.any,\r\n    title: TitlePropType,\r\n    // the props managed by react-admin\r\n    disableSyncWithLocation: PropTypes.bool,\r\n    hasCreate: PropTypes.bool,\r\n    hasEdit: PropTypes.bool,\r\n    hasList: PropTypes.bool,\r\n    hasShow: PropTypes.bool,\r\n    resource: PropTypes.string,\r\n};\r\n", "import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { cloneElement, ReactElement, ReactNode, ElementType } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { SxProps } from '@mui/system';\r\nimport Card from '@mui/material/Card';\r\nimport clsx from 'clsx';\r\nimport { ComponentPropType, useListContext, RaRecord } from 'ra-core';\r\n\r\nimport { Title, TitlePropType } from '../layout/Title';\r\nimport { ListToolbar } from './ListToolbar';\r\nimport { Pagination as DefaultPagination } from './pagination';\r\nimport { ListActions as DefaultActions } from './ListActions';\r\nimport { Empty } from './Empty';\r\nimport { Error } from '../layout';\r\n\r\nconst defaultActions = <DefaultActions />;\r\nconst defaultPagination = <DefaultPagination />;\r\nconst defaultEmpty = <Empty />;\r\nconst DefaultComponent = Card;\r\n\r\nexport const ListView = <RecordType extends RaRecord = any>(\r\n    props: ListViewProps\r\n) => {\r\n    const {\r\n        actions = defaultActions,\r\n        aside,\r\n        filters,\r\n        bulkActionButtons,\r\n        emptyWhileLoading,\r\n        hasCreate,\r\n        pagination = defaultPagination,\r\n        children,\r\n        className,\r\n        component: Content = DefaultComponent,\r\n        title,\r\n        empty = defaultEmpty,\r\n        ...rest\r\n    } = props;\r\n    const {\r\n        defaultTitle,\r\n        data,\r\n        error,\r\n        isLoading,\r\n        filterValues,\r\n        resource,\r\n    } = useListContext<RecordType>(props);\r\n\r\n    if (!children || (!data && isLoading && emptyWhileLoading)) {\r\n        return null;\r\n    }\r\n\r\n    const renderList = () => (\r\n        <div className={ListClasses.main}>\r\n            {(filters || actions) && (\r\n                <ListToolbar\r\n                    className={ListClasses.actions}\r\n                    filters={filters}\r\n                    actions={actions}\r\n                    hasCreate={hasCreate}\r\n                />\r\n            )}\r\n            <Content className={ListClasses.content}>\r\n                {bulkActionButtons &&\r\n                children &&\r\n                React.isValidElement<any>(children)\r\n                    ? // FIXME remove in 5.0\r\n                      cloneElement(children, {\r\n                          bulkActionButtons,\r\n                      })\r\n                    : children}\r\n            </Content>\r\n            {error ? (\r\n                <Error error={error} resetErrorBoundary={null} />\r\n            ) : (\r\n                pagination !== false && pagination\r\n            )}\r\n        </div>\r\n    );\r\n\r\n    const renderEmpty = () =>\r\n        empty !== false &&\r\n        cloneElement(empty, { className: ListClasses.noResults, hasCreate });\r\n\r\n    const shouldRenderEmptyPage =\r\n        !isLoading &&\r\n        data?.length === 0 &&\r\n        !Object.keys(filterValues).length &&\r\n        empty !== false;\r\n\r\n    return (\r\n        <Root className={clsx('list-page', className)} {...rest}>\r\n            <Title\r\n                title={title}\r\n                defaultTitle={defaultTitle}\r\n                preferenceKey={`${resource}.list.title`}\r\n            />\r\n            {shouldRenderEmptyPage ? renderEmpty() : renderList()}\r\n            {aside}\r\n        </Root>\r\n    );\r\n};\r\n\r\nListView.propTypes = {\r\n    actions: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\r\n    aside: PropTypes.element,\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    component: ComponentPropType,\r\n    emptyWhileLoading: PropTypes.bool,\r\n    filters: PropTypes.oneOfType([\r\n        PropTypes.element,\r\n        PropTypes.arrayOf(PropTypes.element),\r\n    ]),\r\n    hasCreate: PropTypes.bool,\r\n    pagination: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\r\n    title: TitlePropType,\r\n};\r\n\r\nexport interface ListViewProps {\r\n    actions?: ReactElement | false;\r\n    aside?: ReactElement;\r\n    /**\r\n     * @deprecated pass the bulkActionButtons prop to the List child (Datagrid or SimpleList) instead\r\n     */\r\n    bulkActionButtons?: ReactElement | false;\r\n    className?: string;\r\n    children: ReactNode;\r\n    component?: ElementType;\r\n    empty?: ReactElement | false;\r\n    emptyWhileLoading?: boolean;\r\n    filters?: ReactElement | ReactElement[];\r\n    hasCreate?: boolean;\r\n    pagination?: ReactElement | false;\r\n    title?: string | ReactElement;\r\n    sx?: SxProps;\r\n}\r\n\r\nconst PREFIX = 'RaList';\r\n\r\nexport const ListClasses = {\r\n    main: `${PREFIX}-main`,\r\n    content: `${PREFIX}-content`,\r\n    actions: `${PREFIX}-actions`,\r\n    noResults: `${PREFIX}-noResults`,\r\n};\r\n\r\nconst Root = styled('div', {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    display: 'flex',\r\n\r\n    [`& .${ListClasses.main}`]: {\r\n        flex: '1 1 auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n\r\n    [`& .${ListClasses.content}`]: {\r\n        position: 'relative',\r\n        [theme.breakpoints.down('sm')]: {\r\n            boxShadow: 'none',\r\n        },\r\n        overflow: 'inherit',\r\n    },\r\n\r\n    [`& .${ListClasses.actions}`]: {},\r\n\r\n    [`& .${ListClasses.noResults}`]: {},\r\n}));\r\n", "import * as React from 'react';\r\nimport { FC, memo } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Toolbar, ToolbarProps } from '@mui/material';\r\nimport { Exporter } from 'ra-core';\r\n\r\nimport { FilterForm } from './filter';\r\nimport { FilterContext } from './FilterContext';\r\n\r\nexport const ListToolbar: FC<ListToolbarProps> = memo(props => {\r\n    const { filters, actions, className, ...rest } = props;\r\n\r\n    return Array.isArray(filters) ? (\r\n        <FilterContext.Provider value={filters}>\r\n            <Root className={className}>\r\n                <FilterForm />\r\n                <span />\r\n                {actions &&\r\n                    React.cloneElement(actions, {\r\n                        ...rest,\r\n                        ...actions.props,\r\n                    })}\r\n            </Root>\r\n        </FilterContext.Provider>\r\n    ) : (\r\n        <Root className={className}>\r\n            {filters &&\r\n                React.cloneElement(filters, {\r\n                    ...rest,\r\n                    context: 'form',\r\n                })}\r\n            <span />\r\n            {actions &&\r\n                React.cloneElement(actions, {\r\n                    ...rest,\r\n                    filters,\r\n                    ...actions.props,\r\n                })}\r\n        </Root>\r\n    );\r\n});\r\n\r\nListToolbar.propTypes = {\r\n    filters: PropTypes.oneOfType([\r\n        PropTypes.element,\r\n        PropTypes.arrayOf(PropTypes.element),\r\n    ]),\r\n    // @ts-ignore\r\n    actions: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\r\n    // @ts-ignore\r\n    exporter: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\r\n};\r\n\r\nexport interface ListToolbarProps\r\n    extends Omit<ToolbarProps, 'classes' | 'onSelect'> {\r\n    actions?: ReactElement | false;\r\n    exporter?: Exporter | false;\r\n    filters?: ReactElement | ReactElement[];\r\n    hasCreate?: boolean;\r\n}\r\n\r\nconst PREFIX = 'RaListToolbar';\r\n\r\nconst Root = styled(Toolbar, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    position: 'relative',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-end',\r\n    width: '100%',\r\n    padding: '0 !important',\r\n    minHeight: theme.spacing(8),\r\n    [theme.breakpoints.down('md')]: {\r\n        margin: 0,\r\n        flexWrap: 'wrap',\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        flexWrap: 'inherit',\r\n        flexDirection: 'column-reverse',\r\n    },\r\n}));\r\n", "import * as React from 'react';\r\nimport { cloneElement, useMemo, useContext, ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    sanitizeListRestProps,\r\n    Identifier,\r\n    SortPayload,\r\n    Exporter,\r\n    useListContext,\r\n    useResourceContext,\r\n    useResourceDefinition,\r\n} from 'ra-core';\r\nimport { ToolbarProps } from '@mui/material';\r\n\r\nimport TopToolbar from '../layout/TopToolbar';\r\nimport { CreateButton, ExportButton } from '../button';\r\nimport { FilterContext } from './FilterContext';\r\nimport { FilterButton } from './filter';\r\n\r\n/**\r\n * Action Toolbar for the List view\r\n *\r\n * Internal component. If you want to add or remove actions for a List view,\r\n * write your own ListActions Component. Then, in the <List> component,\r\n * use it in the `actions` prop to pass a custom component.\r\n *\r\n * @example\r\n *     import { cloneElement } from 'react';\r\n *     import Button from '@mui/material/Button';\r\n *     import { TopToolbar, List, CreateButton, ExportButton } from 'react-admin';\r\n *\r\n *     const PostListActions = ({ filters }) => (\r\n *         <TopToolbar>\r\n *             { cloneElement(filters, { context: 'button' }) }\r\n *             <CreateButton/>\r\n *             <ExportButton/>\r\n *             // Add your custom actions here //\r\n *             <Button onClick={customAction}>Custom Action</Button>\r\n *         </TopToolbar>\r\n *     );\r\n *\r\n *     export const PostList = (props) => (\r\n *         <List actions={<PostListActions />} {...props}>\r\n *             ...\r\n *         </List>\r\n *     );\r\n */\r\nexport const ListActions = (props: ListActionsProps) => {\r\n    const {\r\n        className,\r\n        filters: filtersProp,\r\n        hasCreate: _,\r\n        selectedIds = defaultSelectedIds,\r\n        onUnselectItems = defaultOnUnselectItems,\r\n        ...rest\r\n    } = props;\r\n\r\n    const {\r\n        sort,\r\n        displayedFilters,\r\n        filterValues,\r\n        exporter,\r\n        showFilter,\r\n        total,\r\n    } = useListContext({ ...props, selectedIds, onUnselectItems });\r\n    const resource = useResourceContext(props);\r\n    const { hasCreate } = useResourceDefinition(props);\r\n    const filters = useContext(FilterContext) || filtersProp;\r\n    return useMemo(\r\n        () => (\r\n            <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\r\n                {filtersProp\r\n                    ? cloneElement(filtersProp, {\r\n                          resource,\r\n                          showFilter,\r\n                          displayedFilters,\r\n                          filterValues,\r\n                          context: 'button',\r\n                      })\r\n                    : filters && <FilterButton />}\r\n                {hasCreate && <CreateButton />}\r\n                {exporter !== false && (\r\n                    <ExportButton\r\n                        disabled={total === 0}\r\n                        resource={resource}\r\n                        sort={sort}\r\n                        filterValues={filterValues}\r\n                    />\r\n                )}\r\n            </TopToolbar>\r\n        ),\r\n        /* eslint-disable react-hooks/exhaustive-deps */\r\n        [\r\n            resource,\r\n            displayedFilters,\r\n            filterValues,\r\n            filtersProp,\r\n            showFilter,\r\n            filters,\r\n            total,\r\n            className,\r\n            sort,\r\n            exporter,\r\n            hasCreate,\r\n        ]\r\n    );\r\n};\r\n\r\nListActions.propTypes = {\r\n    className: PropTypes.string,\r\n    sort: PropTypes.any,\r\n    displayedFilters: PropTypes.object,\r\n    exporter: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\r\n    filters: PropTypes.element,\r\n    filterValues: PropTypes.object,\r\n    hasCreate: PropTypes.bool,\r\n    resource: PropTypes.string,\r\n    onUnselectItems: PropTypes.func,\r\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\r\n    showFilter: PropTypes.func,\r\n    total: PropTypes.number,\r\n};\r\n\r\nexport interface ListActionsProps extends ToolbarProps {\r\n    sort?: SortPayload;\r\n    className?: string;\r\n    resource?: string;\r\n    filters?: ReactElement<any>;\r\n    displayedFilters?: any;\r\n    exporter?: Exporter | boolean;\r\n    filterValues?: any;\r\n    permanentFilter?: any;\r\n    hasCreate?: boolean;\r\n    selectedIds?: Identifier[];\r\n    onUnselectItems?: () => void;\r\n    showFilter?: (filterName: string, defaultValue: any) => void;\r\n    total?: number;\r\n}\r\n\r\nconst defaultSelectedIds = [];\r\nconst defaultOnUnselectItems = () => null;\r\n", "import * as React from 'react';\r\nimport { ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ListBase, ListControllerProps, RaRecord } from 'ra-core';\r\n\r\nimport { TitlePropType } from '../layout/Title';\r\n\r\nimport { ListView, ListViewProps } from './ListView';\r\n\r\n/**\r\n * List page component\r\n *\r\n * The <List> component renders the list layout (title, buttons, filters, pagination),\r\n * and fetches the list of records from the REST API.\r\n *\r\n * It then delegates the rendering of the list of records to its child component.\r\n * Usually, it's a <Datagrid>, responsible for displaying a table with one row for each post.\r\n *\r\n * The <List> component accepts the following props:\r\n *\r\n * - actions\r\n * - aside: Side Component\r\n * - children: List Layout\r\n * - component\r\n * - disableAuthentication\r\n * - disableSyncWithLocation\r\n * - empty: Empty Page Component\r\n * - emptyWhileLoading\r\n * - exporter\r\n * - filters: Filter Inputs\r\n * - filter: Permanent Filter\r\n * - filterDefaultValues\r\n * - pagination: Pagination Component\r\n * - perPage: Pagination Size\r\n * - queryOptions\r\n * - sort: Default Sort Field & Order\r\n * - title\r\n * - sx: CSS API\r\n *\r\n * @example\r\n * const postFilters = [\r\n *     <TextInput label=\"Search\" source=\"q\" alwaysOn />,\r\n *     <TextInput label=\"Title\" source=\"title\" />\r\n * ];\r\n * export const PostList = () => (\r\n *     <List\r\n *         title=\"List of posts\"\r\n *         sort={{ field: 'published_at' }}\r\n *         filter={{ is_published: true }}\r\n *         filters={postFilters}\r\n *     >\r\n *         <Datagrid>\r\n *             <TextField source=\"id\" />\r\n *             <TextField source=\"title\" />\r\n *             <EditButton />\r\n *         </Datagrid>\r\n *     </List>\r\n * );\r\n */\r\nexport const List = <RecordType extends RaRecord = any>({\r\n    debounce,\r\n    disableAuthentication,\r\n    disableSyncWithLocation,\r\n    exporter,\r\n    filter = defaultFilter,\r\n    filterDefaultValues,\r\n    perPage = 10,\r\n    queryOptions,\r\n    resource,\r\n    sort,\r\n    storeKey,\r\n    ...rest\r\n}: ListProps<RecordType>): ReactElement => (\r\n    <ListBase<RecordType>\r\n        debounce={debounce}\r\n        disableAuthentication={disableAuthentication}\r\n        disableSyncWithLocation={disableSyncWithLocation}\r\n        exporter={exporter}\r\n        filter={filter}\r\n        filterDefaultValues={filterDefaultValues}\r\n        perPage={perPage}\r\n        queryOptions={queryOptions}\r\n        resource={resource}\r\n        sort={sort}\r\n        storeKey={storeKey}\r\n    >\r\n        <ListView<RecordType> {...rest} />\r\n    </ListBase>\r\n);\r\n\r\nexport interface ListProps<RecordType extends RaRecord = any>\r\n    extends ListControllerProps<RecordType>,\r\n        ListViewProps {}\r\n\r\nList.propTypes = {\r\n    // the props you can change\r\n    // @ts-ignore-line\r\n    actions: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\r\n    aside: PropTypes.element,\r\n    children: PropTypes.node.isRequired,\r\n    className: PropTypes.string,\r\n    emptyWhileLoading: PropTypes.bool,\r\n    filter: PropTypes.object,\r\n    filterDefaultValues: PropTypes.object,\r\n    filters: PropTypes.oneOfType([\r\n        PropTypes.element,\r\n        PropTypes.arrayOf(PropTypes.element),\r\n    ]),\r\n    // @ts-ignore-line\r\n    pagination: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\r\n    perPage: PropTypes.number,\r\n    //@ts-ignore-line\r\n    sort: PropTypes.shape({\r\n        field: PropTypes.string,\r\n        order: PropTypes.string,\r\n    }),\r\n    sx: PropTypes.any,\r\n    title: TitlePropType,\r\n    // the props managed by react-admin\r\n    disableSyncWithLocation: PropTypes.bool,\r\n    hasCreate: PropTypes.bool,\r\n    resource: PropTypes.string,\r\n};\r\n\r\nconst defaultFilter = {};\r\n", "import * as React from 'react';\r\nimport { Datagrid } from './datagrid';\r\nimport { SingleFieldList } from './SingleFieldList';\r\nimport {\r\n    ArrayField,\r\n    BooleanField,\r\n    ChipField,\r\n    DateField,\r\n    EmailField,\r\n    NumberField,\r\n    ReferenceField,\r\n    ReferenceArrayField,\r\n    TextField,\r\n    UrlField,\r\n} from '../field';\r\n\r\nexport const listFieldTypes = {\r\n    table: {\r\n        component: props => {\r\n            const { hasEdit, hasShow, ...rest } = props;\r\n            return (\r\n                <Datagrid\r\n                    rowClick={!hasEdit && hasShow ? 'show' : 'edit'}\r\n                    {...rest}\r\n                />\r\n            );\r\n        }, // eslint-disable-line react/display-name\r\n        representation: (props, children) => `        <Datagrid rowClick=\"${\r\n            !props.hasEdit && props.hasShow ? 'show' : 'edit'\r\n        }\">\r\n${children.map(child => `            ${child.getRepresentation()}`).join('\\n')}\r\n        </Datagrid>`,\r\n    },\r\n    array: {\r\n        // eslint-disable-next-line react/display-name\r\n        component: ({ children, ...props }) => (\r\n            <ArrayField {...props}>\r\n                <SingleFieldList>\r\n                    <ChipField\r\n                        source={children.length > 0 && children[0].props.source}\r\n                    />\r\n                </SingleFieldList>\r\n            </ArrayField>\r\n        ),\r\n        representation: (props, children) =>\r\n            `<ArrayField source=\"${\r\n                props.source\r\n            }\"><SingleFieldList><ChipField source=\"${\r\n                children.length > 0 && children[0].getProps().source\r\n            }\" /></SingleFieldList></ArrayField>`,\r\n    },\r\n    boolean: {\r\n        component: BooleanField,\r\n        representation: props => `<BooleanField source=\"${props.source}\" />`,\r\n    },\r\n    date: {\r\n        component: DateField,\r\n        representation: props => `<DateField source=\"${props.source}\" />`,\r\n    },\r\n    email: {\r\n        component: EmailField,\r\n        representation: props => `<EmailField source=\"${props.source}\" />`,\r\n    },\r\n    id: {\r\n        component: TextField,\r\n        representation: props => `<TextField source=\"${props.source}\" />`,\r\n    },\r\n    number: {\r\n        component: NumberField,\r\n        representation: props => `<NumberField source=\"${props.source}\" />`,\r\n    },\r\n    reference: {\r\n        component: ReferenceField,\r\n        representation: props =>\r\n            `<ReferenceField source=\"${props.source}\" reference=\"${props.reference}\" />`,\r\n    },\r\n    referenceChild: {\r\n        component: () => <TextField source=\"id\" />, // eslint-disable-line react/display-name\r\n        representation: () => `<TextField source=\"id\" />`,\r\n    },\r\n    referenceArray: {\r\n        component: ReferenceArrayField,\r\n        representation: props =>\r\n            `<ReferenceArrayField source=\"${props.source}\" reference=\"${props.reference}\" />`,\r\n    },\r\n    referenceArrayChild: {\r\n        component: () => (\r\n            <SingleFieldList>\r\n                <ChipField source=\"id\" />\r\n            </SingleFieldList>\r\n        ), // eslint-disable-line react/display-name\r\n        representation: () =>\r\n            `<SingleFieldList><ChipField source=\"id\" /></SingleFieldList>`,\r\n    },\r\n    richText: undefined, // never display a rich text field in a datagrid\r\n    string: {\r\n        component: TextField,\r\n        representation: props => `<TextField source=\"${props.source}\" />`,\r\n    },\r\n    url: {\r\n        component: UrlField,\r\n        representation: props => `<UrlField source=\"${props.source}\" />`,\r\n    },\r\n};\r\n", "import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport inflection from 'inflection';\r\nimport {\r\n    ListBase,\r\n    getElementsFromRecords,\r\n    InferredElement,\r\n    useListContext,\r\n    useResourceContext,\r\n    RaRecord,\r\n    useResourceDefinition,\r\n} from 'ra-core';\r\n\r\nimport { ListProps } from './List';\r\nimport { ListView, ListViewProps } from './ListView';\r\nimport { listFieldTypes } from './listFieldTypes';\r\n\r\n/**\r\n * List component rendering a <Datagrid> based on the result of the\r\n * dataProvider.getList() call.\r\n *\r\n * The result (choice and type of columns) isn't configurable, but the\r\n * <ListGuesser> outputs the <Datagrid> it has guessed to the console so that\r\n * developers can start from there.\r\n *\r\n * To be used as the list prop of a <Resource>.\r\n *\r\n * @example\r\n *\r\n * import { Admin, Resource, ListGuesser } from 'react-admin';\r\n *\r\n * const App = () => (\r\n *     <Admin dataProvider={myDataProvider}>\r\n *         <Resource name=\"posts\" list={ListGuesser} />\r\n *     </Admin>\r\n * );\r\n */\r\nexport const ListGuesser = <RecordType extends RaRecord = any>(\r\n    props: Omit<ListProps, 'children'>\r\n) => {\r\n    const {\r\n        debounce,\r\n        disableAuthentication,\r\n        disableSyncWithLocation,\r\n        exporter,\r\n        filter,\r\n        filterDefaultValues,\r\n        perPage,\r\n        queryOptions,\r\n        resource,\r\n        sort,\r\n        ...rest\r\n    } = props;\r\n    return (\r\n        <ListBase<RecordType>\r\n            debounce={debounce}\r\n            disableAuthentication={disableAuthentication}\r\n            disableSyncWithLocation={disableSyncWithLocation}\r\n            exporter={exporter}\r\n            filter={filter}\r\n            filterDefaultValues={filterDefaultValues}\r\n            perPage={perPage}\r\n            queryOptions={{ keepPreviousData: false }}\r\n            resource={resource}\r\n            sort={sort}\r\n        >\r\n            <ListViewGuesser {...rest} />\r\n        </ListBase>\r\n    );\r\n};\r\n\r\nconst ListViewGuesser = (props: Omit<ListViewProps, 'children'>) => {\r\n    const { data } = useListContext(props);\r\n    const resource = useResourceContext();\r\n    const { hasEdit, hasShow } = useResourceDefinition(props);\r\n    const [child, setChild] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setChild(null);\r\n    }, [resource]);\r\n\r\n    useEffect(() => {\r\n        if (data && data.length > 0 && !child) {\r\n            const inferredElements = getElementsFromRecords(\r\n                data,\r\n                listFieldTypes\r\n            );\r\n            const inferredChild = new InferredElement(\r\n                listFieldTypes.table,\r\n                { hasEdit, hasShow },\r\n                inferredElements\r\n            );\r\n            setChild(inferredChild.getElement());\r\n\r\n            if (process.env.NODE_ENV === 'production') return;\r\n\r\n            const representation = inferredChild.getRepresentation();\r\n            const components = ['List']\r\n                .concat(\r\n                    Array.from(\r\n                        new Set(\r\n                            Array.from(representation.matchAll(/<([^/\\s>]+)/g))\r\n                                .map(match => match[1])\r\n                                .filter(component => component !== 'span')\r\n                        )\r\n                    )\r\n                )\r\n                .sort();\r\n\r\n            // eslint-disable-next-line no-console\r\n            console.log(\r\n                `Guessed List:\r\n\r\nimport { ${components.join(', ')} } from 'react-admin';\r\n\r\nexport const ${inflection.capitalize(\r\n                    inflection.singularize(resource)\r\n                )}List = () => (\r\n    <List>\r\n${inferredChild.getRepresentation()}\r\n    </List>\r\n);`\r\n            );\r\n        }\r\n    }, [data, child, resource, hasEdit, hasShow]);\r\n\r\n    return <ListView {...props}>{child}</ListView>;\r\n};\r\n\r\nListViewGuesser.propTypes = ListView.propTypes;\r\n", "import * as React from 'react';\r\nimport { isElement } from 'react-is';\r\nimport { styled } from '@mui/material/styles';\r\nimport type { SxProps } from '@mui/material';\r\nimport { isValidElement, ReactNode, ReactElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Avatar,\r\n    List,\r\n    ListProps,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemButton,\r\n    ListItemIcon,\r\n    ListItemProps,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n} from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Identifier,\r\n    RaRecord,\r\n    RecordContextProvider,\r\n    sanitizeListRestProps,\r\n    useListContext,\r\n    useResourceContext,\r\n    useGetRecordRepresentation,\r\n    useCreatePath,\r\n    useTranslate,\r\n} from 'ra-core';\r\n\r\nimport { SimpleListLoading } from './SimpleListLoading';\r\nimport { ListNoResults } from '../ListNoResults';\r\n\r\n/**\r\n * The <SimpleList> component renders a list of records as a Material UI <List>.\r\n * It is usually used as a child of react-admin's <List> and <ReferenceManyField> components.\r\n *\r\n * Also widely used on Mobile.\r\n *\r\n * Props:\r\n * - primaryText: function returning a React element (or some text) based on the record\r\n * - secondaryText: same\r\n * - tertiaryText: same\r\n * - leftAvatar: function returning a React element based on the record\r\n * - leftIcon: same\r\n * - rightAvatar: same\r\n * - rightIcon: same\r\n * - linkType: 'edit' or 'show', or a function returning 'edit' or 'show' based on the record\r\n * - rowStyle: function returning a style object based on (record, index)\r\n * - rowSx: function returning a sx object based on (record, index)\r\n *\r\n * @example // Display all posts as a List\r\n * const postRowSx = (record, index) => ({\r\n *     backgroundColor: record.views >= 500 ? '#efe' : 'white',\r\n * });\r\n * export const PostList = () => (\r\n *     <List>\r\n *         <SimpleList\r\n *             primaryText={record => record.title}\r\n *             secondaryText={record => `${record.views} views`}\r\n *             tertiaryText={record =>\r\n *                 new Date(record.published_at).toLocaleDateString()\r\n *             }\r\n *             rowSx={postRowSx}\r\n *          />\r\n *     </List>\r\n * );\r\n */\r\nexport const SimpleList = <RecordType extends RaRecord = any>(\r\n    props: SimpleListProps<RecordType>\r\n) => {\r\n    const {\r\n        className,\r\n        empty = DefaultEmpty,\r\n        hasBulkActions,\r\n        leftAvatar,\r\n        leftIcon,\r\n        linkType = 'edit',\r\n        primaryText,\r\n        rightAvatar,\r\n        rightIcon,\r\n        secondaryText,\r\n        tertiaryText,\r\n        rowSx,\r\n        rowStyle,\r\n        ...rest\r\n    } = props;\r\n    const { data, isLoading, total } = useListContext<RecordType>(props);\r\n    const resource = useResourceContext(props);\r\n    const getRecordRepresentation = useGetRecordRepresentation(resource);\r\n    const translate = useTranslate();\r\n\r\n    if (isLoading === true) {\r\n        return (\r\n            <SimpleListLoading\r\n                className={className}\r\n                hasLeftAvatarOrIcon={!!leftIcon || !!leftAvatar}\r\n                hasRightAvatarOrIcon={!!rightIcon || !!rightAvatar}\r\n                hasSecondaryText={!!secondaryText}\r\n                hasTertiaryText={!!tertiaryText}\r\n            />\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Once loaded, the data for the list may be empty. Instead of\r\n     * displaying the table header with zero data rows,\r\n     * the SimpleList the empty component.\r\n     */\r\n    if (data == null || data.length === 0 || total === 0) {\r\n        if (empty) {\r\n            return empty;\r\n        }\r\n\r\n        return null;\r\n    }\r\n    const renderAvatar = (\r\n        record: RecordType,\r\n        avatarCallback: FunctionToElement<RecordType>\r\n    ) => {\r\n        const avatarValue = avatarCallback(record, record.id);\r\n        if (\r\n            typeof avatarValue === 'string' &&\r\n            (avatarValue.startsWith('http') || avatarValue.startsWith('data:'))\r\n        ) {\r\n            return <Avatar src={avatarValue} />;\r\n        } else {\r\n            return <Avatar>{avatarValue}</Avatar>;\r\n        }\r\n    };\r\n\r\n    return (total == null && data?.length > 0) || total > 0 ? (\r\n        <Root className={className} {...sanitizeListRestProps(rest)}>\r\n            {data.map((record, rowIndex) => (\r\n                <RecordContextProvider key={record.id} value={record}>\r\n                    <ListItem disablePadding>\r\n                        <LinkOrNot\r\n                            linkType={linkType}\r\n                            resource={resource}\r\n                            id={record.id}\r\n                            record={record}\r\n                            style={\r\n                                rowStyle\r\n                                    ? rowStyle(record, rowIndex)\r\n                                    : undefined\r\n                            }\r\n                            sx={rowSx?.(record, rowIndex)}\r\n                        >\r\n                            {leftIcon && (\r\n                                <ListItemIcon>\r\n                                    {leftIcon(record, record.id)}\r\n                                </ListItemIcon>\r\n                            )}\r\n                            {leftAvatar && (\r\n                                <ListItemAvatar>\r\n                                    {renderAvatar(record, leftAvatar)}\r\n                                </ListItemAvatar>\r\n                            )}\r\n                            <ListItemText\r\n                                primary={\r\n                                    <div>\r\n                                        {primaryText\r\n                                            ? typeof primaryText === 'string'\r\n                                                ? translate(primaryText, {\r\n                                                      ...record,\r\n                                                      _: primaryText,\r\n                                                  })\r\n                                                : isElement(primaryText)\r\n                                                ? primaryText\r\n                                                : primaryText(record, record.id)\r\n                                            : getRecordRepresentation(record)}\r\n\r\n                                        {!!tertiaryText &&\r\n                                            (isValidElement(tertiaryText) ? (\r\n                                                tertiaryText\r\n                                            ) : (\r\n                                                <span\r\n                                                    className={\r\n                                                        SimpleListClasses.tertiary\r\n                                                    }\r\n                                                >\r\n                                                    {typeof tertiaryText ===\r\n                                                    'string'\r\n                                                        ? translate(\r\n                                                              tertiaryText,\r\n                                                              {\r\n                                                                  ...record,\r\n                                                                  _: tertiaryText,\r\n                                                              }\r\n                                                          )\r\n                                                        : isElement(\r\n                                                              tertiaryText\r\n                                                          )\r\n                                                        ? tertiaryText\r\n                                                        : tertiaryText(\r\n                                                              record,\r\n                                                              record.id\r\n                                                          )}\r\n                                                </span>\r\n                                            ))}\r\n                                    </div>\r\n                                }\r\n                                secondary={\r\n                                    !!secondaryText &&\r\n                                    (typeof secondaryText === 'string'\r\n                                        ? translate(secondaryText, {\r\n                                              ...record,\r\n                                              _: secondaryText,\r\n                                          })\r\n                                        : isElement(secondaryText)\r\n                                        ? secondaryText\r\n                                        : secondaryText(record, record.id))\r\n                                }\r\n                            />\r\n                            {(rightAvatar || rightIcon) && (\r\n                                <ListItemSecondaryAction>\r\n                                    {rightAvatar && (\r\n                                        <Avatar>\r\n                                            {renderAvatar(record, rightAvatar)}\r\n                                        </Avatar>\r\n                                    )}\r\n                                    {rightIcon && (\r\n                                        <ListItemIcon>\r\n                                            {rightIcon(record, record.id)}\r\n                                        </ListItemIcon>\r\n                                    )}\r\n                                </ListItemSecondaryAction>\r\n                            )}\r\n                        </LinkOrNot>\r\n                    </ListItem>\r\n                </RecordContextProvider>\r\n            ))}\r\n        </Root>\r\n    ) : null;\r\n};\r\n\r\nSimpleList.propTypes = {\r\n    className: PropTypes.string,\r\n    leftAvatar: PropTypes.func,\r\n    leftIcon: PropTypes.func,\r\n    linkType: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.func,\r\n    ]),\r\n    primaryText: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.element,\r\n        PropTypes.string,\r\n    ]),\r\n    rightAvatar: PropTypes.func,\r\n    rightIcon: PropTypes.func,\r\n    secondaryText: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.element,\r\n        PropTypes.string,\r\n    ]),\r\n    tertiaryText: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.element,\r\n        PropTypes.string,\r\n    ]),\r\n    rowStyle: PropTypes.func,\r\n    rowSx: PropTypes.func,\r\n};\r\n\r\nexport type FunctionToElement<RecordType extends RaRecord = any> = (\r\n    record: RecordType,\r\n    id: Identifier\r\n) => ReactNode;\r\n\r\nexport interface SimpleListProps<RecordType extends RaRecord = any>\r\n    extends Omit<ListProps, 'classes'> {\r\n    className?: string;\r\n    empty?: ReactElement;\r\n    hasBulkActions?: boolean;\r\n    leftAvatar?: FunctionToElement<RecordType>;\r\n    leftIcon?: FunctionToElement<RecordType>;\r\n    primaryText?: FunctionToElement<RecordType> | ReactElement | string;\r\n    linkType?: string | FunctionLinkType | false;\r\n    rightAvatar?: FunctionToElement<RecordType>;\r\n    rightIcon?: FunctionToElement<RecordType>;\r\n    secondaryText?: FunctionToElement<RecordType> | ReactElement | string;\r\n    tertiaryText?: FunctionToElement<RecordType> | ReactElement | string;\r\n    rowSx?: (record: RecordType, index: number) => SxProps;\r\n    /**\r\n     * @deprecated Use rowSx instead\r\n     */\r\n    rowStyle?: (record: RecordType, index: number) => any;\r\n    // can be injected when using the component without context\r\n    resource?: string;\r\n    data?: RecordType[];\r\n    isLoading?: boolean;\r\n    isLoaded?: boolean;\r\n    total?: number;\r\n}\r\n\r\nconst LinkOrNot = (\r\n    props: LinkOrNotProps & Omit<ListItemProps, 'button' | 'component' | 'id'>\r\n) => {\r\n    const {\r\n        classes: classesOverride,\r\n        linkType,\r\n        resource,\r\n        id,\r\n        children,\r\n        record,\r\n        ...rest\r\n    } = props;\r\n    const createPath = useCreatePath();\r\n    const type =\r\n        typeof linkType === 'function' ? linkType(record, id) : linkType;\r\n\r\n    return type === false ? (\r\n        <ListItemText\r\n            // @ts-ignore\r\n            component=\"div\"\r\n            {...rest}\r\n        >\r\n            {children}\r\n        </ListItemText>\r\n    ) : (\r\n        // @ts-ignore\r\n        <ListItemButton\r\n            component={Link}\r\n            to={createPath({ resource, id, type })}\r\n            {...rest}\r\n        >\r\n            {children}\r\n        </ListItemButton>\r\n    );\r\n};\r\n\r\nexport type FunctionLinkType = (record: RaRecord, id: Identifier) => string;\r\n\r\nexport interface LinkOrNotProps {\r\n    linkType?: string | FunctionLinkType | false;\r\n    resource: string;\r\n    id: Identifier;\r\n    record: RaRecord;\r\n    children: ReactNode;\r\n}\r\n\r\nconst PREFIX = 'RaSimpleList';\r\n\r\nexport const SimpleListClasses = {\r\n    tertiary: `${PREFIX}-tertiary`,\r\n};\r\n\r\nconst Root = styled(List, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})({\r\n    [`& .${SimpleListClasses.tertiary}`]: { float: 'right', opacity: 0.541176 },\r\n});\r\n\r\nconst DefaultEmpty = <ListNoResults />;\r\n", "import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport {\r\n    List,\r\n    ListProps,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n} from '@mui/material';\r\nimport { useTimeout } from 'ra-core';\r\n\r\nimport { Placeholder } from '../Placeholder';\r\n\r\nexport const SimpleListLoading = (props: Props & ListProps) => {\r\n    const {\r\n        className,\r\n        hasLeftAvatarOrIcon,\r\n        hasRightAvatarOrIcon,\r\n        hasSecondaryText,\r\n        hasTertiaryText,\r\n        nbFakeLines = 5,\r\n        ...rest\r\n    } = props;\r\n\r\n    const oneSecondHasPassed = useTimeout(1000);\r\n\r\n    return oneSecondHasPassed ? (\r\n        <StyledList className={className} {...rest}>\r\n            {times(nbFakeLines, key => (\r\n                <ListItem key={key}>\r\n                    {hasLeftAvatarOrIcon && (\r\n                        <ListItemAvatar>\r\n                            <Avatar>&nbsp;</Avatar>\r\n                        </ListItemAvatar>\r\n                    )}\r\n                    <ListItemText\r\n                        primary={\r\n                            <div>\r\n                                <Placeholder\r\n                                    className={SimpleListLoadingClasses.primary}\r\n                                />\r\n                                {hasTertiaryText && (\r\n                                    <span\r\n                                        className={\r\n                                            SimpleListLoadingClasses.tertiary\r\n                                        }\r\n                                    >\r\n                                        <Placeholder />\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                        }\r\n                        secondary={\r\n                            hasSecondaryText ? <Placeholder /> : undefined\r\n                        }\r\n                    />\r\n                    {hasRightAvatarOrIcon && (\r\n                        <ListItemSecondaryAction>\r\n                            <Avatar>&nbsp;</Avatar>\r\n                        </ListItemSecondaryAction>\r\n                    )}\r\n                </ListItem>\r\n            ))}\r\n        </StyledList>\r\n    ) : null;\r\n};\r\n\r\nSimpleListLoading.propTypes = {\r\n    className: PropTypes.string,\r\n    hasLeftAvatarOrIcon: PropTypes.bool,\r\n    hasRightAvatarOrIcon: PropTypes.bool,\r\n    hasSecondaryText: PropTypes.bool,\r\n    hasTertiaryText: PropTypes.bool,\r\n    nbFakeLines: PropTypes.number,\r\n};\r\n\r\nconst PREFIX = 'RaSimpleListLoading';\r\n\r\nexport const SimpleListLoadingClasses = {\r\n    primary: `${PREFIX}-primary`,\r\n    tertiary: `${PREFIX}-tertiary`,\r\n};\r\n\r\nconst StyledList = styled(List, {\r\n    name: PREFIX,\r\n    overridesResolver: (props, styles) => styles.root,\r\n})(({ theme }) => ({\r\n    [`& .${SimpleListLoadingClasses.primary}`]: {\r\n        width: '30vw',\r\n        display: 'inline-block',\r\n        marginBottom: theme.spacing(),\r\n    },\r\n\r\n    [`& .${SimpleListLoadingClasses.tertiary}`]: {\r\n        float: 'right',\r\n        opacity: 0.541176,\r\n        minWidth: '10vw',\r\n    },\r\n}));\r\n\r\nconst times = (nbChildren, fn) =>\r\n    Array.from({ length: nbChildren }, (_, key) => fn(key));\r\n\r\ninterface Props {\r\n    className?: string;\r\n    hasLeftAvatarOrIcon?: boolean;\r\n    hasRightAvatarOrIcon?: boolean;\r\n    hasSecondaryText?: boolean;\r\n    hasTertiaryText?: boolean;\r\n    nbFakeLines?: number;\r\n}\r\n", "import * as React from 'react';\r\nimport { useResourceContext, usePreference } from 'ra-core';\r\n\r\nimport { Configurable } from '../../preferences';\r\nimport { SimpleList, SimpleListProps } from './SimpleList';\r\nimport { SimpleListEditor } from './SimpleListEditor';\r\n\r\nexport const SimpleListConfigurable = ({\r\n    preferenceKey,\r\n    ...props\r\n}: SimpleListProps & { preferenceKey?: string }) => {\r\n    const resource = useResourceContext(props);\r\n    return (\r\n        <Configurable\r\n            editor={<SimpleListEditor />}\r\n            preferenceKey={preferenceKey || `${resource}.SimpleList`}\r\n            sx={{ display: 'block' }}\r\n        >\r\n            <SimpleListWithPreferences {...props} />\r\n        </Configurable>\r\n    );\r\n};\r\n\r\nconst SimpleListWithPreferences = (props: SimpleListProps) => {\r\n    const [primaryTextFromStore] = usePreference('primaryText');\r\n    const [secondaryTextFromStore] = usePreference('secondaryText');\r\n    const [tertiaryTextFromStore] = usePreference('tertiaryText');\r\n    return (\r\n        <SimpleList\r\n            {...props}\r\n            primaryText={primaryTextFromStore || props.primaryText}\r\n            secondaryText={secondaryTextFromStore || props.secondaryText}\r\n            tertiaryText={tertiaryTextFromStore || props.tertiaryText}\r\n        />\r\n    );\r\n};\r\n\r\nSimpleListConfigurable.propTypes = SimpleList.propTypes;\r\n", "import * as React from 'react';\r\nimport { TextField } from '@mui/material';\r\nimport {\r\n    useTranslate,\r\n    usePreferenceInput,\r\n    useSetInspectorTitle,\r\n} from 'ra-core';\r\n\r\n/**\r\n * A component which provides a configuration UI to tweak the SimpleList\r\n *\r\n * @param {SimpleListEditorProps} props\r\n * @param props.defaultPrimaryText The SimpleList columns\r\n * @param {String} props.resource The resource\r\n * @param {String} props.preferenceKey The key of the columns preferences\r\n */\r\nexport const SimpleListEditor = (props: SimpleListEditorProps) => {\r\n    const {\r\n        defaultPrimaryText = '',\r\n        defaultSecondaryText = '',\r\n        defaultTertiatyText = '',\r\n    } = props;\r\n\r\n    useSetInspectorTitle('ra.inspector.SimpleList.title', { _: 'List' });\r\n    const translate = useTranslate();\r\n\r\n    const primaryTextField = usePreferenceInput(\r\n        'primaryText',\r\n        defaultPrimaryText\r\n    );\r\n    const secondaryTextField = usePreferenceInput(\r\n        'secondaryText',\r\n        defaultSecondaryText\r\n    );\r\n    const tertiaryTextField = usePreferenceInput(\r\n        'tertiaryText',\r\n        defaultTertiatyText\r\n    );\r\n\r\n    return (\r\n        <form>\r\n            <TextField\r\n                label={translate('ra.configurable.SimpleList.primaryText', {\r\n                    _: 'Primary Text',\r\n                })}\r\n                {...primaryTextField}\r\n                variant=\"filled\"\r\n                size=\"small\"\r\n                fullWidth\r\n                sx={{ mb: 1 }}\r\n            />\r\n            <TextField\r\n                label={translate('ra.configurable.SimpleList.secondaryText', {\r\n                    _: 'Secondary Text',\r\n                })}\r\n                {...secondaryTextField}\r\n                variant=\"filled\"\r\n                size=\"small\"\r\n                fullWidth\r\n                sx={{ mb: 1 }}\r\n            />\r\n            <TextField\r\n                label={translate('ra.configurable.SimpleList.tertiaryText', {\r\n                    _: 'Tertiary Text',\r\n                })}\r\n                {...tertiaryTextField}\r\n                variant=\"filled\"\r\n                size=\"small\"\r\n                fullWidth\r\n                sx={{ mb: 1 }}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport interface SimpleListEditorProps {\r\n    defaultPrimaryText?: string;\r\n    defaultSecondaryText?: string;\r\n    defaultTertiatyText?: string;\r\n}\r\n", "import * as React from 'react';\r\nimport { createElement, ComponentType } from 'react';\r\nimport { CoreAdminUI, CoreAdminUIProps } from 'ra-core';\r\nimport { ScopedCssBaseline } from '@mui/material';\r\n\r\nimport {\r\n    Layout as DefaultLayout,\r\n    LoadingPage,\r\n    NotFound,\r\n    Notification,\r\n} from './layout';\r\nimport { Login, AuthCallback } from './auth';\r\n\r\nexport const AdminUI = ({\r\n    layout = DefaultLayout,\r\n    catchAll = NotFound,\r\n    loading = LoadingPage,\r\n    loginPage = Login,\r\n    authCallbackPage = AuthCallback,\r\n    notification = Notification,\r\n    ...props\r\n}: AdminUIProps) => (\r\n    <ScopedCssBaseline enableColorScheme>\r\n        <CoreAdminUI\r\n            layout={layout}\r\n            catchAll={catchAll}\r\n            loading={loading}\r\n            loginPage={loginPage}\r\n            authCallbackPage={authCallbackPage}\r\n            {...props}\r\n        />\r\n        {createElement(notification)}\r\n    </ScopedCssBaseline>\r\n);\r\n\r\nexport interface AdminUIProps extends CoreAdminUIProps {\r\n    notification?: ComponentType;\r\n}\r\n", "import * as React from 'react';\r\nimport { CoreAdminContext, CoreAdminContextProps } from 'ra-core';\r\n\r\nimport { defaultLightTheme } from './defaultTheme';\r\nimport { ThemeProvider, ThemesContext, RaThemeOptions } from './layout/Theme';\r\n\r\nexport const AdminContext = (props: AdminContextProps) => {\r\n    const {\r\n        theme,\r\n        lightTheme = defaultLightTheme,\r\n        darkTheme,\r\n        defaultTheme,\r\n        children,\r\n        ...rest\r\n    } = props;\r\n    return (\r\n        <CoreAdminContext {...rest}>\r\n            <ThemesContext.Provider\r\n                value={{\r\n                    lightTheme: theme || lightTheme,\r\n                    darkTheme,\r\n                    defaultTheme,\r\n                }}\r\n            >\r\n                <ThemeProvider>{children}</ThemeProvider>\r\n            </ThemesContext.Provider>\r\n        </CoreAdminContext>\r\n    );\r\n};\r\n\r\nexport interface AdminContextProps extends CoreAdminContextProps {\r\n    lightTheme?: RaThemeOptions;\r\n    darkTheme?: RaThemeOptions;\r\n    defaultTheme?: 'light' | 'dark';\r\n}\r\n\r\nAdminContext.displayName = 'AdminContext';\r\n", "import { TranslationMessages } from 'ra-core';\r\n\r\nconst englishMessages: TranslationMessages = {\r\n    ra: {\r\n        action: {\r\n            add_filter: 'Add filter',\r\n            add: 'Add',\r\n            back: 'Go Back',\r\n            bulk_actions: '1 item selected |||| %{smart_count} items selected',\r\n            cancel: 'Cancel',\r\n            clear_array_input: 'Clear the list',\r\n            clear_input_value: 'Clear value',\r\n            clone: 'Clone',\r\n            confirm: 'Confirm',\r\n            create: 'Create',\r\n            create_item: 'Create %{item}',\r\n            delete: 'Delete',\r\n            edit: 'Edit',\r\n            export: 'Export',\r\n            list: 'List',\r\n            refresh: 'Refresh',\r\n            remove_filter: 'Remove this filter',\r\n            remove_all_filters: 'Remove all filters',\r\n            remove: 'Remove',\r\n            save: 'Save',\r\n            search: 'Search',\r\n            select_all: 'Select all',\r\n            select_row: 'Select this row',\r\n            show: 'Show',\r\n            sort: 'Sort',\r\n            undo: 'Undo',\r\n            unselect: 'Unselect',\r\n            expand: 'Expand',\r\n            close: 'Close',\r\n            open_menu: 'Open menu',\r\n            close_menu: 'Close menu',\r\n            update: 'Update',\r\n            move_up: 'Move up',\r\n            move_down: 'Move down',\r\n            open: 'Open',\r\n            toggle_theme: 'Toggle Theme',\r\n            select_columns: 'Columns',\r\n            update_application: 'Reload Application',\r\n        },\r\n        boolean: {\r\n            true: 'Yes',\r\n            false: 'No',\r\n            null: ' ',\r\n        },\r\n        page: {\r\n            create: 'Create %{name}',\r\n            dashboard: 'Dashboard',\r\n            edit: '%{name} %{recordRepresentation}',\r\n            error: 'Something went wrong',\r\n            list: '%{name}',\r\n            loading: 'Loading',\r\n            not_found: 'Not Found',\r\n            show: '%{name} %{recordRepresentation}',\r\n            empty: 'No %{name} yet.',\r\n            invite: 'Do you want to add one?',\r\n        },\r\n        input: {\r\n            file: {\r\n                upload_several:\r\n                    'Drop some files to upload, or click to select one.',\r\n                upload_single: 'Drop a file to upload, or click to select it.',\r\n            },\r\n            image: {\r\n                upload_several:\r\n                    'Drop some pictures to upload, or click to select one.',\r\n                upload_single:\r\n                    'Drop a picture to upload, or click to select it.',\r\n            },\r\n            references: {\r\n                all_missing: 'Unable to find references data.',\r\n                many_missing:\r\n                    'At least one of the associated references no longer appears to be available.',\r\n                single_missing:\r\n                    'Associated reference no longer appears to be available.',\r\n            },\r\n            password: {\r\n                toggle_visible: 'Hide password',\r\n                toggle_hidden: 'Show password',\r\n            },\r\n        },\r\n        message: {\r\n            about: 'About',\r\n            are_you_sure: 'Are you sure?',\r\n            auth_error:\r\n                'An error occurred while validating the authentication token.',\r\n            bulk_delete_content:\r\n                'Are you sure you want to delete this %{name}? |||| Are you sure you want to delete these %{smart_count} items?',\r\n            bulk_delete_title:\r\n                'Delete %{name} |||| Delete %{smart_count} %{name}',\r\n            bulk_update_content:\r\n                'Are you sure you want to update this %{name}? |||| Are you sure you want to update these %{smart_count} items?',\r\n            bulk_update_title:\r\n                'Update %{name} |||| Update %{smart_count} %{name}',\r\n            clear_array_input: 'Are you sure you want to clear the whole list?',\r\n            delete_content: 'Are you sure you want to delete this item?',\r\n            delete_title: 'Delete %{name} #%{id}',\r\n            details: 'Details',\r\n            error:\r\n                \"A client error occurred and your request couldn't be completed.\",\r\n\r\n            invalid_form: 'The form is not valid. Please check for errors',\r\n            loading: 'The page is loading, just a moment please',\r\n            no: 'No',\r\n            not_found:\r\n                'Either you typed a wrong URL, or you followed a bad link.',\r\n            yes: 'Yes',\r\n            unsaved_changes:\r\n                \"Some of your changes weren't saved. Are you sure you want to ignore them?\",\r\n        },\r\n        navigation: {\r\n            no_results: 'No results found',\r\n            no_more_results:\r\n                'The page number %{page} is out of boundaries. Try the previous page.',\r\n            page_out_of_boundaries: 'Page number %{page} out of boundaries',\r\n            page_out_from_end: 'Cannot go after last page',\r\n            page_out_from_begin: 'Cannot go before page 1',\r\n            page_range_info: '%{offsetBegin}-%{offsetEnd} of %{total}',\r\n            partial_page_range_info:\r\n                '%{offsetBegin}-%{offsetEnd} of more than %{offsetEnd}',\r\n            current_page: 'Page %{page}',\r\n            page: 'Go to page %{page}',\r\n            first: 'Go to first page',\r\n            last: 'Go to last page',\r\n            next: 'Go to next page',\r\n            previous: 'Go to previous page',\r\n            page_rows_per_page: 'Rows per page:',\r\n            skip_nav: 'Skip to content',\r\n        },\r\n        sort: {\r\n            sort_by: 'Sort by %{field} %{order}',\r\n            ASC: 'ascending',\r\n            DESC: 'descending',\r\n        },\r\n        auth: {\r\n            auth_check_error: 'Please login to continue',\r\n            user_menu: 'Profile',\r\n            username: 'Username',\r\n            password: 'Password',\r\n            sign_in: 'Sign in',\r\n            sign_in_error: 'Authentication failed, please retry',\r\n            logout: 'Logout',\r\n        },\r\n        notification: {\r\n            updated: 'Element updated |||| %{smart_count} elements updated',\r\n            created: 'Element created',\r\n            deleted: 'Element deleted |||| %{smart_count} elements deleted',\r\n            bad_item: 'Incorrect element',\r\n            item_doesnt_exist: 'Element does not exist',\r\n            http_error: 'Server communication error',\r\n            data_provider_error:\r\n                'dataProvider error. Check the console for details.',\r\n            i18n_error:\r\n                'Cannot load the translations for the specified language',\r\n            canceled: 'Action cancelled',\r\n            logged_out: 'Your session has ended, please reconnect.',\r\n            not_authorized: \"You're not authorized to access this resource.\",\r\n            application_update_available: 'A new version is available.',\r\n        },\r\n        validation: {\r\n            required: 'Required',\r\n            minLength: 'Must be %{min} characters at least',\r\n            maxLength: 'Must be %{max} characters or less',\r\n            minValue: 'Must be at least %{min}',\r\n            maxValue: 'Must be %{max} or less',\r\n            number: 'Must be a number',\r\n            email: 'Must be a valid email',\r\n            oneOf: 'Must be one of: %{options}',\r\n            regex: 'Must match a specific format (regexp): %{pattern}',\r\n            unique: 'Must be unique',\r\n        },\r\n        saved_queries: {\r\n            label: 'Saved queries',\r\n            query_name: 'Query name',\r\n            new_label: 'Save current query...',\r\n            new_dialog_title: 'Save current query as',\r\n            remove_label: 'Remove saved query',\r\n            remove_label_with_name: 'Remove query \"%{name}\"',\r\n            remove_dialog_title: 'Remove saved query?',\r\n            remove_message:\r\n                'Are you sure you want to remove that item from your list of saved queries?',\r\n            help: 'Filter the list and save this query for later',\r\n        },\r\n        configurable: {\r\n            customize: 'Customize',\r\n            configureMode: 'Configure this page',\r\n            inspector: {\r\n                title: 'Inspector',\r\n                content: 'Hover the application UI elements to configure them',\r\n                reset: 'Reset Settings',\r\n                hideAll: 'Hide All',\r\n                showAll: 'Show All',\r\n            },\r\n            Datagrid: {\r\n                title: 'Datagrid',\r\n                unlabeled: 'Unlabeled column #%{column}',\r\n            },\r\n            SimpleForm: {\r\n                title: 'Form',\r\n                unlabeled: 'Unlabeled input #%{input}',\r\n            },\r\n            SimpleList: {\r\n                title: 'List',\r\n                primaryText: 'Primary text',\r\n                secondaryText: 'Secondary text',\r\n                tertiaryText: 'Tertiary text',\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport default englishMessages;\r\n", "import defaultMessages from 'ra-language-english';\r\nimport polyglotI18nProvider from 'ra-i18n-polyglot';\r\n\r\nexport const defaultI18nProvider = polyglotI18nProvider(\r\n    () => defaultMessages,\r\n    'en',\r\n    [{ name: 'en', value: 'English' }],\r\n    { allowMissing: true }\r\n);\r\n"],
  "mappings": "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SAASE,aAAaH,QAAQI,MAAM;AAC3BJ,SAAAA,WAAW,MAAM;AACtB,QAAMK,OAAOzD,yBAAyBoD,QAAQI,IAAT;AACrC,QAAIC,MAAM;AACJA,UAAAA,KAAKC,KAAK;AACZ,eAAO5C,QAAQ2C,KAAKC,GAAN;MACf;AAED,UAAI,OAAOD,KAAKE,UAAU,YAAY;AACpC,eAAO7C,QAAQ2C,KAAKE,KAAN;MACf;IACF;AAEDP,aAASrD,eAAeqD,MAAD;EACxB;AAEQQ,WAAAA,cAAcX,SAAS;AAC9BY,YAAQC,KAAK,sBAAsBb,OAAnC;AACA,WAAO;EACR;AAED,SAAOW;AACR;ACjIM,IAAMG,SAAO9D,OAAO,CACzB,KACA,QACA,WACA,WACA,QACA,WACA,SACA,SACA,KACA,OACA,OACA,OACA,SACA,cACA,QACA,MACA,UACA,UACA,WACA,UACA,QACA,QACA,OACA,YACA,WACA,QACA,YACA,MACA,aACA,OACA,WACA,OACA,UACA,OACA,OACA,MACA,MACA,WACA,MACA,YACA,cACA,UACA,QACA,UACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,UACA,UACA,MACA,QACA,KACA,OACA,SACA,OACA,OACA,SACA,UACA,MACA,QACA,OACA,QACA,WACA,QACA,YACA,SACA,OACA,QACA,MACA,YACA,UACA,UACA,KACA,WACA,OACA,YACA,KACA,MACA,MACA,QACA,KACA,QACA,WACA,UACA,UACA,SACA,UACA,UACA,QACA,UACA,UACA,SACA,OACA,WACA,OACA,SACA,SACA,MACA,YACA,YACA,SACA,MACA,SACA,QACA,MACA,SACA,MACA,KACA,MACA,OACA,SACA,KArHyB,CAAD;AAyHnB,IAAM+D,QAAM/D,OAAO,CACxB,OACA,KACA,YACA,eACA,gBACA,gBACA,iBACA,oBACA,UACA,YACA,QACA,QACA,WACA,UACA,QACA,KACA,SACA,YACA,SACA,SACA,QACA,kBACA,UACA,QACA,YACA,SACA,QACA,WACA,WACA,YACA,kBACA,QACA,QACA,SACA,UACA,UACA,QACA,YACA,SACA,QACA,SACA,QACA,OA3CwB,CAAD;AA8ClB,IAAMgE,aAAahE,OAAO,CAC/B,WACA,iBACA,uBACA,eACA,oBACA,qBACA,qBACA,kBACA,WACA,WACA,WACA,WACA,WACA,kBACA,WACA,WACA,eACA,gBACA,YACA,gBACA,sBACA,eACA,UACA,cAxB+B,CAAD;AA+BzB,IAAMiE,gBAAgBjE,OAAO,CAClC,WACA,iBACA,UACA,WACA,gBACA,aACA,oBACA,kBACA,iBACA,iBACA,iBACA,SACA,aACA,QACA,gBACA,aACA,WACA,iBACA,UACA,OACA,cACA,WACA,KAvBkC,CAAD;AA0B5B,IAAMkE,WAASlE,OAAO,CAC3B,QACA,YACA,UACA,WACA,SACA,UACA,MACA,cACA,iBACA,MACA,MACA,SACA,WACA,YACA,SACA,QACA,MACA,UACA,SACA,UACA,QACA,QACA,WACA,UACA,OACA,SACA,OACA,UACA,YA7B2B,CAAD;AAkCrB,IAAMmE,mBAAmBnE,OAAO,CACrC,WACA,eACA,cACA,YACA,aACA,WACA,WACA,UACA,UACA,SACA,aACA,cACA,kBACA,eACA,MAfqC,CAAD;AAkB/B,IAAMoE,OAAOpE,OAAO,CAAC,OAAD,CAAD;ACpRnB,IAAM8D,OAAO9D,OAAO,CACzB,UACA,UACA,SACA,OACA,kBACA,gBACA,wBACA,YACA,cACA,WACA,UACA,WACA,eACA,eACA,WACA,QACA,SACA,SACA,SACA,QACA,WACA,YACA,gBACA,UACA,eACA,YACA,YACA,WACA,OACA,YACA,2BACA,yBACA,YACA,aACA,WACA,gBACA,QACA,OACA,WACA,UACA,UACA,QACA,QACA,YACA,MACA,aACA,aACA,SACA,QACA,SACA,QACA,QACA,WACA,QACA,OACA,OACA,aACA,SACA,UACA,OACA,aACA,YACA,SACA,QACA,SACA,WACA,cACA,UACA,QACA,WACA,WACA,eACA,eACA,UACA,WACA,WACA,cACA,YACA,OACA,YACA,OACA,YACA,QACA,QACA,WACA,cACA,SACA,YACA,SACA,QACA,SACA,QACA,WACA,SACA,OACA,UACA,QACA,SACA,WACA,YACA,SACA,aACA,QACA,UACA,UACA,SACA,SACA,SACA,MA7GyB,CAAD;AAgHnB,IAAM+D,MAAM/D,OAAO,CACxB,iBACA,cACA,YACA,sBACA,UACA,iBACA,iBACA,WACA,iBACA,kBACA,SACA,QACA,MACA,SACA,QACA,iBACA,aACA,aACA,SACA,uBACA,+BACA,iBACA,mBACA,MACA,MACA,KACA,MACA,MACA,mBACA,aACA,WACA,WACA,OACA,YACA,aACA,OACA,QACA,gBACA,aACA,UACA,eACA,eACA,iBACA,eACA,aACA,oBACA,gBACA,cACA,gBACA,eACA,MACA,MACA,MACA,MACA,cACA,YACA,iBACA,qBACA,UACA,QACA,MACA,mBACA,MACA,OACA,KACA,MACA,MACA,MACA,MACA,WACA,aACA,cACA,YACA,QACA,gBACA,kBACA,gBACA,oBACA,kBACA,SACA,cACA,cACA,gBACA,gBACA,eACA,eACA,oBACA,aACA,OACA,QACA,SACA,UACA,QACA,OACA,QACA,cACA,UACA,YACA,WACA,SACA,UACA,eACA,UACA,YACA,eACA,QACA,cACA,uBACA,oBACA,gBACA,UACA,iBACA,uBACA,kBACA,KACA,MACA,MACA,UACA,QACA,QACA,eACA,aACA,WACA,UACA,UACA,SACA,QACA,mBACA,oBACA,oBACA,gBACA,eACA,gBACA,eACA,cACA,gBACA,oBACA,qBACA,kBACA,mBACA,qBACA,kBACA,UACA,gBACA,SACA,gBACA,kBACA,YACA,WACA,WACA,aACA,oBACA,eACA,mBACA,kBACA,cACA,QACA,MACA,MACA,WACA,UACA,WACA,cACA,WACA,cACA,iBACA,iBACA,SACA,gBACA,QACA,gBACA,oBACA,oBACA,KACA,MACA,MACA,SACA,KACA,MACA,MACA,KACA,YAtLwB,CAAD;AAyLlB,IAAMkE,SAASlE,OAAO,CAC3B,UACA,eACA,SACA,YACA,SACA,gBACA,eACA,cACA,cACA,SACA,OACA,WACA,g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",
  "names": ["mediaQuery", "captures", "difference", "hasOwnProperty", "Symbol", "isObject", "key", "cloneDeep", "matches", "React", "React", "React", "import_prop_types", "React", "import_prop_types", "_a", "PropTypes", "_a", "__rest", "__assign", "Queue", "PropTypes", "React", "import_react", "import_prop_types", "_a", "defaultIcon", "__rest", "__assign", "StyledButton", "ContentAdd", "PropTypes", "PREFIX", "isEqual", "React", "import_react", "import_prop_types", "import_isEqual", "_a", "defaultIcon", "__rest", "__assign", "scrollStates", "stopPropagation", "ImageEye", "PropTypes", "isEqual", "React", "import_react", "_a", "defaultIcon", "handleClick", "StyledButton", "ArrowDropDownIcon", "SortIcon", "React", "import_prop_types", "React", "import_react", "import_prop_types", "React", "import_react", "import_prop_types", "React", "_a", "MenuIcon", "PREFIX", "React", "import_prop_types", "__rest", "__assign", "PropTypes", "PREFIX", "_a", "React", "import_react", "import_prop_types", "React", "import_react", "_a", "React", "import_react", "import_prop_types", "Logout", "__rest", "handleClick", "__assign", "ExitIcon", "PropTypes", "PREFIX", "_a", "defaultIcon", "Root", "PropTypes", "PREFIX", "AccountCircle", "React", "import_prop_types", "PropTypes", "React", "__assign", "import_react", "import_react", "_a", "defaultTheme", "import_react", "import_Brightness4", "import_Brightness7", "import_react", "_a", "useTheme", "React", "Brightness7Icon", "Brightness4Icon", "_a", "defaultTheme", "useTheme", "React", "Brightness7Icon", "Brightness4Icon", "_a", "__rest", "__assign", "PropTypes", "PREFIX", "React", "_a", "__rest", "__assign", "React", "import_prop_types", "Root", "PropTypes", "PREFIX", "_a", "React", "_a", "__rest", "__assign", "React", "import_react", "import_prop_types", "ActionCheck", "CancelIcon", "AlertError", "__rest", "handleClick", "__assign", "_a", "PropTypes", "PREFIX", "import_react", "import_prop_types", "import_react", "import_prop_types", "__rest", "_a", "React", "StyledMenuItem", "__assign", "PropTypes", "PREFIX", "_a", "React", "DashboardIcon", "__rest", "__assign", "PropTypes", "React", "_a", "mediaQuery", "__assign", "React", "import_react", "import_prop_types", "React", "import_react", "import_prop_types", "React", "React", "import_react", "_a", "Root", "SettingsIcon", "PREFIX", "React", "React", "Root", "DragIcon", "_a", "_a", "fields", "React", "import_react", "React", "_a", "version", "DeleteIcon", "CloseIcon", "PREFIX", "React", "import_Settings", "_a", "__rest", "handleClick", "__assign", "SettingsIcon", "React", "_a", "__rest", "__assign", "__assign", "_a", "__rest", "__rest", "_a", "container", "__assign", "PropTypes", "import_react", "Error", "__rest", "Root", "__assign", "ErrorIcon", "ExpandMoreIcon", "History", "PropTypes", "PREFIX", "_a", "import_react", "React", "changedArray", "ErrorBoundary", "React", "import_prop_types", "__rest", "_a", "__assign", "PropTypes", "PREFIX", "lodashGet", "React", "import_prop_types", "import_get", "React", "import_react", "_a", "DefaultIcon", "__spreadArray", "__rest", "Root", "__assign", "_a", "PropTypes", "PREFIX", "lodashGet", "_a", "AppBar", "Menu", "Sidebar", "__rest", "React", "__assign", "Error", "PREFIX", "React", "import_prop_types", "_a", "__rest", "__assign", "PropTypes", "PREFIX", "React", "import_prop_types", "_a", "__rest", "Root", "__assign", "PropTypes", "PREFIX", "React", "import_prop_types", "_a", "__rest", "__assign", "PropTypes", "React", "import_prop_types", "import_History", "__rest", "Root", "__assign", "sanitizeRestProps", "HotTub", "History", "goBack", "_a", "PropTypes", "PREFIX", "React", "import_react", "import_prop_types", "__rest", "_a", "__assign", "PropTypes", "PREFIX", "useTheme", "_a", "React", "import_react", "ThemeProvider", "_a", "defaultTheme", "useTheme", "React", "import_prop_types", "__assign", "PropTypes", "PREFIX", "_a", "import_react", "_a", "defaultIcon", "__rest", "__assign", "handleClick", "StyledButton", "sanitizeRestProps", "inflection", "PREFIX", "ActionDelete", "PropTypes", "React", "import_prop_types", "import_Delete", "_a", "defaultIcon", "__rest", "handleClick", "__assign", "StyledButton", "sanitizeRestProps", "ActionDelete", "PREFIX", "PropTypes", "_a", "__rest", "__assign", "PropTypes", "React", "import_react", "import_prop_types", "_a", "defaultIcon", "__rest", "handleClick", "__assign", "sanitizeRestProps", "DownloadIcon", "PropTypes", "React", "import_prop_types", "React", "import_react", "import_prop_types", "import_inflection", "_a", "defaultIcon", "__rest", "__assign", "handleClick", "StyledButton", "sanitizeRestProps", "inflection", "PropTypes", "PREFIX", "ActionUpdate", "React", "import_prop_types", "import_Update", "_a", "defaultIcon", "__rest", "__assign", "handleClick", "StyledButton", "sanitizeRestProps", "ActionUpdate", "PropTypes", "PREFIX", "_a", "__rest", "__assign", "PropTypes", "React", "import_prop_types", "React", "import_prop_types", "import_Delete", "_a", "defaultIcon", "__rest", "__assign", "ActionDelete", "PropTypes", "import_react", "import_prop_types", "import_Delete", "import_inflection", "_a", "defaultIcon", "__rest", "React", "__assign", "inflection", "ActionDelete", "PropTypes", "__rest", "__assign", "PropTypes", "React", "import_prop_types", "_a", "defaultIcon", "__rest", "StyledButton", "__assign", "scrollStates", "stopPropagation", "ContentCreate", "PropTypes", "PREFIX", "React", "import_react", "import_prop_types", "import_GetApp", "_a", "defaultIcon", "__rest", "handleClick", "__assign", "sanitizeRestProps", "DownloadIcon", "PropTypes", "React", "_a", "__rest", "handleClick", "__assign", "React", "import_react", "import_ExpandMore", "_a", "locale", "language", "Root", "LanguageIcon", "ExpandMoreIcon", "PREFIX", "React", "import_prop_types", "_a", "defaultIcon", "__rest", "__assign", "scrollStates", "ActionList", "PropTypes", "React", "import_react", "import_prop_types", "_a", "defaultIcon", "__rest", "handleClick", "__assign", "NavigationRefresh", "PropTypes", "React", "import_react", "import_prop_types", "import_Refresh", "_a", "defaultIcon", "__rest", "handleClick", "__assign", "NavigationRefresh", "PropTypes", "React", "import_react", "import_prop_types", "_a", "defaultIcon", "__rest", "handleSubmit", "__assign", "handleClick", "StyledButton", "ContentSave", "PropTypes", "PREFIX", "import_react", "React", "StyledButton", "PREFIX", "_a", "React", "import_prop_types", "React", "import_react", "import_prop_types", "import_Update", "import_inflection", "_a", "defaultIcon", "__rest", "handleClick", "__assign", "StyledButton", "sanitizeRestProps", "inflection", "PropTypes", "PREFIX", "ActionUpdate", "React", "import_prop_types", "import_Update", "_a", "defaultIcon", "__rest", "handleClick", "__assign", "StyledButton", "sanitizeRestProps", "ActionUpdate", "PropTypes", "PREFIX", "_a", "__rest", "__assign", "PropTypes", "_a", "__rest", "Root", "__assign", "LockIcon", "PropTypes", "PREFIX", "React", "import_react", "import_prop_types", "import_Lock", "React", "import_prop_types", "React", "import_react", "React", "import_react", "_a", "isEqual", "isRequired", "__rest", "React", "_a", "isRequired", "__rest", "Root", "PREFIX", "import_react", "__rest", "__awaiter", "error", "_a", "Root", "__assign", "PREFIX", "React", "import_react", "import_get", "import_prop_types", "import_react", "memo", "import_react", "React", "import_react", "import_react", "import_react", "_a", "record", "index", "source", "__rest", "__assign", "React", "__assign", "AddIcon", "React", "import_react", "__assign", "CloseIcon", "React", "_a", "ArrowUpwardIcon", "ArrowDownwardIcon", "React", "__assign", "ClearIcon", "_a", "__rest", "get", "Root", "PropTypes", "React", "import_react", "import_get", "import_isEqual", "React", "import_react", "create", "_a", "set", "__awaiter", "__spreadArray", "_b", "_a", "create", "__rest", "__assign", "isRequired", "__spreadArray", "_b", "debounce", "isEqual", "createElement", "get", "props", "PREFIX", "choices", "React", "_a", "__rest", "__assign", "React", "import_react", "import_prop_types", "import_prop_types", "PropTypes", "_a", "__rest", "__assign", "isRequired", "PropTypes", "React", "import_react", "import_prop_types", "import_get", "React", "__rest", "_a", "__assign", "PREFIX", "_a", "__rest", "__assign", "isRequired", "get", "__spreadArray", "sanitizeRestProps", "PropTypes", "PREFIX", "React", "import_react", "React", "import_react", "import_prop_types", "PREFIX", "_a", "import_react", "import_prop_types", "React", "import_prop_types", "_a", "__rest", "__assign", "PropTypes", "React", "import_react", "import_ExpandMore", "_a", "__rest", "__assign", "ExpandMoreIcon", "import_react", "import_react", "defaults", "React", "__rest", "handleClick", "__awaiter", "_a", "_b", "__assign", "PropTypes", "_a", "defaultData", "__rest", "__assign", "_b", "_c", "PropTypes", "React", "import_react", "import_prop_types", "__rest", "__assign", "PropTypes", "PREFIX", "_a", "React", "import_react", "import_prop_types", "import_ExpandMore", "React", "Root", "PREFIX", "_a", "_a", "ExpandMoreIcon", "PropTypes", "React", "import_react", "import_prop_types", "React", "import_react", "import_prop_types", "React", "import_react", "import_ExpandMore", "_a", "ExpandMoreIcon", "_a", "PropTypes", "import_react", "_a", "React", "React", "import_react", "import_prop_types", "__rest", "Root", "__assign", "_a", "CloseIcon", "PropTypes", "PREFIX", "React", "import_react", "_a", "__rest", "union", "difference", "id", "__assign", "sanitizeRestProps", "PropTypes", "injectedProps", "React", "React", "_a", "__rest", "__assign", "React", "_a", "handleClick", "__spreadArray", "columns", "__assign", "sanitizeRestProps", "ViewWeekIcon", "StyledButton", "__rest", "React", "import_react", "import_prop_types", "React", "import_react", "import_prop_types", "import_set", "import_get", "import_isEqual", "React", "import_prop_types", "import_HighlightOff", "Root", "ActionHide", "_a", "PropTypes", "PREFIX", "React", "__rest", "_a", "isEqual", "get", "cloneDeep", "unset", "__assign", "sanitizeRestProps", "PropTypes", "set", "PREFIX", "React", "import_react", "import_prop_types", "import_get", "import_isEqual", "import_query_string", "React", "import_react", "import_prop_types", "PropTypes", "_a", "React", "import_react", "_a", "handleFormSubmit", "React", "import_isEqual", "_a", "isEqual", "__spreadArray", "__rest", "_a", "isEqual", "lodashGet", "Root", "__assign", "sanitizeRestProps", "ContentFilter", "PropTypes", "PREFIX", "PropTypes", "PREFIX", "React", "__rest", "__assign", "React", "import_react_is", "import_react", "import_CancelOutlined", "arePropsEqual", "_a", "__rest", "handleClick", "__assign", "CancelIcon", "matches", "pickBy", "PREFIX", "React", "import_react", "_a", "__rest", "__assign", "_b", "_c", "SearchIcon", "React", "import_react", "import_AddCircleOutline", "_a", "__assign", "AddIcon", "React", "import_react", "import_RemoveCircleOutline", "_a", "__assign", "RemoveIcon", "React", "import_isEqual", "React", "import_react", "import_CancelOutlined", "import_isEqual", "import_query_string", "arePropsEqual", "isEqual", "_a", "StyledListItem", "CancelIcon", "PREFIX", "_a", "defaultIcon", "isEqual", "Root", "HelpIcon", "PREFIX", "BookmarkIcon", "React", "import_react", "_a", "defaultOptions", "React", "import_react", "import_prop_types", "React", "import_react", "import_prop_types", "_a", "__rest", "Root", "page", "__assign", "sanitizeRestProps", "PropTypes", "PREFIX", "_a", "__rest", "page", "__assign", "PropTypes", "React", "import_react", "choices", "__rest", "__assign", "__spreadArray", "_a", "React", "import_prop_types", "_a", "__rest", "__assign", "isRequired", "PropTypes", "React", "import_prop_types", "_a", "__rest", "__assign", "isRequired", "defaultInputLabelProps", "PropTypes", "convertDateToString", "React", "import_prop_types", "_a", "__rest", "__assign", "isRequired", "defaultInputLabelProps", "PropTypes", "leftPad", "leftPad2", "convertDateToString", "import_react", "import_prop_types", "import_react", "import_prop_types", "__awaiter", "__generator", "r", "_a", "__awaiter", "getInvalidTypeRejectionErr", "getTooLargeRejectionErr", "getTooSmallRejectionErr", "accepts", "_ref", "_unsupportedIterableToArray", "_arrayLikeToArray", "_slicedToArray", "_arrayWithHoles", "_iterableToArrayLimit", "_nonIterableRest", "ownKeys", "_objectSpread", "_defineProperty", "_ref", "React", "PropTypes", "initialState", "_objectSpread", "_slicedToArray", "onWindowFocus", "onDocumentDrop", "stopPropagation", "draggedFiles", "composeHandler", "composeKeyboardHandler", "composeDragHandler", "onDragEnter", "onDragOver", "onDragLeave", "onDrop", "_defineProperty", "React", "import_react", "import_prop_types", "_a", "RemoveIcon", "RemoveCircle", "__rest", "Root", "__assign", "PropTypes", "PREFIX", "_a", "__rest", "files", "__assign", "isRequired", "__spreadArray", "__awaiter", "React", "PropTypes", "PREFIX", "React", "__assign", "PREFIX", "_a", "React", "React", "import_react", "import_prop_types", "__rest", "_a", "ClearIcon", "__assign", "PropTypes", "PREFIX", "_a", "PREFIX", "React", "import_prop_types", "_a", "__rest", "__assign", "isRequired", "StyledTextField", "PropTypes", "PREFIX", "React", "import_prop_types", "_a", "__rest", "__assign", "isRequired", "value", "PropTypes", "React", "import_react", "React", "import_prop_types", "__rest", "_a", "__assign", "isRequired", "PropTypes", "_a", "__rest", "handleClick", "__assign", "Visibility", "VisibilityOff", "React", "import_prop_types", "import_get", "React", "_a", "_a", "defaultOptions", "__rest", "__assign", "isRequired", "StyledFormControl", "sanitizeRestProps", "get", "PropTypes", "choices", "isEqual", "PREFIX", "React", "import_prop_types", "_a", "defaultChildren", "__assign", "PropTypes", "React", "import_prop_types", "_a", "PropTypes", "import_react", "import_prop_types", "_a", "defaultChildren", "__assign", "React", "PropTypes", "React", "import_Search", "__rest", "__assign", "SearchIcon", "PREFIX", "React", "import_react", "import_prop_types", "create", "defaultOptions", "__rest", "__assign", "isRequired", "__spreadArray", "createElement", "_a", "StyledFormControl", "sanitizeRestProps", "PropTypes", "choices", "PREFIX", "React", "import_react", "import_react_is", "import_prop_types", "create", "_a", "__rest", "__assign", "isRequired", "__awaiter", "createElement", "__spreadArray", "StyledResettableTextField", "sanitizeRestProps", "PropTypes", "choices", "isEqual", "PREFIX", "React", "React", "import_react", "import_inflection", "__rest", "React", "__assign", "_a", "PREFIX", "_a", "StyledAppBar", "__assign", "PREFIX", "React", "import_react", "__rest", "Root", "__assign", "_a", "PREFIX", "Root", "_a", "__assign", "PREFIX", "_a", "StyledForm", "PREFIX", "PropTypes", "_a", "__rest", "Root", "__assign", "LockIcon", "PREFIX", "PropTypes", "_a", "__assign", "React", "import_prop_types", "React", "import_prop_types", "__rest", "Root", "__assign", "sanitizeRestProps", "_a", "PropTypes", "PREFIX", "__rest", "__assign", "PropTypes", "React", "import_prop_types", "_a", "__rest", "__assign", "sanitizeRestProps", "PropTypes", "React", "import_prop_types", "React", "import_prop_types", "React", "import_prop_types", "_a", "__rest", "__assign", "sanitizeRestProps", "PropTypes", "__rest", "Root", "__assign", "sanitizeRestProps", "_a", "PropTypes", "PREFIX", "__rest", "__assign", "PropTypes", "React", "React", "import_react", "import_prop_types", "import_get", "React", "import_react", "import_prop_types", "React", "import_react", "import_prop_types", "__rest", "StyledToolbar", "__assign", "_a", "PropTypes", "PREFIX", "React", "import_react", "import_prop_types", "__rest", "__assign", "PropTypes", "_a", "Component", "DefaultToolbar", "__rest", "Root", "__assign", "sanitizeRestProps", "PropTypes", "PREFIX", "React", "import_prop_types", "React", "import_react_is", "import_prop_types", "_a", "__rest", "__assign", "PropTypes", "__rest", "__assign", "sanitizeRestProps", "PropTypes", "_a", "__assign", "sanitizeRestProps", "_a", "__rest", "PropTypes", "get", "__spreadArray", "React", "import_prop_types", "_a", "Component", "DefaultComponent", "DefaultToolbar", "__rest", "__assign", "sanitizeRestProps", "PropTypes", "PREFIX", "React", "React", "_a", "__rest", "__assign", "_a", "__rest", "__assign", "React", "import_react", "import_inflection", "__rest", "__assign", "_a", "inflection", "React", "import_prop_types", "React", "import_prop_types", "React", "import_prop_types", "PropTypes", "__rest", "Root", "__assign", "sanitizeRestProps", "_a", "PropTypes", "PREFIX", "_a", "__rest", "__assign", "PropTypes", "React", "React", "import_get", "import_prop_types", "PropTypes", "import_react", "_a", "get", "emptyArray", "__assign", "React", "import_prop_types", "import_get", "import_Clear", "_a", "__rest", "_a", "DoneIcon", "ClearIcon", "__rest", "get", "__assign", "PropTypes", "PREFIX", "React", "import_get", "__rest", "get", "__assign", "PREFIX", "_a", "React", "import_prop_types", "import_get", "_a", "__rest", "get", "__assign", "PropTypes", "React", "import_get", "__rest", "get", "__assign", "stopPropagation", "React", "import_prop_types", "import_get", "__rest", "get", "__assign", "Root", "_a", "PropTypes", "PREFIX", "React", "import_react", "import_prop_types", "_a", "__rest", "__assign", "PropTypes", "React", "import_prop_types", "import_get", "__rest", "get", "__assign", "Root", "_a", "PropTypes", "PREFIX", "React", "import_prop_types", "import_get", "_a", "defaultTransform", "__rest", "get", "__assign", "PropTypes", "React", "import_react", "import_prop_types", "React", "import_react", "import_prop_types", "React", "import_prop_types", "Link", "__rest", "__assign", "PREFIX", "PropTypes", "_a", "Component", "Root", "__rest", "__assign", "Link", "stopPropagation", "_b", "PropTypes", "PREFIX", "_a", "__assign", "PropTypes", "Root", "PREFIX", "React", "import_prop_types", "import_get", "import_Error", "_a", "__rest", "get", "__assign", "PropTypes", "stopPropagation", "ErrorIcon", "Root", "Link", "PREFIX", "import_react", "import_Error", "__rest", "React", "ErrorIcon", "Link", "__assign", "_a", "import_react", "import_prop_types", "_a", "defaultFilter", "React", "PropTypes", "import_react", "import_prop_types", "_a", "React", "PropTypes", "React", "import_prop_types", "import_get", "hasOwnProperty", "Object", "setPrototypeOf", "isFrozen", "getPrototypeOf", "getOwnPropertyDescriptor", "freeze", "seal", "create", "Reflect", "apply", "construct", "fun", "thisValue", "args", "x", "Func", "_toConsumableArray", "arrayForEach", "unapply", "Array", "prototype", "forEach", "arrayPop", "pop", "arrayPush", "push", "stringToLowerCase", "String", "toLowerCase", "stringToString", "toString", "stringMatch", "match", "stringReplace", "replace", "stringIndexOf", "indexOf", "stringTrim", "trim", "regExpTest", "RegExp", "test", "typeErrorCreate", "unconstruct", "TypeError", "func", "thisArg", "addToSet", "set", "array", "transformCaseFunc", "l", "length", "element", "lcElement", "clone", "object", "newObject", "property", "lookupGetter", "prop", "desc", "get", "value", "fallbackValue", "console", "warn", "html", "svg", "svgFilters", "svgDisallowed", "mathMl", "mathMlDisallowed", "text", "xml", "MUSTACHE_EXPR", "ERB_EXPR", "TMPLIT_EXPR", "DATA_ATTR", "ARIA_ATTR", "IS_ALLOWED_URI", "IS_SCRIPT_OR_DATA", "ATTR_WHITESPACE", "DOCTYPE_NAME", "getGlobal", "window", "_createTrustedTypesPolicy", "trustedTypes", "document", "createPolicy", "suffix", "ATTR_NAME", "currentScript", "hasAttribute", "getAttribute", "policyName", "createHTML", "createScriptURL", "scriptUrl", "_", "createDOMPurify", "DOMPurify", "root", "version", "VERSION", "removed", "nodeType", "isSupported", "originalDocument", "DocumentFragment", "HTMLTemplateElement", "Node", "Element", "NodeFilter", "NamedNodeMap", "MozNamedAttrMap", "HTMLFormElement", "DOMParser", "ElementPrototype", "cloneNode", "getNextSibling", "getChildNodes", "getParentNode", "template", "createElement", "content", "ownerDocument", "trustedTypesPolicy", "emptyHTML", "implementation", "createNodeIterator", "createDocumentFragment", "getElementsByTagName", "importNode", "documentMode", "hooks", "createHTMLDocument", "undefined", "EXPRESSIONS", "ALLOWED_TAGS", "DEFAULT_ALLOWED_TAGS", "TAGS", "ALLOWED_ATTR", "DEFAULT_ALLOWED_ATTR", "ATTRS", "CUSTOM_ELEMENT_HANDLING", "tagNameCheck", "writable", "configurable", "enumerable", "attributeNameCheck", "allowCustomizedBuiltInElements", "FORBID_TAGS", "FORBID_ATTR", "ALLOW_ARIA_ATTR", "ALLOW_DATA_ATTR", "ALLOW_UNKNOWN_PROTOCOLS", "ALLOW_SELF_CLOSE_IN_ATTR", "SAFE_FOR_TEMPLATES", "WHOLE_DOCUMENT", "SET_CONFIG", "FORCE_BODY", "RETURN_DOM", "RETURN_DOM_FRAGMENT", "RETURN_TRUSTED_TYPE", "SANITIZE_DOM", "SANITIZE_NAMED_PROPS", "SANITIZE_NAMED_PROPS_PREFIX", "KEEP_CONTENT", "IN_PLACE", "USE_PROFILES", "FORBID_CONTENTS", "DEFAULT_FORBID_CONTENTS", "DATA_URI_TAGS", "DEFAULT_DATA_URI_TAGS", "URI_SAFE_ATTRIBUTES", "DEFAULT_URI_SAFE_ATTRIBUTES", "MATHML_NAMESPACE", "SVG_NAMESPACE", "HTML_NAMESPACE", "NAMESPACE", "IS_EMPTY_INPUT", "ALLOWED_NAMESPACES", "DEFAULT_ALLOWED_NAMESPACES", "PARSER_MEDIA_TYPE", "SUPPORTED_PARSER_MEDIA_TYPES", "DEFAULT_PARSER_MEDIA_TYPE", "CONFIG", "formElement", "isRegexOrFunction", "testValue", "Function", "_parseConfig", "cfg", "ADD_URI_SAFE_ATTR", "ADD_DATA_URI_TAGS", "ALLOWED_URI_REGEXP", "ADD_TAGS", "ADD_ATTR", "table", "tbody", "MATHML_TEXT_INTEGRATION_POINTS", "HTML_INTEGRATION_POINTS", "COMMON_SVG_AND_HTML_ELEMENTS", "ALL_SVG_TAGS", "ALL_MATHML_TAGS", "_checkValidNamespace", "parent", "tagName", "namespaceURI", "parentTagName", "Boolean", "_forceRemove", "node", "parentNode", "removeChild", "outerHTML", "remove", "_removeAttribute", "name", "attribute", "getAttributeNode", "from", "removeAttribute", "setAttribute", "_initDocument", "dirty", "doc", "leadingWhitespace", "matches", "dirtyPayload", "parseFromString", "documentElement", "createDocument", "innerHTML", "body", "insertBefore", "createTextNode", "childNodes", "call", "_createIterator", "SHOW_ELEMENT", "SHOW_COMMENT", "SHOW_TEXT", "_isClobbered", "elm", "nodeName", "textContent", "attributes", "hasChildNodes", "_isNode", "_executeHook", "entryPoint", "currentNode", "data", "hook", "_sanitizeElements", "allowedTags", "firstElementChild", "_basicCustomElementTest", "childCount", "i", "_isValidAttribute", "lcTag", "lcName", "_sanitizeAttributes", "attr", "hookEvent", "attrName", "attrValue", "keepAttr", "allowedAttributes", "forceKeepAttr", "getAttributeType", "setAttributeNS", "_sanitizeShadowDOM", "fragment", "shadowNode", "shadowIterator", "nextNode", "sanitize", "importedNode", "oldNode", "returnNode", "toStaticHTML", "appendChild", "firstChild", "nodeIterator", "shadowroot", "shadowrootmod", "serializedHTML", "doctype", "setConfig", "clearConfig", "isValidAttribute", "tag", "addHook", "hookFunction", "removeHook", "removeHooks", "removeAllHooks", "__rest", "_a", "get", "__assign", "PropTypes", "React", "import_prop_types", "import_get", "choices", "_a", "__rest", "get", "choice", "__assign", "PropTypes", "React", "import_get", "__rest", "_a", "get", "__assign", "React", "React", "import_react", "import_inflection", "_a", "__rest", "React", "__assign", "_a", "StyledAppBar", "__assign", "PREFIX", "React", "import_react", "_a", "__rest", "Root", "__assign", "PREFIX", "_a", "Root", "PREFIX", "React", "import_get", "__rest", "get", "__assign", "stopPropagation", "React", "_a", "React", "import_react", "import_prop_types", "_a", "__rest", "Root", "__assign", "sanitizeRestProps", "PropTypes", "PREFIX", "__assign", "_a", "__rest", "React", "import_react", "import_inflection", "_a", "__rest", "__assign", "inflection", "React", "import_react", "import_prop_types", "React", "import_react", "import_prop_types", "_a", "__rest", "__assign", "PropTypes", "React", "import_react", "import_prop_types", "_a", "__rest", "__assign", "PropTypes", "_a", "DefaultTabs", "__rest", "value", "Root", "__assign", "sanitizeRestProps", "PropTypes", "PREFIX", "React", "import_Error", "_a", "__rest", "ErrorIcon", "Link", "__assign", "React", "Root", "Inbox", "PREFIX", "_a", "React", "import_prop_types", "React", "import_react", "import_prop_types", "React", "import_react", "import_prop_types", "__rest", "Root", "__assign", "PropTypes", "PREFIX", "_a", "React", "import_react", "import_prop_types", "_a", "__rest", "__assign", "PropTypes", "defaultActions", "defaultPagination", "DefaultComponent", "_a", "__rest", "Error", "Root", "__assign", "PropTypes", "PREFIX", "_a", "debounce", "defaultFilter", "defaultPagination", "__rest", "__assign", "PropTypes", "React", "import_prop_types", "_a", "debounce", "defaultFilter", "__rest", "__assign", "PropTypes", "React", "__rest", "__assign", "_a", "React", "import_react", "import_inflection", "debounce", "__rest", "__assign", "_a", "inflection", "React", "import_react_is", "import_react", "import_prop_types", "React", "import_prop_types", "_a", "__rest", "StyledList", "__assign", "times", "PropTypes", "PREFIX", "_a", "DefaultEmpty", "__rest", "Root", "__assign", "PropTypes", "PREFIX", "React", "React", "_a", "__assign", "_a", "__rest", "__assign", "React", "import_react", "_a", "__rest", "__assign", "React", "_a", "defaultTheme", "__rest", "__assign", "ThemeProvider", "esm_default", "esm_default", "_a", "defaultTheme"]
}
